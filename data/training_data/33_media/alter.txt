<t>CREATE TABLE media (id INT PRIMARY KEY, title STRING, type STRING)</t><stat>ALTER TABLE media ADD COLUMN year INT</stat><divider><t>CREATE TABLE media (id INT PRIMARY KEY, title STRING, type STRING)</t><stat>alter table media add column year int</stat><divider><t>CREATE TABLE media (id INT PRIMARY KEY, title STRING, type STRING)</t><stat>ALTER TABLE media MODIFY COLUMN title VARCHAR(255)</stat><divider><t>CREATE TABLE media (id INT PRIMARY KEY, title STRING, type STRING)</t><stat>alter table media modify column title varchar(255)</stat><divider><t>CREATE TABLE media (id INT PRIMARY KEY, title STRING, type STRING)</t><stat>ALTER TABLE media DROP COLUMN type</stat><divider><t>CREATE TABLE media (id INT PRIMARY KEY, title STRING, type STRING)</t><stat>alter table media drop column type</stat><divider><t>CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));

CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));</t><stat>ALTER TABLE Media ADD COLUMN year INT;</stat><divider><t>CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));

CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));</t><stat>alter table media add column year int;</stat><divider><t>CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));

CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));</t><stat>ALTER TABLE Media ADD COLUMN year INT;</stat><divider><t>CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));

CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));</t><stat>alter table media add column year int;</stat><divider><t>CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));

CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));</t><stat>ALTER TABLE MediaContent ADD COLUMN description TEXT;</stat><divider><t>CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));

CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));</t><stat>alter table mediacontent add column description text;</stat><divider><t>CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));

CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));</t><stat>ALTER TABLE MediaContent ADD COLUMN description TEXT;</stat><divider><t>CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));

CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));</t><stat>alter table mediacontent add column description text;</stat><divider><t>CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));

CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));</t><stat>ALTER TABLE Media ADD CONSTRAINT type_check CHECK (type IN ('image', 'video', 'audio'));</stat><divider><t>CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));

CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));</t><stat>alter table media add constraint type_check check (type in ('image', 'video', 'audio'));</stat><divider><t>CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));

CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));</t><stat>ALTER TABLE Media ADD CONSTRAINT type_check CHECK (type IN ('image', 'video', 'audio'));</stat><divider><t>CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));

CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));</t><stat>alter table media add constraint type_check check (type in ('image', 'video', 'audio'));</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>ALTER TABLE Media ADD COLUMN genre VARCHAR(50)</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>alter table media add column genre varchar(50)</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>ALTER TABLE Media ADD COLUMN genre VARCHAR(50)</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>alter table media add column genre varchar(50)</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>ALTER TABLE Media ADD COLUMN genre VARCHAR(50)</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>alter table media add column genre varchar(50)</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>ALTER TABLE Media ADD COLUMN genre VARCHAR(50)</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>alter table media add column genre varchar(50)</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>ALTER TABLE Media ADD COLUMN genre VARCHAR(50)</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>alter table media add column genre varchar(50)</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>ALTER TABLE Media ADD COLUMN genre VARCHAR(50)</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>alter table media add column genre varchar(50)</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>ALTER TABLE MediaAuthors ADD COLUMN role VARCHAR(50)</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>alter table mediaauthors add column role varchar(50)</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>ALTER TABLE MediaAuthors ADD COLUMN role VARCHAR(50)</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>alter table mediaauthors add column role varchar(50)</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>ALTER TABLE MediaAuthors ADD COLUMN role VARCHAR(50)</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>alter table mediaauthors add column role varchar(50)</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>ALTER TABLE MediaAuthors ADD COLUMN role VARCHAR(50)</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>alter table mediaauthors add column role varchar(50)</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>ALTER TABLE MediaAuthors ADD COLUMN role VARCHAR(50)</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>alter table mediaauthors add column role varchar(50)</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>ALTER TABLE MediaAuthors ADD COLUMN role VARCHAR(50)</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>alter table mediaauthors add column role varchar(50)</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>ALTER TABLE MediaReviews ADD COLUMN reviewed_date DATE</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>alter table mediareviews add column reviewed_date date</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>ALTER TABLE MediaReviews ADD COLUMN reviewed_date DATE</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>alter table mediareviews add column reviewed_date date</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>ALTER TABLE MediaReviews ADD COLUMN reviewed_date DATE</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>alter table mediareviews add column reviewed_date date</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>ALTER TABLE MediaReviews ADD COLUMN reviewed_date DATE</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>alter table mediareviews add column reviewed_date date</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>ALTER TABLE MediaReviews ADD COLUMN reviewed_date DATE</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>alter table mediareviews add column reviewed_date date</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>ALTER TABLE MediaReviews ADD COLUMN reviewed_date DATE</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>alter table mediareviews add column reviewed_date date</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media ADD COLUMN rating FLOAT</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media add column rating float</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media_Actors ADD COLUMN role VARCHAR(100)</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media_actors add column role varchar(100)</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>ALTER TABLE Media DROP COLUMN release_year</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>alter table media drop column release_year</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_content ADD COLUMN author_name VARCHAR(100);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_content add column author_name varchar(100);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_category ADD COLUMN parent_category_id UUID REFERENCES media_category(id);</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_category add column parent_category_id uuid references media_category(id);</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>alter table media_files alter column file_size type bigint;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>ALTER TABLE media_files ALTER COLUMN file_size TYPE BIGINT;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>alter table media_files alter column file_size type bigint;</stat>