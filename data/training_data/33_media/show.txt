<t>CREATE TABLE media (id INT PRIMARY KEY, title STRING, type STRING)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE media (id INT PRIMARY KEY, title STRING, type STRING)</t><stat>show tables</stat><divider><t>CREATE TABLE media (id INT PRIMARY KEY, title STRING, type STRING)</t><stat>SHOW COLUMNS FROM media</stat><divider><t>CREATE TABLE media (id INT PRIMARY KEY, title STRING, type STRING)</t><stat>show columns from media</stat><divider><t>CREATE TABLE media (id INT PRIMARY KEY, title STRING, type STRING)</t><stat>SHOW CREATE TABLE media</stat><divider><t>CREATE TABLE media (id INT PRIMARY KEY, title STRING, type STRING)</t><stat>show create table media</stat><divider><t>CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));

CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));

CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));</t><stat>show tables</stat><divider><t>CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));

CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));

CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));</t><stat>show tables</stat><divider><t>CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));

CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));

CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));</t><stat>show columns from media</stat><divider><t>CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));

CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));

CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));

CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));</t><stat>SHOW COLUMNS FROM MediaContent</stat><divider><t>CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));

CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));</t><stat>show columns from mediacontent</stat><divider><t>CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));

CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));</t><stat>SHOW COLUMNS FROM MediaContent</stat><divider><t>CREATE TABLE MediaContent (content_id SERIAL PRIMARY KEY, media_id INT NOT NULL, content BYTEA NOT NULL, content_type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, FOREIGN KEY (media_id) REFERENCES Media(id), PRIMARY KEY (content_id));

CREATE TABLE Media (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, type VARCHAR(50) NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT now(), updated_at TIMESTAMPTZ, PRIMARY KEY (id));</t><stat>show columns from mediacontent</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>show tables</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>show tables</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>show tables</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>show tables</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>show tables</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>show tables</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>show columns from media</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>show columns from media</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>show columns from media</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>show columns from media</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>SHOW INDEX FROM MediaReviews</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>show index from mediareviews</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>SHOW INDEX FROM MediaReviews</stat><divider><t>CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>show index from mediareviews</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>SHOW INDEX FROM MediaReviews</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)</t><stat>show index from mediareviews</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>SHOW INDEX FROM MediaReviews</stat><divider><t>CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>show index from mediareviews</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>SHOW INDEX FROM MediaReviews</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)</t><stat>show index from mediareviews</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>SHOW INDEX FROM MediaReviews</stat><divider><t>CREATE TABLE MediaReviews (review_id INT PRIMARY KEY, media_id INT, user_id INT, rating INT, review_text TEXT, FOREIGN KEY (media_id) REFERENCES Media(media_id)

CREATE TABLE MediaAuthors (media_id INT, author_id INT, FOREIGN KEY (media_id) REFERENCES Media(media_id), FOREIGN KEY (author_id) REFERENCES Authors(author_id)

CREATE TABLE Media (media_id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), published_date DATE)</t><stat>show index from mediareviews</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show tables</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show tables</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show create table media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW CREATE TABLE Media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show create table media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))</t><stat>show columns from media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>SHOW COLUMNS FROM Media</stat><divider><t>CREATE TABLE Media_Genres (media_id INT, genre_name VARCHAR(50), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Directors (media_id INT, director_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media_Actors (media_id INT, actor_name VARCHAR(255), FOREIGN KEY (media_id) REFERENCES Media(id))

CREATE TABLE Media (id INT PRIMARY KEY, title VARCHAR(255), type VARCHAR(50), release_year INT)</t><stat>show columns from media</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM media_type;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show columns from media_type;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);
</t><stat>show index from media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>SHOW INDEX FROM media_tags;</stat><divider><t>CREATE TABLE media_tags (
    id UUID PRIMARY KEY,
    tag_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_files (
    id UUID PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_size INT NOT NULL,
    content_id UUID REFERENCES media_content(id),
);


CREATE TABLE media_type (
    id UUID PRIMARY KEY,
    type_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_category (
    id UUID PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
);


CREATE TABLE media_content (
    id UUID PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP
);
</t><stat>show index from media_tags;</stat>