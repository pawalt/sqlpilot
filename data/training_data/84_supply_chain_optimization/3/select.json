[
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM inventory",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity FROM inventory WHERE quantity > 10",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE supplier_id = 1",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name FROM inventory WHERE quantity < reorder_point",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity FROM inventory WHERE supplier_id = 2 AND quantity < 20",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name, supplier_id FROM inventory WHERE product_name LIKE '%apple%'",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity FROM inventory ORDER BY product_name ASC",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity FROM inventory ORDER BY quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM inventory GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS count FROM inventory GROUP BY supplier_id",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(quantity) AS max_quantity FROM inventory GROUP BY product_name HAVING max_quantity > 50",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT supplier_id, AVG(quantity) AS avg_quantity FROM inventory GROUP BY supplier_id",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM inventory LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity FROM inventory OFFSET 3",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity FROM inventory WHERE supplier_id IN (1, 2, 3)",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM inventory WHERE quantity BETWEEN 10 AND 50",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM inventory WHERE product_name IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity FROM inventory UNION SELECT id, product_name, quantity FROM inventory",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM inventory INTERSECT SELECT product_name, quantity FROM inventory",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity > 0 AND supplier_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity, supplier_id FROM inventory WHERE supplier_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name FROM inventory WHERE quantity < reorder_point;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, quantity FROM inventory WHERE supplier_id = 2 AND reorder_point < quantity;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE supplier_id = 4 ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name FROM inventory WHERE quantity <= reorder_point AND supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name, supplier_id FROM inventory WHERE quantity > 10 OR reorder_point < 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity < 20 AND supplier_id != 3;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name FROM inventory WHERE quantity <= reorder_point LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, quantity FROM inventory WHERE supplier_id = 1 AND quantity >= reorder_point;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE supplier_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name, supplier_id FROM inventory WHERE supplier_id IN (4, 5);",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity > 15 AND supplier_id = 2 ORDER BY product_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity FROM inventory WHERE supplier_id = 3 AND quantity < reorder_point;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE supplier_id = 5 AND quantity > reorder_point LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, quantity, supplier_id FROM inventory WHERE quantity > 5 OR reorder_point < 10;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name FROM inventory WHERE supplier_id = 2 AND quantity > 50;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE supplier_id = 1 AND quantity >= reorder_point ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity FROM inventory WHERE supplier_id = 4 AND reorder_point < quantity;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    reorder_point INT NOT NULL,\n    supplier_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE supplier_id = 3 AND quantity < 5 LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT order_date, total_price FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM Products WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT order_id, order_date, total_price FROM Orders WHERE total_price > 100;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Products INNER JOIN Orders ON Products.product_id = Orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM Products LEFT JOIN Orders ON Products.product_id = Orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders INNER JOIN Products ON Orders.product_id = Products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT order_date, total_price FROM Orders RIGHT JOIN Products ON Orders.product_id = Products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM Products WHERE unit_price < 50;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE quantity > 5 AND unit_price < 100;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM Products WHERE quantity >= 20;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT order_date, total_price FROM Orders WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Products ORDER BY product_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders ORDER BY total_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Products WHERE product_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT order_id, order_date FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Products WHERE quantity BETWEEN 10 AND 50;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_products FROM Products",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Products WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM Products WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, total_price FROM Products JOIN Orders ON Products.product_id = Orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) AS total_quantity FROM Orders GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(unit_price) AS avg_price FROM Products GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Products WHERE unit_price > (SELECT AVG(unit_price) FROM Products);",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_id, MAX(unit_price) AS max_price FROM Products GROUP BY product_id HAVING MAX(unit_price) > 100;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_id, COUNT(*) AS num_orders FROM Orders GROUP BY product_id HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(total_price) AS total_revenue FROM Products JOIN Orders ON Products.product_id = Orders.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS num_orders, AVG(total_price) AS avg_price FROM Products JOIN Orders ON Products.product_id = Orders.product_id GROUP BY product_name HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE EXISTS (SELECT * FROM Products WHERE Products.product_id = Orders.product_id AND quantity > 10);",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, total_price FROM Products WHERE product_id IN (SELECT product_id FROM Orders WHERE total_price > 500);",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(unit_price) AS max_price FROM Products WHERE unit_price < 50 GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT order_id, order_date FROM Orders WHERE total_price = (SELECT MAX(total_price) FROM Orders);",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM Products JOIN Orders ON Products.product_id = Orders.product_id WHERE order_date BETWEEN '2021-01-01' AND '2021-06-30' GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(unit_price) AS avg_price FROM Products JOIN Orders ON Products.product_id = Orders.product_id WHERE order_date > '2021-09-01' GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, total_price FROM Products JOIN (SELECT product_id, SUM(quantity) AS total_quantity FROM Orders GROUP BY product_id) AS temp ON Products.product_id = temp.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, MIN(unit_price) AS min_price FROM Products GROUP BY product_name HAVING MIN(unit_price) < 10;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  unit_price DECIMAL\n);\n\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  order_date DATE,\n  quantity INT,\n  unit_price DECIMAL,\n  total_price DECIMAL,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity * unit_price AS revenue FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, address FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT order_date, supplier_id, product_id FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT id, product_name, unit_price FROM inventory WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, email FROM suppliers WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT order_date, quantity FROM orders WHERE supplier_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT id, product_name, unit_price FROM inventory WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, address FROM suppliers WHERE supplier_name LIKE '%Co%';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, email FROM suppliers WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT order_date, quantity FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity, unit_price FROM inventory WHERE unit_price > 50;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, email FROM suppliers WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT order_date, quantity FROM orders WHERE product_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT id, product_name, unit_price FROM inventory WHERE product_name LIKE '%Chair%';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, address FROM suppliers WHERE id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT order_date, product_id, quantity FROM orders WHERE quantity > 5 AND product_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT id, product_name FROM inventory ORDER BY product_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, email FROM suppliers ORDER BY supplier_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT order_date, quantity FROM orders ORDER BY order_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, unit_price FROM inventory WHERE unit_price < 50;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, address, contact_person FROM suppliers WHERE supplier_name LIKE '%Supplier%';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT orders.*, suppliers.supplier_name, inventory.product_name FROM orders JOIN suppliers ON orders.supplier_id = suppliers.id JOIN inventory ON orders.product_id = inventory.id;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT order_date, quantity, product_name FROM orders JOIN inventory ON orders.product_id = inventory.id WHERE order_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, SUM(quantity) AS total_quantity_ordered FROM suppliers JOIN orders ON suppliers.id = orders.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity_sold FROM inventory JOIN orders ON inventory.id = orders.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(*) AS total_orders_placed FROM suppliers JOIN orders ON suppliers.id = orders.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(unit_price) AS avg_unit_price FROM inventory WHERE quantity > 0 GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, MAX(quantity) AS max_quantity_ordered FROM suppliers JOIN orders ON suppliers.id = orders.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, MIN(quantity) AS min_quantity_ordered FROM suppliers JOIN orders ON suppliers.id = orders.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, AVG(quantity) AS avg_quantity_ordered FROM suppliers JOIN orders ON suppliers.id = orders.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, MIN(unit_price) AS min_unit_price FROM inventory WHERE quantity > 0 GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT address, COUNT(*) AS total_orders_received FROM suppliers JOIN orders ON suppliers.id = orders.supplier_id GROUP BY address;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT(supplier_name) FROM suppliers WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, MAX(quantity) AS max_quantity_ordered FROM suppliers JOIN orders ON suppliers.id = orders.supplier_id WHERE orders.quantity > 5 GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity_sold FROM inventory JOIN orders ON inventory.id = orders.product_id WHERE orders.quantity > 10 GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, AVG(unit_price) AS avg_unit_price FROM suppliers JOIN orders ON suppliers.id = orders.supplier_id JOIN inventory ON orders.product_id = inventory.id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT order_date, sum(quantity) AS total_quantity_ordered FROM orders GROUP BY order_date HAVING total_quantity_ordered > 50;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(DISTINCT(order_date)) AS total_order_dates FROM orders JOIN suppliers ON orders.supplier_id = suppliers.id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL\n);\n\n\nCREATE TABLE suppliers (\n    id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    address VARCHAR(255),\n    contact_person VARCHAR(255),\n    email VARCHAR(255)\n);\n\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY,\n    order_date DATE,\n    supplier_id INT,\n    product_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, quantity FROM inventory WHERE unit_price BETWEEN 20 AND 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, unit_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products WHERE quantity_in_stock > 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products WHERE unit_price < 50.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT product_name, supplier_name FROM products INNER JOIN suppliers ON products.supplier_id = suppliers.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT order_id, order_date FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT product_id, quantity_ordered FROM orders WHERE quantity_ordered > 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_location FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_date, shipment_status FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT shipment_status FROM shipments WHERE shipment_date < '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, supplier_name FROM products INNER JOIN suppliers ON products.supplier_id = suppliers.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_name LIKE '%Apple%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_number FROM suppliers WHERE supplier_location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT product_id, quantity_in_stock FROM products WHERE quantity_in_stock < reorder_level;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT order_id, shipment_date FROM shipments INNER JOIN orders ON shipments.order_id = orders.order_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products ORDER BY unit_price ASC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM shipments ORDER BY shipment_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE unit_price > 50 AND quantity_in_stock < 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT p.product_name, p.unit_price, s.supplier_name FROM products p JOIN suppliers s ON p.supplier_id = s.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT SUM(quantity_ordered) AS total_ordered FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT s.supplier_name, COUNT(*) AS total_shipments FROM suppliers s JOIN shipments sh ON s.supplier_id = sh.order_id GROUP BY s.supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT p.product_id, p.product_name, SUM(quantity_ordered) AS total_ordered FROM products p JOIN orders o ON p.product_id = o.product_id GROUP BY p.product_id, p.product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE supplier_id IN (SELECT supplier_id FROM suppliers WHERE supplier_location = 'USA');",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT o.order_id, o.order_date, p.product_name, p.quantity_ordered FROM orders o JOIN products p ON o.product_id = p.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT p.product_name, o.order_date, s.supplier_name FROM products p JOIN orders o ON p.product_id = o.product_id JOIN suppliers s ON p.supplier_id = s.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT s.supplier_name, SUM(unit_price * quantity_in_stock) AS total_stock_value FROM suppliers s JOIN products p ON s.supplier_id = p.supplier_id GROUP BY s.supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_date, shipment_status FROM shipments WHERE shipment_status = 'Shipped';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT p.product_name, COUNT(*) AS total_times_ordered FROM products p JOIN orders o ON p.product_id = o.product_id GROUP BY p.product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT p.product_name, p.unit_price, s.supplier_name, sh.shipment_date FROM products p JOIN suppliers s ON p.supplier_id = s.supplier_id JOIN orders o ON p.product_id = o.product_id JOIN shipments sh ON o.order_id = sh.order_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT s.supplier_name, COUNT(*) AS total_orders_placed FROM suppliers s JOIN products p ON s.supplier_id = p.supplier_id JOIN orders o ON p.product_id = o.product_id GROUP BY s.supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT p.product_name, SUM(quantity_ordered) AS total_ordered, MAX(unit_price) AS max_price FROM products p JOIN orders o ON p.product_id = o.product_id GROUP BY p.product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT s.supplier_name, AVG(unit_price) AS avg_price FROM suppliers s JOIN products p ON s.supplier_id = p.supplier_id GROUP BY s.supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM orders WHERE order_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, quantity_in_stock FROM products WHERE quantity_in_stock <= reorder_level;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_number FROM suppliers WHERE supplier_location = 'Europe';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT supplier_id) AS total_suppliers FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT AVG(quantity_ordered) AS avg_quantity_ordered FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT,\n    reorder_level INT,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    order_date DATE,\n    product_id INT,\n    quantity_ordered INT,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_location VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    shipment_date DATE,\n    shipment_status VARCHAR(50),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT p.product_name, SUM(quantity_ordered) AS total_ordered, MAX(unit_price) AS max_price FROM products p JOIN orders o ON p.product_id = o.product_id GROUP BY p.product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT supplier_name, city, country FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT order_id, product_id, supplier_id FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM warehouses;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT location FROM warehouses;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT shipment_id, order_id, warehouse_id FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT supplier_name, city FROM suppliers WHERE country = 'USA';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT order_id, order_date, quantity FROM orders ORDER BY order_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_date FROM shipments ORDER BY shipment_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM products LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT supplier_name, country FROM suppliers WHERE city = 'London';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT order_id, product_id, supplier_id, quantity FROM orders WHERE quantity > 50 AND supplier_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM warehouses WHERE location LIKE '%East%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT order_id, product_id, quantity FROM orders WHERE product_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_date FROM shipments WHERE shipment_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products WHERE unit_price < 50.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE country = 'USA';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT supplier_name, city FROM suppliers WHERE city = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM orders INNER JOIN products ON orders.product_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT supplier_name, country FROM suppliers INNER JOIN orders ON suppliers.supplier_id = orders.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, quantity FROM orders INNER JOIN products ON orders.product_id = products.product_id WHERE quantity > 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT supplier_name, city, order_date FROM suppliers INNER JOIN orders ON suppliers.supplier_id = orders.supplier_id WHERE city = 'Los Angeles';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, shipment_date FROM orders INNER JOIN shipments ON orders.order_id = shipments.order_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM warehouses WHERE location LIKE '%Central%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT supplier_name, city, country FROM suppliers WHERE city = 'Chicago' OR country = 'Canada';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products WHERE unit_price > 100.00 AND quantity < 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT supplier_name, city FROM suppliers WHERE supplier_id IN (SELECT supplier_id FROM orders WHERE quantity > 100);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products WHERE quantity = (SELECT MAX(quantity) FROM products);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) AS total_quantity FROM orders GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(*) AS total_orders FROM suppliers INNER JOIN orders ON suppliers.supplier_id = orders.supplier_id GROUP BY suppliers.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products ORDER BY unit_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT supplier_name, country FROM suppliers ORDER BY country, supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    city VARCHAR(100) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    supplier_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    shipment_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, shipment_date FROM products INNER JOIN orders ON products.product_id = orders.product_id INNER JOIN shipments ON orders.order_id = shipments.order_id ORDER BY shipment_date DESC;"
]