[
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (1, 101, '2022-01-01', 10, 100.00) ON DUPLICATE KEY UPDATE product_id = 101, order_date = '2022-01-01', quantity = 10, total_amount = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (2, 102, '2022-01-02', 15, 150.00) ON DUPLICATE KEY UPDATE product_id = 102, order_date = '2022-01-02', quantity = 15, total_amount = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (3, 103, '2022-01-03', 20, 200.00) ON DUPLICATE KEY UPDATE product_id = 103, order_date = '2022-01-03', quantity = 20, total_amount = 200.00;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (4, 104, '2022-01-04', 25, 250.00) ON DUPLICATE KEY UPDATE product_id = 104, order_date = '2022-01-04', quantity = 25, total_amount = 250.00;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (5, 105, '2022-01-05', 30, 300.00) ON DUPLICATE KEY UPDATE product_id = 105, order_date = '2022-01-05', quantity = 30, total_amount = 300.00;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (6, 106, '2022-01-06', 35, 350.00) ON DUPLICATE KEY UPDATE product_id = 106, order_date = '2022-01-06', quantity = 35, total_amount = 350.00;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (7, 107, '2022-01-07', 40, 400.00) ON DUPLICATE KEY UPDATE product_id =...",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (1, 101, '2022-01-01', 5, 100.00) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (2, 102, '2022-01-02', 3, 75.50) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (3, 103, '2022-01-03', 8, 200.75) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (4, 104, '2022-01-04', 2, 50.25) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (5, 105, '2022-01-05', 10, 300.00) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (6, 106, '2022-01-06', 6, 120.50) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (7, 107, '2022-01-07', 4, 90.75) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (8, 108, '2022-01-08', 12, 400.25) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (9, 109, '2022-01-09', 7, 150.00) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (10, 110, '2022-01-10', 9, 250.50) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (11, 111, '2022-01-11', 15, 500.75) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (12, 112, '2022-01-12', 20, 700.25) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (13, 113, '2022-01-13', 11, 320.00) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (14, 114, '2022-01-14', 6, 170.50) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (15, 115, '2022-01-15', 8, 220.75) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (16, 116, '2022-01-16', 4, 90.25) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (17, 117, '2022-01-17', 3, 75.00) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (18, 118, '2022-01-18', 7, 160.50) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (19, 119, '2022-01-19', 5, 130.75) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity, total_amount) VALUES (20, 120, '2022-01-20', 10, 300.25) ON CONFLICT (order_id) DO UPDATE SET product_id = excluded.product_id, order_date = excluded.order_date, quantity = excluded.quantity, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product A', '2023-01-01', 100.00) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 100.00",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product B', '2023-01-02', 150.50) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 150.50",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product A', '2023-01-03', 200) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 200",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product B', '2023-01-04', 300) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 300",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product C', '2023-01-05', 75.25) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 75.25",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product D', '2023-01-06', 120.75) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 120.75",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product C', '2023-01-07', 400) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 400",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product D', '2023-01-08', 500) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 500",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product E', '2023-01-09', 90.95) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 90.95",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product F', '2023-01-10', 110.25) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 110.25",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product E', '2023-01-11', 600) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 600",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product F', '2023-01-12', 700) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 700",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product G', '2023-01-13', 80.50) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 80.50",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product H', '2023-01-14', 130.00) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 130.00",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product G', '2023-01-15', 800) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 800",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product H', '2023-01-16', 900) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 900",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product I', '2023-01-17', 95.75) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 95.75",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product J', '2023-01-18', 115.50) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 115.50",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product I', '2023-01-19', 1000) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 1000",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product J', '2023-01-20', 1100) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 1100",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product A', '2022-10-01', 1000.50) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 1000.50;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product B', '2022-10-02', 200) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 200;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product C', '2022-10-03', 1500.75) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 1500.75;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product D', '2022-10-04', 300) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 300;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product E', '2022-10-05', 2000.25) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 2000.25;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product F', '2022-10-06', 400) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 400;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product G', '2022-10-07', 1750.50) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 1750.50;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product H', '2022-10-08', 250) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 250;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product I', '2022-10-09', 1200.75) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 1200.75;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product J', '2022-10-10', 150) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 150;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product K', '2022-10-11', 1800.25) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 1800.25;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product L', '2022-10-12', 350) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 350;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product M', '2022-10-13', 1300.50) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 1300.50;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product N', '2022-10-14', 180) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 180;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product O', '2022-10-15', 1600.75) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 1600.75;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product P', '2022-10-16', 200) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 200;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product Q', '2022-10-17', 1400.25) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 1400.25;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product R', '2022-10-18', 250) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 250;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO sales_data (product_name, sale_date, sale_amount) VALUES ('Product S', '2022-10-19', 1700.50) ON CONFLICT (product_name, sale_date) DO UPDATE SET sale_amount = 1700.50;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nINSERT INTO production_schedule (product_name, production_date, production_quantity) VALUES ('Product T', '2022-10-20', 300) ON CONFLICT (product_name, production_date) DO UPDATE SET production_quantity = 300;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (1, 'Product A', 100, '2022-01-01') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product A', sales_quantity = 150, sales_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (1, 'Product A', 120, '2022-01-01') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product A', forecasted_demand = 140, forecast_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (id, product_name, production_quantity, production_date) VALUES (1, 'Product A', 80, '2022-01-01') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product A', production_quantity = 90, production_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (2, 'Product B', 200, '2022-01-05') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product B', sales_quantity = 250, sales_date = '2022-01-06';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (2, 'Product B', 180, '2022-01-05') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product B', forecasted_demand = 200, forecast_date = '2022-01-06';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (id, product_name, production_quantity, production_date) VALUES (2, 'Product B', 150, '2022-01-05') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product B', production_quantity = 170, production_date = '2022-01-06';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (3, 'Product C', 150, '2022-01-10') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product C', sales_quantity = 200, sales_date = '2022-01-11';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (3, 'Product C', 160, '2022-01-10') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product C', forecasted_demand = 180, forecast_date = '2022-01-11';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (id, product_name, production_quantity, production_date) VALUES (3, 'Product C', 100, '2022-01-10') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product C', production_quantity = 120, production_date = '2022-01-11';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (4, 'Product D', 120, '2022-01-15') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product D', sales_quantity = 150, sales_date = '2022-01-16';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (4, 'Product D', 100, '2022-01-15') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product D', forecasted_demand = 120, forecast_date = '2022-01-16';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (id, product_name, production_quantity, production_date) VALUES (4, 'Product D', 80, '2022-01-15') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product D', production_quantity = 100, production_date = '2022-01-16';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (5, 'Product E', 180, '2022-01-20') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product E', sales_quantity = 220, sales_date = '2022-01-21';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (5, 'Product E', 150, '2022-01-20') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product E', forecasted_demand = 180, forecast_date = '2022-01-21';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (id, product_name, production_quantity, production_date) VALUES (5, 'Product E', 120, '2022-01-20') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product E', production_quantity = 140, production_date = '2022-01-21';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (6, 'Product F', 200, '2022-01-25') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product F', sales_quantity = 250, sales_date = '2022-01-26';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (6, 'Product F', 220, '2022-01-25') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product F', forecasted_demand = 240, forecast_date = '2022-01-26';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (id, product_name, production_quantity, production_date) VALUES (6, 'Product F', 180, '2022-01-25') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product F', production_quantity = 200, production_date = '2022-01-26';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (7, 'Product G', 150, '2022-01-30') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product G', sales_quantity = 180, sales_date = '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (7, 'Product G', 160, '2022-01-30') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product G', forecasted_demand = 190, forecast_date = '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (id, product_name, production_quantity, production_date) VALUES (7, 'Product G', 130, '2022-01-30') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product G', production_quantity = 150, production_date = '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (8, 'Product H', 120, '2022-02-05') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product H', sales_quantity = 150, sales_date = '2022-02-06';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (8, 'Product H', 100, '2022-02-05') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product H', forecasted_demand = 120, forecast_date = '2022-02-06';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (id, product_name, production_quantity, production_date) VALUES (8, 'Product H', 80, '2022-02-05') ON CONFLICT (id) DO UPDATE SET product_name = 'Updated Product H', production_quantity = 100, production_date = '2022-02-06';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (1, 'ProductA', 100, '2023-01-01') ON CONFLICT (id) DO UPDATE SET sales_quantity = EXCLUDED.sales_quantity + SalesData.sales_quantity;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (2, 'ProductB', 150, '2023-01-02') ON CONFLICT (id) DO UPDATE SET product_name = EXCLUDED.product_name;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (1, 'ProductA', 120, '2023-01-03') ON CONFLICT (id) DO UPDATE SET forecasted_demand = EXCLUDED.forecasted_demand;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (2, 'ProductB', 200, '2023-01-04') ON CONFLICT (id) DO UPDATE SET forecast_date = EXCLUDED.forecast_date;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (id, product_name, production_quantity, production_date) VALUES (1, 'ProductA', 80, '2023-01-05') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (3, 'ProductC', 80, '2023-01-06') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (3, 'ProductC', 100, '2023-01-07') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (4, 'ProductD', 120, '2023-01-08') ON CONFLICT (id) DO UPDATE SET sales_quantity = EXCLUDED.sales_quantity + 50;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (4, 'ProductD', 150, '2023-01-09') ON CONFLICT (id) DO UPDATE SET forecast_date = EXCLUDED.forecast_date;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (id, product_name, production_quantity, production_date) VALUES (2, 'ProductB', 100, '2023-01-10') ON CONFLICT (id) DO UPDATE SET product_name = EXCLUDED.product_name, production_quantity = EXCLUDED.production_quantity + ProductionSchedule.production_quantity;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (5, 'ProductE', 90, '2023-01-11') ON CONFLICT (id) DO UPDATE SET sales_quantity = EXCLUDED.sales_quantity + 20, product_name = EXCLUDED.product_name;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (5, 'ProductE', 110, '2023-01-12') ON CONFLICT (id) DO UPDATE SET forecasted_demand = EXCLUDED.forecasted_demand - 10;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (id, product_name, production_quantity, production_date) VALUES (3, 'ProductC', 70, '2023-01-13') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (6, 'ProductF', 130, '2023-01-14') ON CONFLICT (id) DO UPDATE SET sales_quantity = EXCLUDED.sales_quantity;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (6, 'ProductF', 160, '2023-01-15') ON CONFLICT (id) DO UPDATE SET forecasted_demand = EXCLUDED.forecasted_demand + DemandForecast.forecasted_demand;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (id, product_name, production_quantity, production_date) VALUES (4, 'ProductD', 80, '2023-01-16') ON CONFLICT (id) DO UPDATE SET production_quantity = EXCLUDED.production_quantity - 10;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (7, 'ProductG', 95, '2023-01-17') ON CONFLICT (id) DO UPDATE SET product_name = EXCLUDED.product_name;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO DemandForecast (id, product_name, forecasted_demand, forecast_date) VALUES (7, 'ProductG', 120, '2023-01-18') ON CONFLICT (id) DO UPDATE SET forecasted_demand = EXCLUDED.forecasted_demand + 30;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (id, product_name, production_quantity, production_date) VALUES (5, 'ProductE', 100, '2023-01-19') ON CONFLICT (id) DO UPDATE SET production_quantity = EXCLUDED.production_quantity + 50;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (id, product_name, sales_quantity, sales_date) VALUES (8, 'ProductH', 110, '2023-01-20') ON CONFLICT (id) DO UPDATE SET sales_quantity = EXCLUDED.sales_quantity * 2, product_name = EXCLUDED.product_name;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO historical_sales_data (order_id, product_id, order_date, quantity) VALUES (1, 101, '2022-01-01', 100) ON DUPLICATE KEY UPDATE quantity = quantity + 100;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO demand_forecasting (forecast_id, product_id, forecast_date, demand_estimate) VALUES (1, 101, '2022-01-01', 200) ON DUPLICATE KEY UPDATE demand_estimate = demand_estimate + 200;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO production_schedules (schedule_id, product_id, schedule_date, production_quantity) VALUES (1, 101, '2022-01-01', 300) ON DUPLICATE KEY UPDATE production_quantity = production_quantity + 300;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (sales_id, product_id, sale_date, revenue) VALUES (1, 101, '2022-01-01', 500.50) ON DUPLICATE KEY UPDATE revenue = revenue + 500.50;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO historical_sales_data (order_id, product_id, order_date, quantity) VALUES (2, 102, '2022-01-02', 150) ON DUPLICATE KEY UPDATE quantity = quantity + 150;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO demand_forecasting (forecast_id, product_id, forecast_date, demand_estimate) VALUES (2, 102, '2022-01-02', 250) ON DUPLICATE KEY UPDATE demand_estimate = demand_estimate + 250;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO production_schedules (schedule_id, product_id, schedule_date, production_quantity) VALUES (2, 102, '2022-01-02', 350) ON DUPLICATE KEY UPDATE production_quantity = production_quantity + 350;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (sales_id, product_id, sale_date, revenue) VALUES (2, 102, '2022-01-02', 600.75) ON DUPLICATE KEY UPDATE revenue = revenue + 600.75;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO historical_sales_data (order_id, product_id, order_date, quantity) VALUES (3, 103, '2022-01-03', 200) ON DUPLICATE KEY UPDATE quantity = quantity + 200;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO demand_forecasting (forecast_id, product_id, forecast_date, demand_estimate) VALUES (3, 103, '2022-01-03', 300) ON DUPLICATE KEY UPDATE demand_estimate = demand_estimate + 300;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO production_schedules (schedule_id, product_id, schedule_date, production_quantity) VALUES (3, 103, '2022-01-03', 400) ON DUPLICATE KEY UPDATE production_quantity = production_quantity + 400;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (sales_id, product_id, sale_date, revenue) VALUES (3, 103, '2022-01-03', 700.25) ON DUPLICATE KEY UPDATE revenue = revenue + 700.25;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO historical_sales_data (order_id, product_id, order_date, quantity) VALUES (4, 104, '2022-01-04', 250) ON DUPLICATE KEY UPDATE quantity = quantity + 250;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO demand_forecasting (forecast_id, product_id, forecast_date, demand_estimate) VALUES (4, 104, '2022-01-04', 350) ON DUPLICATE KEY UPDATE demand_estimate = demand_estimate + 350;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO production_schedules (schedule_id, product_id, schedule_date, production_quantity) VALUES (4, 104, '2022-01-04', 450) ON DUPLICATE KEY UPDATE production_quantity = production_quantity + 450;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (sales_id, product_id, sale_date, revenue) VALUES (4, 104, '2022-01-04', 800.75) ON DUPLICATE KEY UPDATE revenue = revenue + 800.75;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO historical_sales_data (order_id, product_id, order_date, quantity) VALUES (5, 105, '2022-01-05', 300) ON DUPLICATE KEY UPDATE quantity = quantity + 300;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO demand_forecasting (forecast_id, product_id, forecast_date, demand_estimate) VALUES (5, 105, '2022-01-05', 400) ON DUPLICATE KEY UPDATE demand_estimate = demand_estimate + 400;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO production_schedules (schedule_id, product_id, schedule_date, production_quantity) VALUES (5, 105, '2022-01-05', 500) ON DUPLICATE KEY UPDATE production_quantity = production_quantity + 500;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (sales_id, product_id, sale_date, revenue) VALUES (5, 105, '2022-01-05', 900.50) ON DUPLICATE KEY UPDATE revenue = revenue + 900.50;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity) VALUES (1, 101, '2022-01-01', 10) ON DUPLICATE KEY UPDATE quantity = quantity + 10;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO demand_forecasting (forecast_id, product_id, forecast_date, demand_estimate) VALUES (1, 101, '2022-01-01', 100) ON DUPLICATE KEY UPDATE demand_estimate = demand_estimate + 100;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO production_schedules (schedule_id, product_id, schedule_date, production_quantity) VALUES (1, 101, '2022-01-01', 50) ON DUPLICATE KEY UPDATE production_quantity = production_quantity + 50;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (sales_id, product_id, sale_date, revenue) VALUES (1, 101, '2022-01-01', 500.00) ON DUPLICATE KEY UPDATE revenue = revenue + 500.00;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity) VALUES (2, 102, '2022-01-02', 15) ON DUPLICATE KEY UPDATE quantity = quantity + 15;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO demand_forecasting (forecast_id, product_id, forecast_date, demand_estimate) VALUES (2, 102, '2022-01-02', 120) ON DUPLICATE KEY UPDATE demand_estimate = demand_estimate + 120;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO production_schedules (schedule_id, product_id, schedule_date, production_quantity) VALUES (2, 102, '2022-01-02', 60) ON DUPLICATE KEY UPDATE production_quantity = production_quantity + 60;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (sales_id, product_id, sale_date, revenue) VALUES (2, 102, '2022-01-02', 600.00) ON DUPLICATE KEY UPDATE revenue = revenue + 600.00;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity) VALUES (3, 103, '2022-01-03', 20) ON DUPLICATE KEY UPDATE quantity = quantity + 20;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO demand_forecasting (forecast_id, product_id, forecast_date, demand_estimate) VALUES (3, 103, '2022-01-03', 150) ON DUPLICATE KEY UPDATE demand_estimate = demand_estimate + 150;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO production_schedules (schedule_id, product_id, schedule_date, production_quantity) VALUES (3, 103, '2022-01-03', 70) ON DUPLICATE KEY UPDATE production_quantity = production_quantity + 70;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (sales_id, product_id, sale_date, revenue) VALUES (3, 103, '2022-01-03', 700.00) ON DUPLICATE KEY UPDATE revenue = revenue + 700.00;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity) VALUES (4, 104, '2022-01-04', 25) ON DUPLICATE KEY UPDATE quantity = quantity + 25;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO demand_forecasting (forecast_id, product_id, forecast_date, demand_estimate) VALUES (4, 104, '2022-01-04', 180) ON DUPLICATE KEY UPDATE demand_estimate = demand_estimate + 180;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO production_schedules (schedule_id, product_id, schedule_date, production_quantity) VALUES (4, 104, '2022-01-04', 80) ON DUPLICATE KEY UPDATE production_quantity = production_quantity + 80;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (sales_id, product_id, sale_date, revenue) VALUES (4, 104, '2022-01-04', 800.00) ON DUPLICATE KEY UPDATE revenue = revenue + 800.00;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO historical_sales_data (order_id, product_id, order_date, quantity) VALUES (5, 105, '2022-01-05', 30) ON DUPLICATE KEY UPDATE quantity = quantity + 30;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO demand_forecasting (forecast_id, product_id, forecast_date, demand_estimate) VALUES (5, 105, '2022-01-05', 200) ON DUPLICATE KEY UPDATE demand_estimate = demand_estimate + 200;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO production_schedules (schedule_id, product_id, schedule_date, production_quantity) VALUES (5, 105, '2022-01-05', 90) ON DUPLICATE KEY UPDATE production_quantity = production_quantity + 90;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (sales_id, product_id, sale_date, revenue) VALUES (5, 105, '2022-01-05', 900.00) ON DUPLICATE KEY UPDATE revenue = revenue + 900.00;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (SalesID, ProductID, SaleDate, Quantity, SaleAmount) VALUES (1, 101, '2021-10-01', 10, 1000) ON DUPLICATE KEY UPDATE ProductID = 101, SaleDate = '2021-10-01', Quantity = 10, SaleAmount = 1000;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Products (ProductID, ProductName, ProductCategory, UnitPrice) VALUES (101, 'Product1', 'Category1', 50) ON DUPLICATE KEY UPDATE ProductName = 'Product1', ProductCategory = 'Category1', UnitPrice = 50;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (CustomerID, CustomerName, CustomerEmail, CustomerPhone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE CustomerName = 'John Doe', CustomerEmail = 'john.doe@example.com', CustomerPhone = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (OrderID, CustomerID, ProductID, OrderDate, Quantity, TotalAmount) VALUES (1, 1, 101, '2021-10-01', 5, 250) ON DUPLICATE KEY UPDATE CustomerID = 1, ProductID = 101, OrderDate = '2021-10-01', Quantity = 5, TotalAmount = 250;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (ScheduleID, ProductID, ProductionDate, ProductionQuantity, ProductionStatus) VALUES (1, 101, '2021-10-01', 20, 'Scheduled') ON DUPLICATE KEY UPDATE ProductID = 101, ProductionDate = '2021-10-01', ProductionQuantity = 20, ProductionStatus = 'Scheduled';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (SalesID, ProductID, SaleDate, Quantity, SaleAmount) VALUES (2, 102, '2021-10-02', 15, 1500) ON DUPLICATE KEY UPDATE ProductID = 102, SaleDate = '2021-10-02', Quantity = 15, SaleAmount = 1500;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Products (ProductID, ProductName, ProductCategory, UnitPrice) VALUES (102, 'Product2', 'Category2', 75) ON DUPLICATE KEY UPDATE ProductName = 'Product2', ProductCategory = 'Category2', UnitPrice = 75;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (CustomerID, CustomerName, CustomerEmail, CustomerPhone) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '234-567-8901') ON DUPLICATE KEY UPDATE CustomerName = 'Jane Smith', CustomerEmail = 'jane.smith@example.com', CustomerPhone = '234-567-8901';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (OrderID, CustomerID, ProductID, OrderDate, Quantity, TotalAmount) VALUES (2, 2, 102, '2021-10-02', 8, 600) ON DUPLICATE KEY UPDATE CustomerID = 2, ProductID = 102, OrderDate = '2021-10-02', Quantity = 8, TotalAmount = 600;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (ScheduleID, ProductID, ProductionDate, ProductionQuantity, ProductionStatus) VALUES (2, 102, '2021-10-02', 10, 'In Progress') ON DUPLICATE KEY UPDATE ProductID = 102, ProductionDate = '2021-10-02', ProductionQuantity = 10, ProductionStatus = 'In Progress';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (SalesID, ProductID, SaleDate, Quantity, SaleAmount) VALUES (3, 103, '2021-10-03', 8, 800) ON DUPLICATE KEY UPDATE ProductID = 103, SaleDate = '2021-10-03', Quantity = 8, SaleAmount = 800;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Products (ProductID, ProductName, ProductCategory, UnitPrice) VALUES (103, 'Product3', 'Category1', 45) ON DUPLICATE KEY UPDATE ProductName = 'Product3', ProductCategory = 'Category1', UnitPrice = 45;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (CustomerID, CustomerName, CustomerEmail, CustomerPhone) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '345-678-9012') ON DUPLICATE KEY UPDATE CustomerName = 'Alice Johnson', CustomerEmail = 'alice.johnson@example.com', CustomerPhone = '345-678-9012';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (OrderID, CustomerID, ProductID, OrderDate, Quantity, TotalAmount) VALUES (3, 3, 103, '2021-10-03', 12, 540) ON DUPLICATE KEY UPDATE CustomerID = 3, ProductID = 103, OrderDate = '2021-10-03', Quantity = 12, TotalAmount = 540;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (ScheduleID, ProductID, ProductionDate, ProductionQuantity, ProductionStatus) VALUES (3, 103, '2021-10-03', 15, 'Completed') ON DUPLICATE KEY UPDATE ProductID = 103, ProductionDate = '2021-10-03', ProductionQuantity = 15, ProductionStatus = 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (SalesID, ProductID, SaleDate, Quantity, SaleAmount) VALUES (4, 104, '2021-10-04', 6, 600) ON DUPLICATE KEY UPDATE ProductID = 104, SaleDate = '2021-10-04', Quantity = 6, SaleAmount = 600;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Products (ProductID, ProductName, ProductCategory, UnitPrice) VALUES (104, 'Product4', 'Category2', 60) ON DUPLICATE KEY UPDATE ProductName = 'Product4', ProductCategory = 'Category2', UnitPrice = 60;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (CustomerID, CustomerName, CustomerEmail, CustomerPhone) VALUES (4, 'David Brown', 'david.brown@example.com', '456-789-0123') ON DUPLICATE KEY UPDATE CustomerName = 'David Brown', CustomerEmail = 'david.brown@example.com', CustomerPhone = '456-789-0123';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (OrderID, CustomerID, ProductID, OrderDate, Quantity, TotalAmount) VALUES (4, 4, 104, '2021-10-04', 10, 600) ON DUPLICATE KEY UPDATE CustomerID = 4, ProductID = 104, OrderDate = '2021-10-04', Quantity = 10, TotalAmount = 600;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (ScheduleID, ProductID, ProductionDate, ProductionQuantity, ProductionStatus) VALUES (4, 104, '2021-10-04', 8, 'Scheduled') ON DUPLICATE KEY UPDATE ProductID = 104, ProductionDate = '2021-10-04', ProductionQuantity = 8, ProductionStatus = 'Scheduled';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (SalesID, ProductID, SaleDate, Quantity, SaleAmount) VALUES (1, 101, '2021-10-15', 10, 150.50) ON CONFLICT (SalesID) DO UPDATE SET ProductID = EXCLUDED.ProductID, SaleDate = EXCLUDED.SaleDate, Quantity = EXCLUDED.Quantity, SaleAmount = EXCLUDED.SaleAmount;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO SalesData (SalesID, ProductID, SaleDate, Quantity, SaleAmount) VALUES (2, 102, '2021-10-16', 15, 200.25) ON CONFLICT (SalesID) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Products (ProductID, ProductName, ProductCategory, UnitPrice) VALUES (101, 'Product A', 'Category A', 50.00) ON CONFLICT (ProductID) DO UPDATE SET ProductName = EXCLUDED.ProductName, ProductCategory = EXCLUDED.ProductCategory, UnitPrice = EXCLUDED.UnitPrice;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Products (ProductID, ProductName, ProductCategory, UnitPrice) VALUES (102, 'Product B', 'Category B', 70.00) ON CONFLICT (ProductID) DO UPDATE SET ProductName = EXCLUDED.ProductName, ProductCategory = EXCLUDED.ProductCategory, UnitPrice = EXCLUDED.UnitPrice;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (CustomerID, CustomerName, CustomerEmail, CustomerPhone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (CustomerID) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (CustomerID, CustomerName, CustomerEmail, CustomerPhone) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '987-654-3210') ON CONFLICT (CustomerID) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (OrderID, CustomerID, ProductID, OrderDate, Quantity, TotalAmount) VALUES (1, 1, 101, '2021-10-15', 5, 75.25) ON CONFLICT (OrderID) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (OrderID, CustomerID, ProductID, OrderDate, Quantity, TotalAmount) VALUES (2, 2, 102, '2021-10-16', 7, 150.50) ON CONFLICT (OrderID) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (ScheduleID, ProductID, ProductionDate, ProductionQuantity, ProductionStatus) VALUES (1, 101, '2021-10-20', 100, 'Completed') ON CONFLICT (ScheduleID) DO UPDATE SET ProductID = EXCLUDED.ProductID, ProductionDate = EXCLUDED.ProductionDate, ProductionQuantity = EXCLUDED.ProductionQuantity, ProductionStatus = EXCLUDED.ProductionStatus;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ProductionSchedule (ScheduleID, ProductID, ProductionDate, ProductionQuantity, ProductionStatus) VALUES (2, 102, '2021-10-21', 150, 'In Progress') ON CONFLICT (ScheduleID) DO UPDATE SET ProductID = EXCLUDED.ProductID, ProductionDate = EXCLUDED.ProductionDate, ProductionQuantity = EXCLUDED.ProductionQuantity, ProductionStatus = EXCLUDED.ProductionStatus;"
]