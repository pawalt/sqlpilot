[
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT order_id, total_amount FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT order_id, order_date FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, quantity FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data WHERE order_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT order_id, total_amount FROM historical_sales_data WHERE total_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data WHERE product_id = 1234;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data WHERE order_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(order_id) FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(total_amount) FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT MIN(total_amount) FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT order_date, SUM(total_amount) FROM historical_sales_data GROUP BY order_date;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, AVG(total_amount) FROM historical_sales_data GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data ORDER BY order_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data ORDER BY total_amount ASC;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data WHERE order_date = '2022-01-15' AND total_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT order_id, product_id, order_date, quantity, total_amount FROM historical_sales_data WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) AS total_quantity FROM historical_sales_data GROUP BY product_id ORDER BY total_quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, AVG(total_amount) AS average_amount FROM historical_sales_data GROUP BY product_id HAVING AVG(total_amount) > 1000;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data WHERE quantity > 10 AND total_amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT order_id, order_date, total_amount FROM historical_sales_data WHERE order_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, MAX(total_amount) AS max_amount FROM historical_sales_data GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_id FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT order_date, SUM(quantity) AS total_quantity FROM historical_sales_data GROUP BY order_date HAVING SUM(quantity) > 100;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT product_id) AS unique_products FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, COUNT(*) AS total_orders FROM historical_sales_data GROUP BY product_id ORDER BY total_orders DESC;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) AS average_quantity, AVG(total_amount) AS average_amount FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT order_id, product_id, order_date, total_amount FROM historical_sales_data ORDER BY order_date ASC, total_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, MIN(total_amount) AS min_amount FROM historical_sales_data GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT order_id, product_id, order_date FROM historical_sales_data WHERE total_amount > 500 AND quantity < 5;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, AVG(quantity) AS average_quantity FROM historical_sales_data GROUP BY product_id HAVING AVG(quantity) > 5;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT order_id, product_id, order_date, quantity, total_amount FROM historical_sales_data WHERE product_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, COUNT(*) AS total_orders, SUM(quantity) AS total_quantity FROM historical_sales_data GROUP BY product_id HAVING total_orders > 3;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT order_id, order_date, total_amount FROM historical_sales_data WHERE total_amount > 1000 AND order_date < '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, MAX(quantity) AS max_quantity FROM historical_sales_data GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    total_amount DECIMAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_id, MIN(total_amount) AS min_amount FROM historical_sales_data GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT id, product_name, sale_amount FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT id, product_name, sale_date FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, SUM(sale_amount) AS total_sales FROM sales_data GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM sales_data ORDER BY sale_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE product_name LIKE 'Ap%';",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM sales_data LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM production_schedule;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM production_schedule WHERE production_quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS num_records FROM production_schedule GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM production_schedule ORDER BY production_date;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM production_schedule WHERE product_name = 'Product A';",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM production_schedule WHERE production_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM production_schedule LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, MAX(production_quantity) AS max_quantity FROM production_schedule GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, AVG(production_quantity) AS avg_quantity FROM production_schedule GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM production_schedule WHERE production_quantity < 50;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM production_schedule WHERE production_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_amount > 1000 AND sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, sale_amount FROM sales_data WHERE product_name LIKE 'A%' ORDER BY sale_amount DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT s.product_name, s.sale_amount, p.production_quantity FROM sales_data s JOIN production_schedule p ON s.product_name = p.product_name WHERE s.sale_date > p.production_date;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_sales FROM sales_data GROUP BY product_name HAVING COUNT(*) > 5 ORDER BY total_sales DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS average_sale_amount, MAX(sale_amount) AS max_sale_amount FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, SUM(sale_amount) AS total_sales_amount FROM sales_data WHERE sale_date >= '2022-06-01' GROUP BY product_name ORDER BY total_sales_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, sale_date, sale_amount FROM sales_data WHERE sale_date IN (SELECT MAX(sale_date) FROM sales_data);",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT * FROM sales_data INNER JOIN production_schedule ON sales_data.product_name = production_schedule.product_name WHERE sales_data.sale_date > production_schedule.production_date AND sales_data.sale_amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT DISTINCT(p.product_name) FROM production_schedule p LEFT JOIN sales_data s ON p.product_name = s.product_name WHERE s.id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, sale_amount FROM sales_data UNION ALL SELECT product_name, production_quantity AS sale_amount FROM production_schedule ORDER BY sale_amount DESC LIMIT 20;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, SUM(sale_amount) AS total_sales_amount FROM sales_data GROUP BY product_name HAVING SUM(sale_amount) > 10000 ORDER BY total_sales_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, AVG(production_quantity) AS avg_production_quantity FROM production_schedule GROUP BY product_name HAVING AVG(production_quantity) > 50;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT p.product_name, p.production_date, s.sale_date FROM production_schedule p FULL OUTER JOIN sales_data s ON p.product_name = s.product_name WHERE p.production_date <> s.sale_date;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, DATE_PART('month', sale_date) AS sale_month, SUM(sale_amount) AS total_sales_amount FROM sales_data GROUP BY product_name, sale_month ORDER BY total_sales_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT p.product_name, COUNT(*) AS total_orders FROM production_schedule p FULL JOIN sales_data s ON p.product_name = s.product_name GROUP BY p.product_name ORDER BY total_orders DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, sale_amount FROM sales_data WHERE sale_amount BETWEEN 1000 AND 5000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, production_date, production_quantity FROM production_schedule WHERE production_quantity > (SELECT AVG(production_quantity) FROM production_schedule);",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, MAX(sale_date) - MIN(sale_date) AS days_between_sales FROM sales_data GROUP BY product_name ORDER BY days_between_sales DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, production_date, production_quantity FROM production_schedule WHERE production_date = (SELECT MAX(production_date) FROM production_schedule);",
  "### TABLEDATA\n\nCREATE TABLE sales_data ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    sale_date DATE, \n    sale_amount DECIMAL(10, 2) \n);\n\nCREATE TABLE production_schedule ( \n    id SERIAL PRIMARY KEY, \n    product_name VARCHAR(255), \n    production_date DATE, \n    production_quantity INT \n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_productions FROM production_schedule GROUP BY product_name HAVING COUNT(*) > 5 ORDER BY total_productions DESC;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM SalesData;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, sales_quantity FROM SalesData;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM DemandForecast;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, forecasted_demand FROM DemandForecast;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT production_date FROM ProductionSchedule;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, production_quantity FROM ProductionSchedule;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT id, sales_date FROM SalesData;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT sales_quantity, sales_date FROM SalesData;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT id, forecasted_demand FROM DemandForecast;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, forecast_date FROM DemandForecast;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT production_quantity, production_date FROM ProductionSchedule;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, production_date FROM ProductionSchedule;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM SalesData WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, sales_quantity FROM SalesData WHERE sales_quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM DemandForecast WHERE product_name = 'Product A';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT forecasted_demand, forecast_date FROM DemandForecast WHERE forecast_date = '2022-08-31';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT production_date FROM ProductionSchedule WHERE production_quantity >= 500;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, production_quantity FROM ProductionSchedule WHERE production_quantity < 200;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT id, sales_date FROM SalesData ORDER BY sales_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, forecasted_demand FROM DemandForecast ORDER BY forecasted_demand ASC;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(sales_quantity) AS total_sales FROM SalesData GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(forecasted_demand) AS average_demand FROM DemandForecast WHERE forecast_date > '2022-01-01' GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(production_quantity) AS max_production FROM ProductionSchedule WHERE production_date BETWEEN '2022-01-01' AND '2022-02-28' GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, MIN(production_quantity) AS min_production FROM ProductionSchedule GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(sales_quantity) AS total_sales, MAX(production_quantity) AS max_production FROM SalesData JOIN ProductionSchedule ON SalesData.product_name = ProductionSchedule.product_name GROUP BY SalesData.product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS num_forecasts FROM DemandForecast WHERE forecasted_demand > 100 GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(production_quantity) AS total_production FROM ProductionSchedule WHERE production_date > '2022-01-01' GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(sales_quantity) AS avg_sales FROM SalesData WHERE sales_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS num_sales FROM SalesData WHERE sales_quantity > 50 GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(forecasted_demand) AS max_demand FROM DemandForecast WHERE forecast_date > '2022-01-01' GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(production_quantity) AS avg_production FROM ProductionSchedule WHERE production_date > '2022-04-01' GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(forecasted_demand) AS total_demand FROM DemandForecast WHERE forecast_date BETWEEN '2022-01-01' AND '2022-05-31' GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, MIN(sales_quantity) AS min_sales FROM SalesData WHERE sales_date > '2022-06-01' GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS num_productions FROM ProductionSchedule WHERE production_quantity > 200 GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(production_quantity) AS avg_production, COUNT(*) AS num_productions FROM ProductionSchedule WHERE production_date > '2022-01-01' GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(sales_quantity) AS max_sales FROM SalesData WHERE sales_date > '2022-01-01' GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS num_forecasts FROM DemandForecast WHERE forecast_date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(production_quantity) AS total_production, MIN(sales_quantity) AS min_sales FROM ProductionSchedule JOIN SalesData ON ProductionSchedule.product_name = SalesData.product_name WHERE ProductionSchedule.production_date > '2022-01-01' GROUP BY ProductionSchedule.product_name",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_quantity INT,\n    sales_date DATE\n);\n\nCREATE TABLE DemandForecast (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    forecasted_demand INT,\n    forecast_date DATE\n);\n\nCREATE TABLE ProductionSchedule (\n    id INT PRIMARY KEY,\n    product_name TEXT,\n    production_quantity INT,\n    production_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(forecasted_demand) AS avg_demand, MAX(production_quantity) AS max_production FROM DemandForecast JOIN ProductionSchedule ON DemandForecast.product_name = ProductionSchedule.product_name WHERE DemandForecast.forecast_date BETWEEN '2022-01-01' AND '2022-08-31' GROUP BY DemandForecast.product_name",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT order_id, order_date, quantity FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT order_id, quantity FROM historical_sales_data WHERE order_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM demand_forecasting;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT forecast_id, product_id FROM demand_forecasting WHERE demand_estimate > 100;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM production_schedules;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT schedule_id, product_id FROM production_schedules WHERE schedule_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT sales_id, product_id FROM sales_performance WHERE revenue > 5000.00;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data JOIN demand_forecasting ON historical_sales_data.product_id = demand_forecasting.product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data JOIN production_schedules ON historical_sales_data.product_id = production_schedules.product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data JOIN sales_performance ON historical_sales_data.product_id = sales_performance.product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT h.order_id, d.forecast_id, p.schedule_id, s.sales_id FROM historical_sales_data h, demand_forecasting d, production_schedules p, sales_performance s WHERE h.product_id = d.product_id AND h.product_id = p.product_id AND h.product_id = s.product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT h.order_id, h.order_date, d.forecast_date, p.production_quantity, s.revenue FROM historical_sales_data h JOIN demand_forecasting d ON h.product_id = d.product_id JOIN production_schedules p ON h.product_id = p.product_id JOIN sales_performance s ON h.product_id = s.product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT h.order_id, p.product_id, p.schedule_date, s.sale_date, h.quantity, d.demand_estimate, p.production_quantity, s.revenue FROM historical_sales_data h JOIN demand_forecasting d ON h.product_id = d.product_id JOIN production_schedules p ON h.product_id = p.product_id JOIN sales_performance s ON h.product_id = s.product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT AVG(revenue) AS avg_revenue FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT MAX(quantity) AS max_quantity FROM historical_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT MIN(demand_estimate) AS min_demand_estimate FROM demand_forecasting;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT SUM(production_quantity) AS total_production FROM production_schedules;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) AS total_quantity FROM historical_sales_data GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, AVG(revenue) AS avg_revenue FROM sales_performance GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM demand_forecasting WHERE forecast_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, COUNT(*) AS total_forecasts FROM demand_forecasting GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT MAX(revenue) AS max_revenue FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, MIN(production_quantity) AS min_production FROM production_schedules GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data INNER JOIN sales_performance ON historical_sales_data.product_id = sales_performance.product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(demand_estimate) AS total_demand_estimate FROM demand_forecasting GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data WHERE quantity >= 100;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT AVG(demand_estimate) AS avg_demand_estimate FROM demand_forecasting;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, MAX(production_quantity) AS max_production FROM production_schedules GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data WHERE order_date = '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT AVG(revenue) AS avg_revenue FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(revenue) AS total_revenue FROM sales_performance GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_sales_data WHERE quantity < 50;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, COUNT(DISTINCT order_id) AS unique_orders FROM historical_sales_data GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(production_quantity) AS total_production FROM production_schedules GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM sales_performance ORDER BY revenue DESC;",
  "### TABLEDATA\n\nCREATE TABLE historical_sales_data (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT\n);\n\nCREATE TABLE demand_forecasting (\n    forecast_id INT PRIMARY KEY,\n    product_id INT,\n    forecast_date DATE,\n    demand_estimate INT\n);\n\nCREATE TABLE production_schedules (\n    schedule_id INT PRIMARY KEY,\n    product_id INT,\n    schedule_date DATE,\n    production_quantity INT\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sale_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM demand_forecasting WHERE demand_estimate > 5000;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM SalesData;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT SalesID, SaleDate, Quantity FROM SalesData;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT ProductID, ProductName, UnitPrice FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Products WHERE ProductCategory = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT CustomerID, CustomerName FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE OrderDate >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT OrderID, Quantity, TotalAmount FROM Orders WHERE CustomerID = 101;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM ProductionSchedule WHERE ProductionDate = '2022-07-15';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT ScheduleID, ProductionQuantity FROM ProductionSchedule WHERE ProductID = 201;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT CustomerName, CustomerEmail FROM Customers WHERE CustomerPhone = '+1234567890';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT ProductName, UnitPrice FROM Products WHERE ProductCategory = 'Clothing';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM SalesData WHERE SaleAmount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT SalesID, SaleDate, Quantity FROM SalesData ORDER BY SaleDate DESC;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT ProductID, ProductName, UnitPrice FROM Products ORDER BY UnitPrice ASC;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE Quantity > 10 AND TotalAmount < 500;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT CustomerID, CustomerName, CustomerEmail FROM Customers WHERE CustomerID IN (101, 102, 103);",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM SalesData WHERE SaleDate BETWEEN '2022-05-01' AND '2022-05-31';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT OrderID, Quantity, TotalAmount FROM Orders WHERE OrderDate BETWEEN '2022-06-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT ProductName, ProductCategory FROM Products WHERE UnitPrice > 50;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM ProductionSchedule WHERE ProductionStatus = 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM SalesData WHERE Quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT ProductName, ProductCategory, UnitPrice FROM Products WHERE UnitPrice > 50;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT CustomerName, CustomerEmail FROM Customers WHERE CustomerPhone LIKE '%-1234';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT CustomerName, OrderDate, TotalAmount FROM Customers JOIN Orders ON Customers.CustomerID = Orders.CustomerID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT ProductName, OrderDate, Quantity FROM Products JOIN Orders ON Products.ProductID = Orders.ProductID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT SalesID, SaleDate, Quantity, SaleAmount FROM SalesData WHERE SaleAmount BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT ProductName, ProductCategory, UnitPrice FROM Products WHERE ProductCategory = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT CustomerName, CustomerEmail FROM Customers WHERE CustomerID IN (SELECT CustomerID FROM Orders);",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT(ProductID) FROM Orders WHERE Quantity > 1;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT CustomerName, OrderDate, TotalAmount FROM Customers LEFT JOIN Orders ON Customers.CustomerID = Orders.CustomerID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT ProductionDate, ProductionQuantity FROM ProductionSchedule WHERE ProductionStatus = 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT CustomerName, OrderDate, TotalAmount FROM Customers RIGHT JOIN Orders ON Customers.CustomerID = Orders.CustomerID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT ProductName, UnitPrice FROM Products WHERE UnitPrice = (SELECT MAX(UnitPrice) FROM Products);",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT CustomerName, CustomerEmail FROM Customers WHERE CustomerID = (SELECT CustomerID FROM Orders WHERE TotalAmount > 100);",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT ProductName, OrderDate, Quantity FROM Products JOIN Orders ON Products.ProductID = Orders.ProductID WHERE Quantity <= 5;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT CustomerName, CustomerEmail FROM Customers WHERE CustomerID NOT IN (SELECT CustomerID FROM Orders);",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT SUM(SaleAmount) FROM SalesData GROUP BY SaleDate;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT ProductCategory, AVG(UnitPrice) FROM Products GROUP BY ProductCategory;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT CustomerName, SUM(TotalAmount) FROM Customers JOIN Orders ON Customers.CustomerID = Orders.CustomerID GROUP BY CustomerName;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n    SalesID INT PRIMARY KEY,\n    ProductID INT,\n    SaleDate DATE,\n    Quantity INT,\n    SaleAmount DECIMAL\n);\n\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    ProductCategory VARCHAR(50),\n    UnitPrice DECIMAL\n);\n\n\nCREATE TABLE Customers (\n    CustomerID INT PRIMARY KEY,\n    CustomerName VARCHAR(50),\n    CustomerEmail VARCHAR(50),\n    CustomerPhone VARCHAR(15)\n);\n\n\nCREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    ProductID INT,\n    OrderDate DATE,\n    Quantity INT,\n    TotalAmount DECIMAL\n);\n\n\nCREATE TABLE ProductionSchedule (\n    ScheduleID INT PRIMARY KEY,\n    ProductID INT,\n    ProductionDate DATE,\n    ProductionQuantity INT,\n    ProductionStatus VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT ProductID, AVG(Quantity) FROM Orders GROUP BY ProductID ORDER BY AVG(Quantity) DESC;"
]