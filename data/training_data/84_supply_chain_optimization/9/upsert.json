[
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (1, 'Supplier A', 95.5, 85.7, 90.0) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier A', delivery_performance = 95.5, quality_performance = 85.7, reliability_score = 90.0",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (2, 'Supplier B', 88.8, 91.2, 85.6) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier B', delivery_performance = 88.8, quality_performance = 91.2, reliability_score = 85.6",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (3, 'Supplier C', 70.5, 92.3, 80.4) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier C', delivery_performance = 70.5, quality_performance = 92.3, reliability_score = 80.4",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (4, 'Supplier D', 85.0, 78.7, 88.9) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier D', delivery_performance = 85.0, quality_performance = 78.7, reliability_score = 88.9",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (5, 'Supplier E', 90.2, 85.6, 92.0) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier E', delivery_performance = 90.2, quality_performance = 85.6, reliability_score = 92.0",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (6, 'Supplier F', 78.6, 88.9, 85.3) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier F', delivery_performance = 78.6, quality_performance = 88.9, reliability_score = 85.3",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (7, 'Supplier G', 92.1, 84.5, 87.6) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier G', delivery_performance = 92.1, quality_performance = 84.5, reliability_score = 87.6",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (8, 'Supplier H', 85.6, 90.3, 86.8) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier H', delivery_performance = 85.6, quality_performance = 90.3, reliability_score = 86.8",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (9, 'Supplier I', 75.2, 83.7, 75.5) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier I', delivery_performance = 75.2, quality_performance = 83.7, reliability_score = 75.5",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (10, 'Supplier J', 82.3, 87.9, 85.2) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier J', delivery_performance = 82.3, quality_performance = 87.9, reliability_score = 85.2",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (11, 'Supplier K', 91.4, 89.0, 88.4) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier K', delivery_performance = 91.4, quality_performance = 89.0, reliability_score = 88.4",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (12, 'Supplier L', 80.8, 85.2, 82.9) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier L', delivery_performance = 80.8, quality_performance = 85.2, reliability_score = 82.9",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (13, 'Supplier M', 85.7, 82.6, 86.1) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier M', delivery_performance = 85.7, quality_performance = 82.6, reliability_score = 86.1",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (14, 'Supplier N', 87.6, 91.0, 86.7) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier N', delivery_performance = 87.6, quality_performance = 91.0, reliability_score = 86.7",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (15, 'Supplier O', 78.4, 84.1, 82.5) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier O', delivery_performance = 78.4, quality_performance = 84.1, reliability_score = 82.5",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (16, 'Supplier P', 90.1, 87.5, 89.2) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier P', delivery_performance = 90.1, quality_performance = 87.5, reliability_score = 89.2",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (17, 'Supplier Q', 82.6, 82.9, 80.3) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier Q', delivery_performance = 82.6, quality_performance = 82.9, reliability_score = 80.3",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (18, 'Supplier R', 89.4, 88.1, 87.9) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier R', delivery_performance = 89.4, quality_performance = 88.1, reliability_score = 87.9",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (19, 'Supplier S', 87.3, 86.7, 85.8) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier S', delivery_performance = 87.3, quality_performance = 86.7, reliability_score = 85.8",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (20, 'Supplier T', 84.5, 83.2, 82.1) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier T', delivery_performance = 84.5, quality_performance = 83.2, reliability_score = 82.1",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (1, 'Supplier A', 0.90, 0.85, 0.95) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier A', delivery_performance = 0.92, quality_performance = 0.87, reliability_score = 0.96;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (2, 'Supplier B', 0.88, 0.86, 0.94) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier B', delivery_performance = 0.90, quality_performance = 0.88, reliability_score = 0.95;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (3, 'Supplier C', 0.92, 0.83, 0.96) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier C', delivery_performance = 0.94, quality_performance = 0.85, reliability_score = 0.97;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (4, 'Supplier D', 0.85, 0.89, 0.92) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier D', delivery_performance = 0.87, quality_performance = 0.91, reliability_score = 0.93;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (5, 'Supplier E', 0.91, 0.84, 0.97) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier E', delivery_performance = 0.93, quality_performance = 0.86, reliability_score = 0.98;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (6, 'Supplier F', 0.87, 0.88, 0.96) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier F', delivery_performance = 0.89, quality_performance = 0.90, reliability_score = 0.97;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (7, 'Supplier G', 0.93, 0.85, 0.98) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier G', delivery_performance = 0.95, quality_performance = 0.87, reliability_score = 0.99;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (8, 'Supplier H', 0.86, 0.87, 0.93) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier H', delivery_performance = 0.88, quality_performance = 0.89, reliability_score = 0.94;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (9, 'Supplier I', 0.89, 0.86, 0.95) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier I', delivery_performance = 0.91, quality_performance = 0.88, reliability_score = 0.96;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (10, 'Supplier J', 0.94, 0.84, 0.99) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier J', delivery_performance = 0.96, quality_performance = 0.86, reliability_score = 1.00;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (11, 'Supplier K', 0.84, 0.90, 0.91) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier K', delivery_performance = 0.86, quality_performance = 0.92, reliability_score = 0.93;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (12, 'Supplier L', 0.91, 0.85, 0.96) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier L', delivery_performance = 0.93, quality_performance = 0.87, reliability_score = 0.97;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (13, 'Supplier M', 0.88, 0.91, 0.92) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier M', delivery_performance = 0.90, quality_performance = 0.93, reliability_score = 0.94;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (14, 'Supplier N', 0.85, 0.89, 0.94) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier N', delivery_performance = 0.87, quality_performance = 0.91, reliability_score = 0.95;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (15, 'Supplier O', 0.92, 0.86, 0.97) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier O', delivery_performance = 0.94, quality_performance = 0.88, reliability_score = 0.98;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (16, 'Supplier P', 0.87, 0.92, 0.96) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier P', delivery_performance = 0.89, quality_performance = 0.94, reliability_score = 0.97;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (17, 'Supplier Q', 0.93, 0.86, 0.98) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier Q', delivery_performance = 0.95, quality_performance = 0.88, reliability_score = 0.99;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (18, 'Supplier R', 0.86, 0.88, 0.93) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier R', delivery_performance = 0.88, quality_performance = 0.90, reliability_score = 0.94;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (19, 'Supplier S', 0.89, 0.87, 0.95) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier S', delivery_performance = 0.91, quality_performance = 0.89, reliability_score = 0.96;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    delivery_performance FLOAT,\n    quality_performance FLOAT,\n    reliability_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO supplier_performance_metrics (supplier_id, supplier_name, delivery_performance, quality_performance, reliability_score) VALUES (20, 'Supplier T', 0.94, 0.85, 0.99) ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier T', delivery_performance = 0.96, quality_performance = 0.87, reliability_score = 1.00;",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (1, 'Vendor A', 8.5, 9.0);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (2, 'Vendor B', 7.5, 8.0);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (3, 'Vendor C', 9.0, 9.5);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (4, 'Vendor D', 6.5, 7.0);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (5, 'Vendor E', 8.0, 8.5);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (6, 'Vendor F', 9.5, 9.0);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (7, 'Vendor G', 7.0, 7.5);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (8, 'Vendor H', 8.8, 8.2);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (9, 'Vendor I', 9.2, 9.8);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (10, 'Vendor J', 7.8, 8.5);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor A', 'Net 30', 12);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor B', 'Net 45', 24);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor C', 'Net 60', 36);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor D', 'Net 30', 12);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor E', 'Net 45', 24);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor F', 'Net 60', 36);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor G', 'Net 30', 12);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor H', 'Net 45', 24);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor I', 'Net 60', 36);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor J', 'Net 30', 12);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (101, 'Vendor A', 8.9, 9.5);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor A', 'Net 30', 12);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (102, 'Vendor B', 7.5, 8.2);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor B', 'Net 60', 24);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (103, 'Vendor C', 9.3, 9.7);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor C', 'Net 45', 18);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (104, 'Vendor D', 8.0, 8.8);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor D', 'Net 90', 36);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (105, 'Vendor E', 9.8, 9.2);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor E', 'Net 60', 24);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (106, 'Vendor F', 8.5, 8.9);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor F', 'Net 45', 18);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (107, 'Vendor G', 7.2, 7.9);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor G', 'Net 30', 12);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (108, 'Vendor H', 9.0, 9.5);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor H', 'Net 90', 36);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (109, 'Vendor I', 8.7, 9.0);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor I', 'Net 60', 24);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO supplier_performance_metrics (supplier_id, vendor_name, delivery_performance_score, product_quality_score) VALUES (110, 'Vendor J', 9.5, 9.8);",
  "### TABLEDATA\n\nCREATE TABLE supplier_performance_metrics (\n  supplier_id INT PRIMARY KEY,\n  vendor_name VARCHAR(50),\n  delivery_performance_score FLOAT,\n  product_quality_score FLOAT\n);\n\n\nCREATE TABLE negotiation_terms (\n  vendor_name VARCHAR(50) PRIMARY KEY,\n  payment_terms VARCHAR(50),\n  contract_duration INT\n);\n\n### STATEMENT\n\nUPSERT INTO negotiation_terms (vendor_name, payment_terms, contract_duration) VALUES ('Vendor J', 'Net 45', 18);",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (1, 'Supplier A', 8, 0.92) ON DUPLICATE KEY UPDATE supplier_name='Supplier A_updated', performance_rating=9, delivery_performance=0.95;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (2, 'Supplier B', 7, 0.85) ON DUPLICATE KEY UPDATE supplier_name='Supplier B_updated', performance_rating=8, delivery_performance=0.88;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (3, 'Supplier C', 9, 0.94) ON DUPLICATE KEY UPDATE supplier_name='Supplier C_updated', performance_rating=10, delivery_performance=0.98;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (4, 'Supplier D', 6, 0.80) ON DUPLICATE KEY UPDATE supplier_name='Supplier D_updated', performance_rating=7, delivery_performance=0.82;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (5, 'Supplier E', 9, 0.93) ON DUPLICATE KEY UPDATE supplier_name='Supplier E_updated', performance_rating=10, delivery_performance=0.96;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (6, 'Supplier F', 7, 0.85) ON DUPLICATE KEY UPDATE supplier_name='Supplier F_updated', performance_rating=8, delivery_performance=0.88;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (7, 'Supplier G', 8, 0.90) ON DUPLICATE KEY UPDATE supplier_name='Supplier G_updated', performance_rating=9, delivery_performance=0.93;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (8, 'Supplier H', 6, 0.82) ON DUPLICATE KEY UPDATE supplier_name='Supplier H_updated', performance_rating=7, delivery_performance=0.85;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (9, 'Supplier I', 9, 0.95) ON DUPLICATE KEY UPDATE supplier_name='Supplier I_updated', performance_rating=10, delivery_performance=0.98;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (10, 'Supplier J', 8, 0.91) ON DUPLICATE KEY UPDATE supplier_name='Supplier J_updated', performance_rating=9, delivery_performance=0.94;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (1, 'Product A', 1, 20.50, 100) ON DUPLICATE KEY UPDATE product_name='Product A_updated', supplier_id=1, price=21.50, quantity_in_stock=110;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (2, 'Product B', 2, 15.75, 75) ON DUPLICATE KEY UPDATE product_name='Product B_updated', supplier_id=2, price=16.75, quantity_in_stock=85;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (3, 'Product C', 3, 30.00, 50) ON DUPLICATE KEY UPDATE product_name='Product C_updated', supplier_id=3, price=31.00, quantity_in_stock=60;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (4, 'Product D', 4, 18.90, 120) ON DUPLICATE KEY UPDATE product_name='Product D_updated', supplier_id=4, price=19.90, quantity_in_stock=130;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (5, 'Product E', 1, 25.25, 90) ON DUPLICATE KEY UPDATE product_name='Product E_updated', supplier_id=1, price=26.25, quantity_in_stock=100;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (6, 'Product F', 5, 22.75, 80) ON DUPLICATE KEY UPDATE product_name='Product F_updated', supplier_id=5, price=23.75, quantity_in_stock=90;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (7, 'Product G', 6, 35.50, 60) ON DUPLICATE KEY UPDATE product_name='Product G_updated', supplier_id=6, price=36.50, quantity_in_stock=70;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (8, 'Product H', 7, 12.25, 150) ON DUPLICATE KEY UPDATE product_name='Product H_updated', supplier_id=7, price=13.25, quantity_in_stock=160;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (9, 'Product I', 3, 28.75, 70) ON DUPLICATE KEY UPDATE product_name='Product I_updated', supplier_id=3, price=29.75, quantity_in_stock=80;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (10, 'Product J', 9, 40.00, 40) ON DUPLICATE KEY UPDATE product_name='Product J_updated', supplier_id=9, price=41.00, quantity_in_stock=50;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, order_date, order_quantity, order_status) VALUES (1, 1, '2022-10-15', 5, 'Pending') ON DUPLICATE KEY UPDATE product_id=1, order_date='2022-10-15', order_quantity=6, order_status='Completed';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, order_date, order_quantity, order_status) VALUES (2, 2, '2022-10-16', 10, 'Processing') ON DUPLICATE KEY UPDATE product_id=2, order_date='2022-10-16', order_quantity=11, order_status='Shipped';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, order_date, order_quantity, order_status) VALUES (3, 3, '2022-10-17', 15, 'Pending') ON DUPLICATE KEY UPDATE product_id=3, order_date='2022-10-17', order_quantity=16, order_status='Completed';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, order_date, order_quantity, order_status) VALUES (4, 4, '2022-10-18', 20, 'Processing') ON DUPLICATE KEY UPDATE product_id=4, order_date='2022-10-18', order_quantity=21, order_status='Shipped';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, order_date, order_quantity, order_status) VALUES (5, 5, '2022-10-19', 25, 'Pending') ON DUPLICATE KEY UPDATE product_id=5, order_date='2022-10-19', order_quantity=26, order_status='Completed';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (1, 'Supplier 1', 4, 0.85) ON DUPLICATE KEY UPDATE supplier_name='Supplier 1', performance_rating=4, delivery_performance=0.85;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (2, 'Supplier 2', 3, 0.75) ON DUPLICATE KEY UPDATE supplier_name='Supplier 2', performance_rating=3, delivery_performance=0.75;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (3, 'Supplier 3', 5, 0.92) ON DUPLICATE KEY UPDATE supplier_name='Supplier 3', performance_rating=5, delivery_performance=0.92;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (1, 'Product A', 1, 25.0, 100) ON DUPLICATE KEY UPDATE product_name='Product A', supplier_id=1, price=25.0, quantity_in_stock=100;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (2, 'Product B', 2, 30.0, 75) ON DUPLICATE KEY UPDATE product_name='Product B', supplier_id=2, price=30.0, quantity_in_stock=75;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (3, 'Product C', 3, 20.0, 150) ON DUPLICATE KEY UPDATE product_name='Product C', supplier_id=3, price=20.0, quantity_in_stock=150;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_date, order_quantity, order_status) VALUES (1, 1, '2022-01-15', 50, 'Shipped') ON DUPLICATE KEY UPDATE product_id=1, order_date='2022-01-15', order_quantity=50, order_status='Shipped';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_date, order_quantity, order_status) VALUES (2, 2, '2022-01-20', 30, 'Processing') ON DUPLICATE KEY UPDATE product_id=2, order_date='2022-01-20', order_quantity=30, order_status='Processing';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_date, order_quantity, order_status) VALUES (3, 3, '2022-01-25', 40, 'Delivered') ON DUPLICATE KEY UPDATE product_id=3, order_date='2022-01-25', order_quantity=40, order_status='Delivered';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (4, 'Supplier 4', 4, 0.88) ON DUPLICATE KEY UPDATE supplier_name='Supplier 4', performance_rating=4, delivery_performance=0.88;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (5, 'Supplier 5', 3, 0.72) ON DUPLICATE KEY UPDATE supplier_name='Supplier 5', performance_rating=3, delivery_performance=0.72;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, performance_rating, delivery_performance) VALUES (6, 'Supplier 6', 5, 0.95) ON DUPLICATE KEY UPDATE supplier_name='Supplier 6', performance_rating=5, delivery_performance=0.95;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (4, 'Product D', 4, 35.0, 90) ON DUPLICATE KEY UPDATE product_name='Product D', supplier_id=4, price=35.0, quantity_in_stock=90;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (5, 'Product E', 5, 40.0, 60) ON DUPLICATE KEY UPDATE product_name='Product E', supplier_id=5, price=40.0, quantity_in_stock=60;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, supplier_id, price, quantity_in_stock) VALUES (6, 'Product F', 6, 22.0, 120) ON DUPLICATE KEY UPDATE product_name='Product F', supplier_id=6, price=22.0, quantity_in_stock=120;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_date, order_quantity, order_status) VALUES (4, 4, '2022-01-30', 25, 'Shipped') ON DUPLICATE KEY UPDATE product_id=4, order_date='2022-01-30', order_quantity=25, order_status='Shipped';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_date, order_quantity, order_status) VALUES (5, 5, '2022-02-05', 20, 'Processing') ON DUPLICATE KEY UPDATE product_id=5, order_date='2022-02-05', order_quantity=20, order_status='Processing';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    performance_rating INT,\n    delivery_performance FLOAT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    supplier_id INT,\n    price FLOAT,\n    quantity_in_stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    order_quantity INT,\n    order_status VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_date, order_quantity, order_status) VALUES (6, 6, '2022-02-10', 35, 'Delivered') ON DUPLICATE KEY UPDATE product_id=6, order_date='2022-02-10', order_quantity=35, order_status='Delivered';",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier (supplier_id, supplier_name, supplier_location) VALUES (1, 'Supplier A', 'Location A') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier A', supplier_location = 'Location A';",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, supplier_id, purchase_date, purchase_amount) VALUES (1, 1, '2022-01-01', 100.00) ON CONFLICT (purchase_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO SupplierContacts (contact_id, supplier_id, contact_name, contact_email, contact_phone) VALUES (1, 1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (contact_id) DO UPDATE SET contact_name = 'John Doe', contact_email = 'john.doe@example.com', contact_phone = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PerformanceMetrics (metric_id, supplier_id, metric_name, metric_value) VALUES (1, 1, 'Quality', 95.00) ON CONFLICT (metric_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier (supplier_id, supplier_name, supplier_location) VALUES (2, 'Supplier B', 'Location B') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier B', supplier_location = 'Location B';",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, supplier_id, purchase_date, purchase_amount) VALUES (2, 2, '2022-01-02', 200.00) ON CONFLICT (purchase_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO SupplierContacts (contact_id, supplier_id, contact_name, contact_email, contact_phone) VALUES (2, 2, 'Jane Smith', 'jane.smith@example.com', '987-654-3210') ON CONFLICT (contact_id) DO UPDATE SET contact_name = 'Jane Smith', contact_email = 'jane.smith@example.com', contact_phone = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PerformanceMetrics (metric_id, supplier_id, metric_name, metric_value) VALUES (2, 2, 'Delivery Time', 4.5) ON CONFLICT (metric_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier (supplier_id, supplier_name, supplier_location) VALUES (3, 'Supplier C', 'Location C') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier C', supplier_location = 'Location C';",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, supplier_id, purchase_date, purchase_amount) VALUES (3, 3, '2022-01-03', 300.00) ON CONFLICT (purchase_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO SupplierContacts (contact_id, supplier_id, contact_name, contact_email, contact_phone) VALUES (3, 3, 'Alice Johnson', 'alice.johnson@example.com', '555-123-4567') ON CONFLICT (contact_id) DO UPDATE SET contact_name = 'Alice Johnson', contact_email = 'alice.johnson@example.com', contact_phone = '555-123-4567';",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PerformanceMetrics (metric_id, supplier_id, metric_name, metric_value) VALUES (3, 3, 'Communication', 90.00) ON CONFLICT (metric_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier (supplier_id, supplier_name, supplier_location) VALUES (4, 'Supplier D', 'Location D') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier D', supplier_location = 'Location D';",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, supplier_id, purchase_date, purchase_amount) VALUES (4, 4, '2022-01-04', 400.00) ON CONFLICT (purchase_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO SupplierContacts (contact_id, supplier_id, contact_name, contact_email, contact_phone) VALUES (4, 4, 'Mike Brown', 'mike.brown@example.com', '222-333-4444') ON CONFLICT (contact_id) DO UPDATE SET contact_name = 'Mike Brown', contact_email = 'mike.brown@example.com', contact_phone = '222-333-4444';",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PerformanceMetrics (metric_id, supplier_id, metric_name, metric_value) VALUES (4, 4, 'Efficiency', 85.00) ON CONFLICT (metric_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier (supplier_id, supplier_name, supplier_location) VALUES (5, 'Supplier E', 'Location E') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier E', supplier_location = 'Location E';",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, supplier_id, purchase_date, purchase_amount) VALUES (5, 5, '2022-01-05', 500.00) ON CONFLICT (purchase_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO SupplierContacts (contact_id, supplier_id, contact_name, contact_email, contact_phone) VALUES (5, 5, 'Sarah Adams', 'sarah.adams@example.com', '777-888-9999') ON CONFLICT (contact_id) DO UPDATE SET contact_name = 'Sarah Adams', contact_email = 'sarah.adams@example.com', contact_phone = '777-888-9999';",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PerformanceMetrics (metric_id, supplier_id, metric_name, metric_value) VALUES (5, 5, 'Satisfaction', 98.00) ON CONFLICT (metric_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier(supplier_id, supplier_name, supplier_location) VALUES (1, 'Supplier A', 'Location A') ON DUPLICATE KEY UPDATE supplier_name = VALUES(supplier_name), supplier_location = VALUES(supplier_location);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory(purchase_id, supplier_id, purchase_date, purchase_amount) VALUES (1, 1, '2021-10-15', 1000.50) ON DUPLICATE KEY UPDATE purchase_date = VALUES(purchase_date), purchase_amount = VALUES(purchase_amount);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO SupplierContacts(contact_id, supplier_id, contact_name, contact_email, contact_phone) VALUES (1, 1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE contact_name = VALUES(contact_name), contact_email = VALUES(contact_email), contact_phone = VALUES(contact_phone);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PerformanceMetrics(metric_id, supplier_id, metric_name, metric_value) VALUES (1, 1, 'Metric A', 50.75) ON DUPLICATE KEY UPDATE metric_name = VALUES(metric_name), metric_value = VALUES(metric_value);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier(supplier_id, supplier_name, supplier_location) VALUES (2, 'Supplier B', 'Location B') ON DUPLICATE KEY UPDATE supplier_name = VALUES(supplier_name), supplier_location = VALUES(supplier_location);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory(purchase_id, supplier_id, purchase_date, purchase_amount) VALUES (2, 2, '2021-10-16', 1500.00) ON DUPLICATE KEY UPDATE purchase_date = VALUES(purchase_date), purchase_amount = VALUES(purchase_amount);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO SupplierContacts(contact_id, supplier_id, contact_name, contact_email, contact_phone) VALUES (2, 2, 'Jane Smith', 'jane.smith@example.com', '987-654-3210') ON DUPLICATE KEY UPDATE contact_name = VALUES(contact_name), contact_email = VALUES(contact_email), contact_phone = VALUES(contact_phone);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PerformanceMetrics(metric_id, supplier_id, metric_name, metric_value) VALUES (2, 2, 'Metric B', 75.25) ON DUPLICATE KEY UPDATE metric_name = VALUES(metric_name), metric_value = VALUES(metric_value);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier(supplier_id, supplier_name, supplier_location) VALUES (3, 'Supplier C', 'Location C') ON DUPLICATE KEY UPDATE supplier_name = VALUES(supplier_name), supplier_location = VALUES(supplier_location);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory(purchase_id, supplier_id, purchase_date, purchase_amount) VALUES (3, 3, '2021-10-17', 2000.00) ON DUPLICATE KEY UPDATE purchase_date = VALUES(purchase_date), purchase_amount = VALUES(purchase_amount);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO SupplierContacts(contact_id, supplier_id, contact_name, contact_email, contact_phone) VALUES (3, 3, 'Mark Johnson', 'mark.johnson@example.com', '456-789-0123') ON DUPLICATE KEY UPDATE contact_name = VALUES(contact_name), contact_email = VALUES(contact_email), contact_phone = VALUES(contact_phone);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PerformanceMetrics(metric_id, supplier_id, metric_name, metric_value) VALUES (3, 3, 'Metric C', 100.50) ON DUPLICATE KEY UPDATE metric_name = VALUES(metric_name), metric_value = VALUES(metric_value);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier(supplier_id, supplier_name, supplier_location) VALUES (4, 'Supplier D', 'Location D') ON DUPLICATE KEY UPDATE supplier_name = VALUES(supplier_name), supplier_location = VALUES(supplier_location);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory(purchase_id, supplier_id, purchase_date, purchase_amount) VALUES (4, 4, '2021-10-18', 2500.00) ON DUPLICATE KEY UPDATE purchase_date = VALUES(purchase_date), purchase_amount = VALUES(purchase_amount);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO SupplierContacts(contact_id, supplier_id, contact_name, contact_email, contact_phone) VALUES (4, 4, 'Emily Brown', 'emily.brown@example.com', '789-012-3456') ON DUPLICATE KEY UPDATE contact_name = VALUES(contact_name), contact_email = VALUES(contact_email), contact_phone = VALUES(contact_phone);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PerformanceMetrics(metric_id, supplier_id, metric_name, metric_value) VALUES (4, 4, 'Metric D', 125.75) ON DUPLICATE KEY UPDATE metric_name = VALUES(metric_name), metric_value = VALUES(metric_value);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier(supplier_id, supplier_name, supplier_location) VALUES (5, 'Supplier E', 'Location E') ON DUPLICATE KEY UPDATE supplier_name = VALUES(supplier_name), supplier_location = VALUES(supplier_location);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory(purchase_id, supplier_id, purchase_date, purchase_amount) VALUES (5, 5, '2021-10-19', 3000.00) ON DUPLICATE KEY UPDATE purchase_date = VALUES(purchase_date), purchase_amount = VALUES(purchase_amount);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO SupplierContacts(contact_id, supplier_id, contact_name, contact_email, contact_phone) VALUES (5, 5, 'Sarah Lee', 'sarah.lee@example.com', '012-345-6789') ON DUPLICATE KEY UPDATE contact_name = VALUES(contact_name), contact_email = VALUES(contact_email), contact_phone = VALUES(contact_phone);",
  "### TABLEDATA\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_location VARCHAR(100)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    supplier_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10,2)\n);\n\n\nCREATE TABLE SupplierContacts (\n    contact_id INT PRIMARY KEY,\n    supplier_id INT,\n    contact_name VARCHAR(50),\n    contact_email VARCHAR(100),\n    contact_phone VARCHAR(15)\n);\n\n\nCREATE TABLE PerformanceMetrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL(10,2)\n);\n\n### STATEMENT\n\nINSERT INTO PerformanceMetrics(metric_id, supplier_id, metric_name, metric_value) VALUES (5, 5, 'Metric E', 150.25) ON DUPLICATE KEY UPDATE metric_name = VALUES(metric_name), metric_value = VALUES(metric_value);",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (1, 'Supplier A', 'Location A') ON DUPLICATE KEY UPDATE supplier_name='Supplier A', supplier_location='Location A';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (2, 'Supplier B', 'Location B') ON DUPLICATE KEY UPDATE supplier_name='Supplier B', supplier_location='Location B';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (3, 'Supplier C', 'Location C') ON DUPLICATE KEY UPDATE supplier_name='Supplier C', supplier_location='Location C';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (4, 'Supplier D', 'Location D') ON DUPLICATE KEY UPDATE supplier_name='Supplier D', supplier_location='Location D';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (5, 'Supplier E', 'Location E') ON DUPLICATE KEY UPDATE supplier_name='Supplier E', supplier_location='Location E';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (6, 'Supplier F', 'Location F') ON DUPLICATE KEY UPDATE supplier_name='Supplier F', supplier_location='Location F';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (7, 'Supplier G', 'Location G') ON DUPLICATE KEY UPDATE supplier_name='Supplier G', supplier_location='Location G';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (8, 'Supplier H', 'Location H') ON DUPLICATE KEY UPDATE supplier_name='Supplier H', supplier_location='Location H';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (9, 'Supplier I', 'Location I') ON DUPLICATE KEY UPDATE supplier_name='Supplier I', supplier_location='Location I';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (10, 'Supplier J', 'Location J') ON DUPLICATE KEY UPDATE supplier_name='Supplier J', supplier_location='Location J';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (11, 'Supplier K', 'Location K') ON DUPLICATE KEY UPDATE supplier_name='Supplier K', supplier_location='Location K';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (12, 'Supplier L', 'Location L') ON DUPLICATE KEY UPDATE supplier_name='Supplier L', supplier_location='Location L';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (13, 'Supplier M', 'Location M') ON DUPLICATE KEY UPDATE supplier_name='Supplier M', supplier_location='Location M';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (14, 'Supplier N', 'Location N') ON DUPLICATE KEY UPDATE supplier_name='Supplier N', supplier_location='Location N';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (15, 'Supplier O', 'Location O') ON DUPLICATE KEY UPDATE supplier_name='Supplier O', supplier_location='Location O';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (16, 'Supplier P', 'Location P') ON DUPLICATE KEY UPDATE supplier_name='Supplier P', supplier_location='Location P';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (17, 'Supplier Q', 'Location Q') ON DUPLICATE KEY UPDATE supplier_name='Supplier Q', supplier_location='Location Q';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (18, 'Supplier R', 'Location R') ON DUPLICATE KEY UPDATE supplier_name='Supplier R', supplier_location='Location R';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (19, 'Supplier S', 'Location S') ON DUPLICATE KEY UPDATE supplier_name='Supplier S', supplier_location='Location S';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (20, 'Supplier T', 'Location T') ON DUPLICATE KEY UPDATE supplier_name='Supplier T', supplier_location='Location T';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (1, 'Supplier A', 'Location A') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = excluded.supplier_name, supplier_location = excluded.supplier_location;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, supplier_id) VALUES (1, 'Product A', 'Category A', 1) ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, product_category = excluded.product_category, supplier_id = excluded.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO deliveries (delivery_id, product_id, delivery_date, quantity) VALUES (1, 1, '2022-01-01', 100) ON CONFLICT (delivery_id) DO UPDATE SET product_id = excluded.product_id, delivery_date = excluded.delivery_date, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO performance_metrics (metric_id, supplier_id, delivery_id, reliability_score, fulfillment_score, negotiation_score) VALUES (1, 1, 1, 4.5, 4.0, 4.2) ON CONFLICT (metric_id) DO UPDATE SET supplier_id = excluded.supplier_id, delivery_id = excluded.delivery_id, reliability_score = excluded.reliability_score, fulfillment_score = excluded.fulfillment_score, negotiation_score = excluded.negotiation_score;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO contracts (contract_id, supplier_id, product_id, delivery_id, contract_date, total_amount) VALUES (1, 1, 1, 1, '2022-01-01', 1000.00) ON CONFLICT (contract_id) DO UPDATE SET supplier_id = excluded.supplier_id, product_id = excluded.product_id, delivery_id = excluded.delivery_id, contract_date = excluded.contract_date, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (2, 'Supplier B', 'Location B') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = excluded.supplier_name, supplier_location = excluded.supplier_location;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, supplier_id) VALUES (2, 'Product B', 'Category B', 2) ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, product_category = excluded.product_category, supplier_id = excluded.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO deliveries (delivery_id, product_id, delivery_date, quantity) VALUES (2, 2, '2022-01-02', 150) ON CONFLICT (delivery_id) DO UPDATE SET product_id = excluded.product_id, delivery_date = excluded.delivery_date, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO performance_metrics (metric_id, supplier_id, delivery_id, reliability_score, fulfillment_score, negotiation_score) VALUES (2, 2, 2, 4.8, 4.2, 4.5) ON CONFLICT (metric_id) DO UPDATE SET supplier_id = excluded.supplier_id, delivery_id = excluded.delivery_id, reliability_score = excluded.reliability_score, fulfillment_score = excluded.fulfillment_score, negotiation_score = excluded.negotiation_score;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO contracts (contract_id, supplier_id, product_id, delivery_id, contract_date, total_amount) VALUES (2, 2, 2, 2, '2022-01-02', 1500.00) ON CONFLICT (contract_id) DO UPDATE SET supplier_id = excluded.supplier_id, product_id = excluded.product_id, delivery_id = excluded.delivery_id, contract_date = excluded.contract_date, total_amount = excluded.total_amount;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (3, 'Supplier C', 'Location C') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = excluded.supplier_name, supplier_location = excluded.supplier_location;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, supplier_id) VALUES (3, 'Product C', 'Category C', 3) ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, product_category = excluded.product_category, supplier_id = excluded.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO deliveries (delivery_id, product_id, delivery_date, quantity) VALUES (3, 3, '2022-01-03', 200) ON CONFLICT (delivery_id) DO UPDATE SET product_id = excluded.product_id, delivery_date = excluded.delivery_date, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO performance_metrics (metric_id, supplier_id, delivery_id, reliability_score, fulfillment_score, negotiation_score) VALUES (3, 3, 3, 4.2, 3.8, 4.0) ON CONFLICT (metric_id) DO UPDATE SET supplier_id = excluded.supplier_id, delivery_id = excluded.delivery_id, reliability_score = excluded.reliability_score, fulfillment_score = excluded.fulfillment_score, negotiation_score = excluded.negotiation_score;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    supplier_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    product_category VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    product_id INT,\n    delivery_date DATE NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    supplier_id INT,\n    delivery_id INT,\n    reliability_score DECIMAL(5,2) NOT NULL,\n    fulfillment_score DECIMAL(5,2) NOT NULL,\n    negotiation_score DECIMAL(5,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    delivery_id INT,\n    contract_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (delivery_id) REFERENCES deliveries(delivery_id)\n);\n\n### STATEMENT\n\nINSERT INTO contracts (contract_id, supplier_id, product_id, delivery_id, contract_date, total_amount) VALUES (3, 3, 3, 3, '2022-01-03', 2000.00) ON CONFLICT (contract_id) DO UPDATE SET supplier_id = excluded.supplier_id, product_id = excluded.product_id, delivery_id = excluded.delivery_id, contract_date = excluded.contract_date, total_amount = excluded.total_amount;"
]