[
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_name FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, product_category FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_category='Electronics';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_id=101;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, rfid_tag_id FROM products WHERE product_category='Clothing';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, product_category, rfid_tag_id FROM products ORDER BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_category FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT MAX(rfid_tag_id) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, product_category, rfid_tag_id FROM products WHERE product_id > 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_name LIKE '%phone%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, product_category, rfid_tag_id FROM products WHERE product_category='Accessories';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT AVG(rfid_tag_id) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, rfid_tag_id FROM products WHERE rfid_tag_id BETWEEN 1000 AND 2000;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_category IN ('Electronics', 'Clothing');",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT product_category) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, rfid_tag_id FROM products WHERE product_id < 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_category='Furniture' AND rfid_tag_id > 3000;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT MIN(rfid_tag_id) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, product_category FROM products WHERE rfid_tag_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM products WHERE product_category LIKE '%Clothing%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE rfid_tag_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_category FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM products ORDER BY product_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT AVG(rfid_tag_id) FROM products WHERE product_category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM products WHERE product_category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT MAX(rfid_tag_id) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT MIN(rfid_tag_id) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_count FROM products GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_category, AVG(rfid_tag_id) AS avg_rfid_tag FROM products GROUP BY product_category;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT product_category) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, rfid_tag_id, CASE WHEN rfid_tag_id IS NULL THEN 'No RFID' ELSE 'Has RFID' END AS rfid_status FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_id IN (1, 5, 10);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_name LIKE '%chair%' AND product_category = 'Furniture';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, rfid_tag_id FROM products WHERE product_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, product_category FROM products WHERE product_name IN ('Table', 'Chair');",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_name = 'Desk' OR product_name = 'Chair';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_description FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT * FROM tracking;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT location, timestamp FROM tracking;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT * FROM location_history;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT previous_location, new_location FROM location_history;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT products.product_id, products.product_name, tracking.location FROM products JOIN tracking ON products.product_id = tracking.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT products.product_name, location_history.previous_location, location_history.new_location FROM products JOIN tracking ON products.product_id = tracking.product_id JOIN location_history ON tracking.tracking_id = location_history.tracking_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_name FROM products WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT location FROM tracking WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT previous_location FROM location_history WHERE tracking_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_description FROM products WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT location, timestamp FROM tracking WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT previous_location, new_location FROM location_history WHERE tracking_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT MAX(product_id) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT MIN(product_id) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT AVG(product_id) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT location FROM tracking;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_name, timestamp FROM products JOIN tracking ON products.product_id = tracking.product_id WHERE tracking.location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM products WHERE product_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, product_description FROM products WHERE product_id = 456 AND product_name LIKE '%shirt%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, rfid_tag_id FROM products WHERE rfid_tag_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, product_description FROM products WHERE product_id IN (SELECT product_id FROM tracking WHERE location = 'Warehouse');",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT tracking_id, location, timestamp FROM tracking WHERE product_id = 789 ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT tracking.tracking_id, location_history.previous_location, location_history.new_location FROM tracking JOIN location_history ON tracking.tracking_id = location_history.tracking_id WHERE tracking.product_id = 234;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT products.product_name, tracking.location, tracking.timestamp FROM tracking JOIN products ON tracking.product_id = products.product_id WHERE tracking.location = 'Store';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT products.product_id, location_history.timestamp FROM products LEFT JOIN tracking ON products.product_id = tracking.product_id LEFT JOIN location_history ON tracking.tracking_id = location_history.tracking_id WHERE products.product_id = 345;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_products FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, COUNT(*) AS total_movements FROM tracking GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, MAX(timestamp) AS last_movement_timestamp FROM tracking GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_movements, AVG(DATE_PART('day', NOW() - timestamp)) AS avg_days_since_last_movement FROM products JOIN tracking ON products.product_id = tracking.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT location, COUNT(*) AS total_movements FROM tracking GROUP BY location HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, location, timestamp FROM tracking WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT products.product_id, products.product_name, location_history.previous_location, location_history.new_location FROM products JOIN tracking ON products.product_id = tracking.product_id JOIN location_history ON tracking.tracking_id = location_history.tracking_id WHERE products.product_name LIKE '%shoes%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_id FROM tracking WHERE location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, CASE WHEN rfid_tag_id IS NULL THEN 'No RFID' ELSE 'RFID Available' END AS rfid_status FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT tracking_id, location, timestamp, product_name FROM tracking JOIN products ON tracking.product_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, timestamp::DATE AS movement_date FROM tracking WHERE product_id = 678 ORDER BY timestamp DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM product_tracking;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM product_tracking WHERE product_location = 'Warehouse A';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM warehouse_inventory;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT item_count FROM warehouse_inventory WHERE warehouse_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM supply_chain_log WHERE event_description LIKE '%received%';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT log_id, timestamp FROM supply_chain_log ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, tracking_status FROM product_tracking WHERE tracking_status = 'Shipped';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_id, SUM(item_count) AS total_items FROM warehouse_inventory GROUP BY warehouse_id;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_location FROM product_tracking;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT MAX(item_count) AS max_item_count FROM warehouse_inventory;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM product_tracking WHERE product_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT log_id, event_description FROM supply_chain_log WHERE timestamp < NOW();",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, product_location FROM product_tracking WHERE product_location IN ('Warehouse A', 'Warehouse B');",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT warehouse_id) AS total_warehouses FROM warehouse_inventory;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT event_location, COUNT(*) AS event_count FROM supply_chain_log GROUP BY event_location;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_logs FROM supply_chain_log;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT AVG(item_count) AS avg_item_count FROM warehouse_inventory;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, MAX(item_count) AS max_item_count FROM warehouse_inventory GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT SUM(item_count) AS total_items FROM warehouse_inventory;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT event_location, MIN(timestamp) AS first_event_time FROM supply_chain_log GROUP BY event_location;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM product_tracking WHERE tracking_status='Shipped';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, product_location, tracking_status FROM product_tracking WHERE product_id=123;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT PT.product_name, WI.item_count FROM product_tracking PT INNER JOIN warehouse_inventory WI ON PT.product_id = WI.product_id WHERE WI.warehouse_id=456;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT SUM(item_count) AS total_items FROM warehouse_inventory;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT MIN(item_count) AS min_items, MAX(item_count) AS max_items FROM warehouse_inventory WHERE product_id IN (SELECT product_id FROM product_tracking WHERE tracking_status='Delivered');",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM supply_chain_log WHERE event_description LIKE '%shipment%';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_logs FROM supply_chain_log WHERE timestamp BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT DISTINCT warehouse_id FROM warehouse_inventory;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT PT.product_name, COUNT(*) AS total_logs FROM product_tracking PT INNER JOIN supply_chain_log SCL ON PT.product_id = SCL.log_id GROUP BY PT.product_name;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT PT.product_name, WI.item_count FROM product_tracking PT LEFT JOIN warehouse_inventory WI ON PT.product_id = WI.product_id WHERE WI.item_count > 100;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT PT.product_name, COUNT(*) AS total_logs FROM product_tracking PT LEFT JOIN supply_chain_log SCL ON PT.product_id = SCL.log_id WHERE SCL.timestamp >= '2022-01-01' GROUP BY PT.product_name;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT PT.product_name, MAX(SCL.timestamp) AS recent_event FROM product_tracking PT LEFT JOIN supply_chain_log SCL ON PT.product_id = SCL.log_id GROUP BY PT.product_name;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT PT.product_name, MAX(SCL.timestamp) AS recent_event FROM product_tracking PT LEFT JOIN supply_chain_log SCL ON PT.product_id = SCL.log_id WHERE SCL.event_location = 'Warehouse A' GROUP BY PT.product_name;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT PT.product_name, AVG(item_count) AS avg_item_count FROM product_tracking PT INNER JOIN warehouse_inventory WI ON PT.product_id = WI.product_id GROUP BY PT.product_name;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM product_tracking ORDER BY tracking_status DESC, product_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_shipments FROM product_tracking WHERE tracking_status IN ('Shipped', 'Delivered') GROUP BY product_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT PT.product_name, MAX(SCL.timestamp) AS recent_event FROM product_tracking PT LEFT JOIN supply_chain_log SCL ON PT.product_id = SCL.log_id WHERE SCL.timestamp >= '2022-07-01' GROUP BY PT.product_name HAVING COUNT(SCL.log_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT PT.product_name, COUNT(*) AS total_events FROM product_tracking PT LEFT JOIN supply_chain_log SCL ON PT.product_id = SCL.log_id GROUP BY PT.product_name HAVING COUNT(SCL.log_id) > 0;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT PT.product_name, COUNT(*) AS total_events FROM product_tracking PT LEFT JOIN supply_chain_log SCL ON PT.product_id = SCL.log_id GROUP BY PT.product_name HAVING SUM(SCL.timestamp) > 0;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT PT.product_name, COUNT(*) AS total_logs FROM product_tracking PT LEFT JOIN supply_chain_log SCL ON PT.product_id = SCL.log_id GROUP BY PT.product_name HAVING AVG(SCL.timestamp) > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM product_tracking PT1 CROSS JOIN product_tracking PT2 WHERE PT1.product_name <> PT2.product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT name, category FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT id, rfid_tag FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT * FROM locations;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT name, address FROM locations;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT id, zip_code FROM locations;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT * FROM tracking_history;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT product_id, location_id, timestamp FROM tracking_history;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT * FROM alerts;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT product_id, message FROM alerts;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT id, timestamp FROM alerts;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT products.name, tracking_history.timestamp FROM products JOIN tracking_history ON products.id = tracking_history.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT products.name, locations.address FROM products JOIN tracking_history ON products.id = tracking_history.product_id JOIN locations ON tracking_history.location_id = locations.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT products.name, alerts.message FROM products JOIN alerts ON products.id = alerts.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT products.name, alerts.message, alerts.timestamp FROM products JOIN alerts ON products.id = alerts.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT products.name, locations.name, tracking_history.timestamp FROM products JOIN tracking_history ON products.id = tracking_history.product_id JOIN locations ON tracking_history.location_id = locations.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT products.name, locations.name, tracking_history.timestamp, alerts.message FROM products JOIN tracking_history ON products.id = tracking_history.product_id JOIN locations ON tracking_history.location_id = locations.id JOIN alerts ON products.id = alerts.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT products.name AS product_name, locations.name AS location_name, tracking_history.timestamp AS last_seen FROM products JOIN tracking_history ON products.id = tracking_history.product_id JOIN locations ON tracking_history.location_id = locations.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT products.name, COUNT(tracking_history.id) AS total_tracking_events FROM products JOIN tracking_history ON products.id = tracking_history.product_id GROUP BY products.name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT AVG(tracking_history.timestamp) AS avg_timestamp FROM tracking_history;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT id, name FROM products WHERE category='Electronics';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, l.address FROM products p JOIN tracking_history t ON p.id = t.product_id JOIN locations l ON t.location_id = l.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.id, p.name, t.timestamp, l.name AS location_name FROM products p JOIN tracking_history t ON p.id = t.product_id JOIN locations l ON t.location_id = l.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.id, p.name, a.message AS alert_message, a.timestamp AS alert_timestamp FROM products p JOIN alerts a ON p.id = a.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, COUNT(t.id) AS tracking_count FROM products p JOIN tracking_history t ON p.id = t.product_id GROUP BY p.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, MIN(t.timestamp) AS first_tracking_timestamp FROM products p JOIN tracking_history t ON p.id = t.product_id GROUP BY p.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, AVG(t.timestamp) AS average_tracking_timestamp FROM products p JOIN tracking_history t ON p.id = t.product_id GROUP BY p.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, MAX(t.timestamp) AS latest_tracking_timestamp FROM products p JOIN tracking_history t ON p.id = t.product_id GROUP BY p.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, COUNT(a.id) AS alert_count FROM products p JOIN alerts a ON p.id = a.product_id GROUP BY p.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, MIN(a.timestamp) AS first_alert_timestamp FROM products p JOIN alerts a ON p.id = a.product_id GROUP BY p.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, AVG(a.timestamp) AS average_alert_timestamp FROM products p JOIN alerts a ON p.id = a.product_id GROUP BY p.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, MAX(a.timestamp) AS latest_alert_timestamp FROM products p JOIN alerts a ON p.id = a.product_id GROUP BY p.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, COUNT(t.id) AS tracking_count, COUNT(a.id) AS alert_count FROM products p JOIN tracking_history t ON p.id = t.product_id LEFT JOIN alerts a ON p.id = a.product_id GROUP BY p.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, COUNT(t.id) AS tracking_count, COUNT(a.id) AS alert_count FROM products p LEFT JOIN tracking_history t ON p.id = t.product_id LEFT JOIN alerts a ON p.id = a.product_id GROUP BY p.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, COUNT(t.id) AS tracking_count, COUNT(a.id) AS alert_count FROM products p LEFT JOIN tracking_history t ON p.id = t.product_id LEFT JOIN alerts a ON p.id = a.product_id WHERE t.timestamp > '2022-01-01' AND a.timestamp > '2022-01-01' GROUP BY p.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, COUNT(t.id) AS tracking_count, COUNT(a.id) AS alert_count, l.address FROM products p JOIN tracking_history t ON p.id = t.product_id JOIN alerts a ON p.id = a.product_id JOIN locations l ON t.location_id = l.id GROUP BY p.id, l.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, COUNT(t.id) AS tracking_count, COUNT(a.id) AS alert_count, l.address FROM products p JOIN tracking_history t ON p.id = t.product_id JOIN alerts a ON p.id = a.product_id JOIN locations l ON t.location_id = l.id WHERE t.timestamp > '2022-01-01' AND a.timestamp > '2022-01-01' GROUP BY p.id, l.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nSELECT p.name, AVG(t.timestamp) AS average_tracking_timestamp, MAX(a.timestamp) AS latest_alert_timestamp, l.address FROM products p JOIN tracking_history t ON p.id = t.product_id JOIN alerts a ON p.id = a.product_id JOIN locations l ON t.location_id = l.id GROUP BY p.id, l.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, product_description FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, rfid_tag FROM products WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM locations;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT location_name, capacity FROM locations;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT location_name, location_address FROM locations WHERE location_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM tracking_logs;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT rfid_tag, location_id, timestamp FROM tracking_logs;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT rfid_tag, location_id FROM tracking_logs WHERE log_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_address FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_person FROM suppliers WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_id, product_id, quantity FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_id, shipment_id FROM shipments WHERE product_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_name LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM locations WHERE location_name LIKE '%Storage%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM tracking_logs WHERE timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_name = 'ABC Company';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM shipments WHERE shipped_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, product_description FROM products WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, location_name FROM products p JOIN tracking_logs tl ON p.rfid_tag = tl.rfid_tag JOIN locations l ON l.location_id = tl.location_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_person FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name, quantity FROM suppliers s JOIN shipments sh ON s.supplier_id = sh.supplier_id JOIN products p ON sh.product_id = p.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, shipped_date FROM products p JOIN shipments sh ON p.product_id = sh.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name, quantity, shipped_date FROM suppliers s JOIN shipments sh ON s.supplier_id = sh.supplier_id JOIN products p ON sh.product_id = p.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_name LIKE '%shoes%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM tracking_logs WHERE location_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) as total_quantity FROM products p JOIN shipments sh ON p.product_id = sh.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_id, AVG(quantity) as avg_quantity FROM shipments GROUP BY supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT location_name, COUNT(*) FROM locations l JOIN tracking_logs tl ON l.location_id = tl.location_id GROUP BY location_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, MAX(quantity) as max_quantity FROM shipments GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, MIN(quantity) as min_quantity FROM suppliers s JOIN shipments sh ON s.supplier_id = sh.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name, quantity, shipped_date FROM suppliers s JOIN shipments sh ON s.supplier_id = sh.supplier_id JOIN products p ON sh.product_id = p.product_id WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) as total_shipments FROM products p JOIN shipments sh ON p.product_id = sh.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, AVG(quantity) as avg_quantity, MAX(quantity) as max_quantity, MIN(quantity) as min_quantity FROM suppliers s JOIN shipments sh ON s.supplier_id = sh.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT location_name, COUNT(*) as total_logs FROM locations l JOIN tracking_logs tl ON l.location_id = tl.location_id GROUP BY location_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name, quantity, shipped_date FROM suppliers s JOIN shipments sh ON s.supplier_id = sh.supplier_id JOIN products p ON sh.product_id = p.product_id ORDER BY shipped_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, location_name, timestamp FROM products p JOIN tracking_logs tl ON p.rfid_tag = tl.rfid_tag JOIN locations l ON l.location_id = tl.location_id WHERE timestamp >= '2022-01-01';"
]