[
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (1, 'Product 1', 'Category 1', 12345) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 1 Updated', product_category = 'Category 1 Updated', rfid_tag_id = 12345;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (2, 'Product 2', 'Category 2', 54321) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 2 Updated', product_category = 'Category 2 Updated', rfid_tag_id = 54321;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (3, 'Product 3', 'Category 1', 67890) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 3 Updated', product_category = 'Category 1 Updated', rfid_tag_id = 67890;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (4, 'Product 4', 'Category 3', 98765) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 4 Updated', product_category = 'Category 3 Updated', rfid_tag_id = 98765;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (5, 'Product 5', 'Category 2', 24680) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 5 Updated', product_category = 'Category 2 Updated', rfid_tag_id = 24680;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (6, 'Product 6', 'Category 1', 13579) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 6 Updated', product_category = 'Category 1 Updated', rfid_tag_id = 13579;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (7, 'Product 7', 'Category 3', 97531) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 7 Updated', product_category = 'Category 3 Updated', rfid_tag_id = 97531;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (8, 'Product 8', 'Category 2', 35791) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 8 Updated', product_category = 'Category 2 Updated', rfid_tag_id = 35791;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (9, 'Product 9', 'Category 1', 99999) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 9 Updated', product_category = 'Category 1 Updated', rfid_tag_id = 99999;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (10, 'Product 10', 'Category 3', 88888) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 10 Updated', product_category = 'Category 3 Updated', rfid_tag_id = 88888;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (11, 'Product 11', 'Category 2', 77777) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 11 Updated', product_category = 'Category 2 Updated', rfid_tag_id = 77777;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (12, 'Product 12', 'Category 1', 66666) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 12 Updated', product_category = 'Category 1 Updated', rfid_tag_id = 66666;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (13, 'Product 13', 'Category 3', 55555) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 13 Updated', product_category = 'Category 3 Updated', rfid_tag_id = 55555;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (14, 'Product 14', 'Category 2', 44444) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 14 Updated', product_category = 'Category 2 Updated', rfid_tag_id = 44444;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (15, 'Product 15', 'Category 1', 33333) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 15 Updated', product_category = 'Category 1 Updated', rfid_tag_id = 33333;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (16, 'Product 16', 'Category 3', 22222) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 16 Updated', product_category = 'Category 3 Updated', rfid_tag_id = 22222;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (17, 'Product 17', 'Category 2', 11111) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 17 Updated', product_category = 'Category 2 Updated', rfid_tag_id = 11111;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (18, 'Product 18', 'Category 1', 24680) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 18 Updated', product_category = 'Category 1 Updated', rfid_tag_id = 24680;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (19, 'Product 19', 'Category 3', 13579) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 19 Updated', product_category = 'Category 3 Updated', rfid_tag_id = 13579;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (20, 'Product 20', 'Category 2', 97531) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 20 Updated', product_category = 'Category 2 Updated', rfid_tag_id = 97531;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (1, 'Shoes', 'Fashion', 123) ON DUPLICATE KEY UPDATE product_name='Shoes', product_category='Fashion', rfid_tag_id=123;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (2, 'Laptop', 'Electronics', 456) ON DUPLICATE KEY UPDATE product_name='Laptop', product_category='Electronics', rfid_tag_id=456;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (3, 'Book', 'Stationery', 789) ON DUPLICATE KEY UPDATE product_name='Book', product_category='Stationery', rfid_tag_id=789;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (4, 'Guitar', 'Music', 234) ON DUPLICATE KEY UPDATE product_name='Guitar', product_category='Music', rfid_tag_id=234;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (5, 'Headphones', 'Electronics', 567) ON DUPLICATE KEY UPDATE product_name='Headphones', product_category='Electronics', rfid_tag_id=567;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (6, 'Sunglasses', 'Fashion', 890) ON DUPLICATE KEY UPDATE product_name='Sunglasses', product_category='Fashion', rfid_tag_id=890;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (7, 'Notebook', 'Stationery', 123) ON DUPLICATE KEY UPDATE product_name='Notebook', product_category='Stationery', rfid_tag_id=123;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (8, 'Printer', 'Electronics', 456) ON DUPLICATE KEY UPDATE product_name='Printer', product_category='Electronics', rfid_tag_id=456;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (9, 'Piano', 'Music', 789) ON DUPLICATE KEY UPDATE product_name='Piano', product_category='Music', rfid_tag_id=789;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (10, 'Scarf', 'Fashion', 234) ON DUPLICATE KEY UPDATE product_name='Scarf', product_category='Fashion', rfid_tag_id=234;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (11, 'Tablet', 'Electronics', 567) ON DUPLICATE KEY UPDATE product_name='Tablet', product_category='Electronics', rfid_tag_id=567;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (12, 'Pen', 'Stationery', 890) ON DUPLICATE KEY UPDATE product_name='Pen', product_category='Stationery', rfid_tag_id=890;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (13, 'Violin', 'Music', 123) ON DUPLICATE KEY UPDATE product_name='Violin', product_category='Music', rfid_tag_id=123;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (14, 'Watch', 'Fashion', 456) ON DUPLICATE KEY UPDATE product_name='Watch', product_category='Fashion', rfid_tag_id=456;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (15, 'Camera', 'Electronics', 789) ON DUPLICATE KEY UPDATE product_name='Camera', product_category='Electronics', rfid_tag_id=789;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (16, 'Eraser', 'Stationery', 234) ON DUPLICATE KEY UPDATE product_name='Eraser', product_category='Stationery', rfid_tag_id=234;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (17, 'Drums', 'Music', 567) ON DUPLICATE KEY UPDATE product_name='Drums', product_category='Music', rfid_tag_id=567;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (18, 'Hat', 'Fashion', 890) ON DUPLICATE KEY UPDATE product_name='Hat', product_category='Fashion', rfid_tag_id=890;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (19, 'Computer', 'Electronics', 123) ON DUPLICATE KEY UPDATE product_name='Computer', product_category='Electronics', rfid_tag_id=123;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_category VARCHAR(100),\n    rfid_tag_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_category, rfid_tag_id) VALUES (20, 'Calculator', 'Stationery', 456) ON DUPLICATE KEY UPDATE product_name='Calculator', product_category='Stationery', rfid_tag_id=456;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (1, 'Product 1', 'Description 1', 'RFID001') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 1 updated', product_description = 'Description 1 updated', rfid_tag_id = 'RFID001 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (2, 'Product 2', 'Description 2', 'RFID002') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 2 updated', product_description = 'Description 2 updated', rfid_tag_id = 'RFID002 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (3, 'Product 3', 'Description 3', 'RFID003') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 3 updated', product_description = 'Description 3 updated', rfid_tag_id = 'RFID003 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (4, 'Product 4', 'Description 4', 'RFID004') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 4 updated', product_description = 'Description 4 updated', rfid_tag_id = 'RFID004 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (5, 'Product 5', 'Description 5', 'RFID005') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 5 updated', product_description = 'Description 5 updated', rfid_tag_id = 'RFID005 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (6, 'Product 6', 'Description 6', 'RFID006') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 6 updated', product_description = 'Description 6 updated', rfid_tag_id = 'RFID006 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (7, 'Product 7', 'Description 7', 'RFID007') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 7 updated', product_description = 'Description 7 updated', rfid_tag_id = 'RFID007 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (8, 'Product 8', 'Description 8', 'RFID008') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 8 updated', product_description = 'Description 8 updated', rfid_tag_id = 'RFID008 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (9, 'Product 9', 'Description 9', 'RFID009') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 9 updated', product_description = 'Description 9 updated', rfid_tag_id = 'RFID009 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (10, 'Product 10', 'Description 10', 'RFID010') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 10 updated', product_description = 'Description 10 updated', rfid_tag_id = 'RFID010 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (11, 'Product 11', 'Description 11', 'RFID011') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 11 updated', product_description = 'Description 11 updated', rfid_tag_id = 'RFID011 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (12, 'Product 12', 'Description 12', 'RFID012') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 12 updated', product_description = 'Description 12 updated', rfid_tag_id = 'RFID012 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (13, 'Product 13', 'Description 13', 'RFID013') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 13 updated', product_description = 'Description 13 updated', rfid_tag_id = 'RFID013 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (14, 'Product 14', 'Description 14', 'RFID014') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 14 updated', product_description = 'Description 14 updated', rfid_tag_id = 'RFID014 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (15, 'Product 15', 'Description 15', 'RFID015') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 15 updated', product_description = 'Description 15 updated', rfid_tag_id = 'RFID015 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (16, 'Product 16', 'Description 16', 'RFID016') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 16 updated', product_description = 'Description 16 updated', rfid_tag_id = 'RFID016 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (17, 'Product 17', 'Description 17', 'RFID017') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 17 updated', product_description = 'Description 17 updated', rfid_tag_id = 'RFID017 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (18, 'Product 18', 'Description 18', 'RFID018') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 18 updated', product_description = 'Description 18 updated', rfid_tag_id = 'RFID018 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (19, 'Product 19', 'Description 19', 'RFID019') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 19 updated', product_description = 'Description 19 updated', rfid_tag_id = 'RFID019 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (20, 'Product 20', 'Description 20', 'RFID020') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 20 updated', product_description = 'Description 20 updated', rfid_tag_id = 'RFID020 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (1, 'Laptop', 'High-performance laptop with SSD storage', 'RFID123') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Laptop', product_description = 'Updated description', rfid_tag_id = 'RFID456';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (2, 'Smartphone', 'Flagship smartphone with dual-camera setup', 'RFID456') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Smartphone', product_description = 'Updated description', rfid_tag_id = 'RFID789';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_description, rfid_tag_id) VALUES (3, 'Headphones', 'Wireless headphones with noise cancellation', 'RFID789') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Headphones', product_description = 'Updated description', rfid_tag_id = 'RFID012';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nINSERT INTO tracking (tracking_id, product_id, location, timestamp) VALUES (1, 1, 'Warehouse A', '2022-10-15 09:00:00') ON CONFLICT (tracking_id) DO UPDATE SET location = 'Updated Warehouse A', timestamp = '2022-10-15 10:30:00';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nINSERT INTO tracking (tracking_id, product_id, location, timestamp) VALUES (2, 2, 'Warehouse B', '2022-10-15 10:00:00') ON CONFLICT (tracking_id) DO UPDATE SET location = 'Updated Warehouse B', timestamp = '2022-10-15 11:30:00';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nINSERT INTO tracking (tracking_id, product_id, location, timestamp) VALUES (3, 3, 'Warehouse C', '2022-10-15 11:00:00') ON CONFLICT (tracking_id) DO UPDATE SET location = 'Updated Warehouse C', timestamp = '2022-10-15 12:30:00';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nINSERT INTO location_history (tracking_id, previous_location, new_location, timestamp) VALUES (1, 'Factory A', 'Warehouse A', '2022-10-15 09:00:00') ON CONFLICT (tracking_id) DO UPDATE SET previous_location = 'Updated Factory A', new_location = 'Updated Warehouse A', timestamp = '2022-10-15 10:30:00';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nINSERT INTO location_history (tracking_id, previous_location, new_location, timestamp) VALUES (2, 'Factory B', 'Warehouse B', '2022-10-15 10:00:00') ON CONFLICT (tracking_id) DO UPDATE SET previous_location = 'Updated Factory B', new_location = 'Updated Warehouse B', timestamp = '2022-10-15 11:30:00';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT,\n    rfid_tag_id VARCHAR(20) UNIQUE\n);\n\nCREATE TABLE tracking (\n    tracking_id INT PRIMARY KEY,\n    product_id INT,\n    location VARCHAR(100) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE location_history (\n    tracking_id INT,\n    previous_location VARCHAR(100),\n    new_location VARCHAR(100),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (tracking_id) REFERENCES tracking(tracking_id)\n);\n\n### STATEMENT\n\nINSERT INTO location_history (tracking_id, previous_location, new_location, timestamp) VALUES (3, 'Factory C', 'Warehouse C', '2022-10-15 11:00:00') ON CONFLICT (tracking_id) DO UPDATE SET previous_location = 'Updated Factory C', new_location = 'Updated Warehouse C', timestamp = '2022-10-15 12:30:00';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (1, 'Product A', 'Location A', 'In Transit') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', product_location = 'Location A', tracking_status = 'In Transit';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (2, 'Product B', 'Location B', 'Delivered') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product B', product_location = 'Location B', tracking_status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (3, 'Product C', 'Location C', 'In Warehouse') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product C', product_location = 'Location C', tracking_status = 'In Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (4, 'Product D', 'Location D', 'Out for Delivery') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product D', product_location = 'Location D', tracking_status = 'Out for Delivery';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (5, 'Product E', 'Location E', 'Pending') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product E', product_location = 'Location E', tracking_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (6, 'Product F', 'Location F', 'Delayed') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product F', product_location = 'Location F', tracking_status = 'Delayed';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (7, 'Product G', 'Location G', 'In Transit') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product G', product_location = 'Location G', tracking_status = 'In Transit';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (8, 'Product H', 'Location H', 'Delivered') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product H', product_location = 'Location H', tracking_status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (9, 'Product I', 'Location I', 'In Warehouse') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product I', product_location = 'Location I', tracking_status = 'In Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (10, 'Product J', 'Location J', 'Out for Delivery') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product J', product_location = 'Location J', tracking_status = 'Out for Delivery';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (11, 'Product K', 'Location K', 'Pending') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product K', product_location = 'Location K', tracking_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (12, 'Product L', 'Location L', 'Delayed') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product L', product_location = 'Location L', tracking_status = 'Delayed';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (13, 'Product M', 'Location M', 'In Transit') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product M', product_location = 'Location M', tracking_status = 'In Transit';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (14, 'Product N', 'Location N', 'Delivered') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product N', product_location = 'Location N', tracking_status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (15, 'Product O', 'Location O', 'In Warehouse') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product O', product_location = 'Location O', tracking_status = 'In Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (16, 'Product P', 'Location P', 'Out for Delivery') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product P', product_location = 'Location P', tracking_status = 'Out for Delivery';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (17, 'Product Q', 'Location Q', 'Pending') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product Q', product_location = 'Location Q', tracking_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (18, 'Product R', 'Location R', 'Delayed') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product R', product_location = 'Location R', tracking_status = 'Delayed';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (19, 'Product S', 'Location S', 'In Transit') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product S', product_location = 'Location S', tracking_status = 'In Transit';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (20, 'Product T', 'Location T', 'Delivered') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product T', product_location = 'Location T', tracking_status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (1, 'Product A', 'Location 1', 'Shipped') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product A', product_location = 'Updated Location 1', tracking_status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse_inventory (item_id, product_id, warehouse_id, item_count) VALUES (1001, 1, 1, 50) ON CONFLICT (item_id) DO UPDATE SET item_count = 60;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO supply_chain_log (log_id, timestamp, event_description, event_location) VALUES (5001, '2021-08-20 10:00:00', 'Product received at warehouse', 'Warehouse ABC') ON CONFLICT (log_id) DO UPDATE SET timestamp = '2021-08-20 10:30:00';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (2, 'Product B', 'Location 2', 'In Transit') ON CONFLICT (product_id) DO UPDATE SET tracking_status = 'Shipped';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse_inventory (item_id, product_id, warehouse_id, item_count) VALUES (1002, 2, 1, 30) ON CONFLICT (item_id) DO UPDATE SET item_count = item_count + 10;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO supply_chain_log (log_id, timestamp, event_description, event_location) VALUES (5002, '2021-08-21 09:00:00', 'Product shipped from warehouse', 'Warehouse XYZ') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (3, 'Product C', 'Location 3', 'Pending') ON CONFLICT (product_id) DO UPDATE SET tracking_status = 'In Transit';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse_inventory (item_id, product_id, warehouse_id, item_count) VALUES (1003, 3, 2, 20) ON CONFLICT (item_id) DO UPDATE SET item_count = 25;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO supply_chain_log (log_id, timestamp, event_description, event_location) VALUES (5003, '2021-08-22 08:00:00', 'Product arrived at distribution center', 'Center 123') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (4, 'Product D', 'Location 4', 'Pending') ON CONFLICT (product_id) DO UPDATE SET tracking_status = 'Shipped';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse_inventory (item_id, product_id, warehouse_id, item_count) VALUES (1004, 4, 2, 40) ON CONFLICT (item_id) DO UPDATE SET item_count = item_count - 10;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO supply_chain_log (log_id, timestamp, event_description, event_location) VALUES (5004, '2021-08-23 11:00:00', 'Product delivered to customer', 'Customer Home') ON CONFLICT (log_id) DO UPDATE SET event_description = 'Product delivered successfully';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (5, 'Product E', 'Location 5', 'Shipped') ON CONFLICT (product_id) DO UPDATE SET tracking_status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse_inventory (item_id, product_id, warehouse_id, item_count) VALUES (1005, 5, 3, 15) ON CONFLICT (item_id) DO UPDATE SET item_count = item_count + 5;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO supply_chain_log (log_id, timestamp, event_description, event_location) VALUES (5005, '2021-08-24 12:00:00', 'Product shipped for delivery', 'Delivery Hub') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (6, 'Product F', 'Location 6', 'In Transit') ON CONFLICT (product_id) DO UPDATE SET tracking_status = 'Shipped';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse_inventory (item_id, product_id, warehouse_id, item_count) VALUES (1006, 6, 3, 25) ON CONFLICT (item_id) DO UPDATE SET item_count = item_count - 5;",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO supply_chain_log (log_id, timestamp, event_description, event_location) VALUES (5006, '2021-08-25 14:00:00', 'Product out for delivery', 'Delivery Route 1') ON CONFLICT (log_id) DO UPDATE SET event_description = 'Product out for quick delivery';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO product_tracking (product_id, product_name, product_location, tracking_status) VALUES (7, 'Product G', 'Location 7', 'Pending') ON CONFLICT (product_id) DO UPDATE SET tracking_status = 'In Transit';",
  "### TABLEDATA\n\nCREATE TABLE product_tracking (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_location VARCHAR(255),\n    tracking_status VARCHAR(50) \n);\n\nCREATE TABLE warehouse_inventory (\n    item_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    item_count INT\n);\n\nCREATE TABLE supply_chain_log (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMPTZ,\n    event_description TEXT,\n    event_location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse_inventory (item_id, product_id, warehouse_id, item_count) VALUES (1007, 7, 4, 10) ON CONFLICT (item_id) DO UPDATE SET item_count = 15;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (1, 'Product 1', 'RFID-001', 'Category 1') ON CONFLICT (id) DO UPDATE SET name = 'Product 1 updated', rfid_tag = 'RFID-001 updated', category = 'Category 1 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (2, 'Product 2', 'RFID-002', 'Category 2') ON CONFLICT (id) DO UPDATE SET name = 'Product 2 updated', rfid_tag = 'RFID-002 updated', category = 'Category 2 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (3, 'Product 3', 'RFID-003', 'Category 1') ON CONFLICT (id) DO UPDATE SET name = 'Product 3 updated', rfid_tag = 'RFID-003 updated', category = 'Category 1 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (4, 'Product 4', 'RFID-004', 'Category 2') ON CONFLICT (id) DO UPDATE SET name = 'Product 4 updated', rfid_tag = 'RFID-004 updated', category = 'Category 2 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (5, 'Product 5', 'RFID-005', 'Category 1') ON CONFLICT (id) DO UPDATE SET name = 'Product 5 updated', rfid_tag = 'RFID-005 updated', category = 'Category 1 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (6, 'Product 6', 'RFID-006', 'Category 2') ON CONFLICT (id) DO UPDATE SET name = 'Product 6 updated', rfid_tag = 'RFID-006 updated', category = 'Category 2 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (7, 'Product 7', 'RFID-007', 'Category 1') ON CONFLICT (id) DO UPDATE SET name = 'Product 7 updated', rfid_tag = 'RFID-007 updated', category = 'Category 1 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (8, 'Product 8', 'RFID-008', 'Category 2') ON CONFLICT (id) DO UPDATE SET name = 'Product 8 updated', rfid_tag = 'RFID-008 updated', category = 'Category 2 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (9, 'Product 9', 'RFID-009', 'Category 1') ON CONFLICT (id) DO UPDATE SET name = 'Product 9 updated', rfid_tag = 'RFID-009 updated', category = 'Category 1 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (10, 'Product 10', 'RFID-010', 'Category 2') ON CONFLICT (id) DO UPDATE SET name = 'Product 10 updated', rfid_tag = 'RFID-010 updated', category = 'Category 2 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (11, 'Product 11', 'RFID-011', 'Category 1') ON CONFLICT (id) DO UPDATE SET name = 'Product 11 updated', rfid_tag = 'RFID-011 updated', category = 'Category 1 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (12, 'Product 12', 'RFID-012', 'Category 2') ON CONFLICT (id) DO UPDATE SET name = 'Product 12 updated', rfid_tag = 'RFID-012 updated', category = 'Category 2 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (13, 'Product 13', 'RFID-013', 'Category 1') ON CONFLICT (id) DO UPDATE SET name = 'Product 13 updated', rfid_tag = 'RFID-013 updated', category = 'Category 1 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (14, 'Product 14', 'RFID-014', 'Category 2') ON CONFLICT (id) DO UPDATE SET name = 'Product 14 updated', rfid_tag = 'RFID-014 updated', category = 'Category 2 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (15, 'Product 15', 'RFID-015', 'Category 1') ON CONFLICT (id) DO UPDATE SET name = 'Product 15 updated', rfid_tag = 'RFID-015 updated', category = 'Category 1 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (16, 'Product 16', 'RFID-016', 'Category 2') ON CONFLICT (id) DO UPDATE SET name = 'Product 16 updated', rfid_tag = 'RFID-016 updated', category = 'Category 2 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (17, 'Product 17', 'RFID-017', 'Category 1') ON CONFLICT (id) DO UPDATE SET name = 'Product 17 updated', rfid_tag = 'RFID-017 updated', category = 'Category 1 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (18, 'Product 18', 'RFID-018', 'Category 2') ON CONFLICT (id) DO UPDATE SET name = 'Product 18 updated', rfid_tag = 'RFID-018 updated', category = 'Category 2 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (19, 'Product 19', 'RFID-019', 'Category 1') ON CONFLICT (id) DO UPDATE SET name = 'Product 19 updated', rfid_tag = 'RFID-019 updated', category = 'Category 1 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (20, 'Product 20', 'RFID-020', 'Category 2') ON CONFLICT (id) DO UPDATE SET name = 'Product 20 updated', rfid_tag = 'RFID-020 updated', category = 'Category 2 updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (1, 'Product A', 'RFID-1', 'Electronics') ON CONFLICT (id) DO UPDATE SET name=excluded.name, rfid_tag=excluded.rfid_tag, category=excluded.category;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (2, 'Product B', 'RFID-2', 'Clothing') ON CONFLICT (id) DO UPDATE SET name=excluded.name, rfid_tag=excluded.rfid_tag, category=excluded.category;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (3, 'Product C', 'RFID-3', 'Furniture') ON CONFLICT (id) DO UPDATE SET name=excluded.name, rfid_tag=excluded.rfid_tag, category=excluded.category;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, rfid_tag, category) VALUES (4, 'Product D', 'RFID-4', 'Home Decor') ON CONFLICT (id) DO UPDATE SET name=excluded.name, rfid_tag=excluded.rfid_tag, category=excluded.category;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO locations (id, name, address, zip_code) VALUES (1, 'Warehouse A', '123 Main St', '12345') ON CONFLICT (id) DO UPDATE SET name=excluded.name, address=excluded.address, zip_code=excluded.zip_code;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO locations (id, name, address, zip_code) VALUES (2, 'Store B', '456 Elm St', '56789') ON CONFLICT (id) DO UPDATE SET name=excluded.name, address=excluded.address, zip_code=excluded.zip_code;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO locations (id, name, address, zip_code) VALUES (3, 'Office C', '789 Oak St', '98765') ON CONFLICT (id) DO UPDATE SET name=excluded.name, address=excluded.address, zip_code=excluded.zip_code;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO locations (id, name, address, zip_code) VALUES (4, 'Distribution Center D', '321 Pine St', '54321') ON CONFLICT (id) DO UPDATE SET name=excluded.name, address=excluded.address, zip_code=excluded.zip_code;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO tracking_history (id, product_id, location_id, timestamp) VALUES (1, 1, 1, '2022-01-01 08:00:00') ON CONFLICT (id) DO UPDATE SET product_id=excluded.product_id, location_id=excluded.location_id, timestamp=excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO tracking_history (id, product_id, location_id, timestamp) VALUES (2, 2, 2, '2022-01-02 10:00:00') ON CONFLICT (id) DO UPDATE SET product_id=excluded.product_id, location_id=excluded.location_id, timestamp=excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO tracking_history (id, product_id, location_id, timestamp) VALUES (3, 3, 3, '2022-01-03 12:00:00') ON CONFLICT (id) DO UPDATE SET product_id=excluded.product_id, location_id=excluded.location_id, timestamp=excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO tracking_history (id, product_id, location_id, timestamp) VALUES (4, 4, 4, '2022-01-04 14:00:00') ON CONFLICT (id) DO UPDATE SET product_id=excluded.product_id, location_id=excluded.location_id, timestamp=excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO alerts (id, product_id, message, timestamp) VALUES (1, 1, 'Low Stock Alert', '2022-01-01 08:00:00') ON CONFLICT (id) DO UPDATE SET product_id=excluded.product_id, message=excluded.message, timestamp=excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO alerts (id, product_id, message, timestamp) VALUES (2, 2, 'Out of Stock Alert', '2022-01-02 10:00:00') ON CONFLICT (id) DO UPDATE SET product_id=excluded.product_id, message=excluded.message, timestamp=excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO alerts (id, product_id, message, timestamp) VALUES (3, 3, 'Restock Alert', '2022-01-03 12:00:00') ON CONFLICT (id) DO UPDATE SET product_id=excluded.product_id, message=excluded.message, timestamp=excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    rfid_tag TEXT,\n    category TEXT\n);\n\nCREATE TABLE locations (\n    id INT PRIMARY KEY,\n    name TEXT,\n    address TEXT,\n    zip_code TEXT\n);\n\nCREATE TABLE tracking_history (\n    id INT PRIMARY KEY,\n    product_id INT,\n    location_id INT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id),\n    FOREIGN KEY (location_id) REFERENCES locations(id)\n);\n\nCREATE TABLE alerts (\n    id INT PRIMARY KEY,\n    product_id INT,\n    message TEXT,\n    timestamp TIMESTAMP,\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n### STATEMENT\n\nINSERT INTO alerts (id, product_id, message, timestamp) VALUES (4, 4, 'Price Change Alert', '2022-01-04 14:00:00') ON CONFLICT (id) DO UPDATE SET product_id=excluded.product_id, message=excluded.message, timestamp=excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (1, 'Product A', 'Description A', 'RFID001') ON DUPLICATE KEY UPDATE product_name = 'Product A updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (2, 'Product B', 'Description B', 'RFID002') ON DUPLICATE KEY UPDATE product_name = 'Product B updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (3, 'Product C', 'Description C', 'RFID003') ON DUPLICATE KEY UPDATE product_name = 'Product C updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (4, 'Product D', 'Description D', 'RFID004') ON DUPLICATE KEY UPDATE product_name = 'Product D updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (5, 'Product E', 'Description E', 'RFID005') ON DUPLICATE KEY UPDATE product_name = 'Product E updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (6, 'Product F', 'Description F', 'RFID006') ON DUPLICATE KEY UPDATE product_name = 'Product F updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (7, 'Product G', 'Description G', 'RFID007') ON DUPLICATE KEY UPDATE product_name = 'Product G updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (8, 'Product H', 'Description H', 'RFID008') ON DUPLICATE KEY UPDATE product_name = 'Product H updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (9, 'Product I', 'Description I', 'RFID009') ON DUPLICATE KEY UPDATE product_name = 'Product I updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (10, 'Product J', 'Description J', 'RFID010') ON DUPLICATE KEY UPDATE product_name = 'Product J updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (11, 'Product K', 'Description K', 'RFID011') ON DUPLICATE KEY UPDATE product_name = 'Product K updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (12, 'Product L', 'Description L', 'RFID012') ON DUPLICATE KEY UPDATE product_name = 'Product L updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (13, 'Product M', 'Description M', 'RFID013') ON DUPLICATE KEY UPDATE product_name = 'Product M updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (14, 'Product N', 'Description N', 'RFID014') ON DUPLICATE KEY UPDATE product_name = 'Product N updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (15, 'Product O', 'Description O', 'RFID015') ON DUPLICATE KEY UPDATE product_name = 'Product O updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (16, 'Product P', 'Description P', 'RFID016') ON DUPLICATE KEY UPDATE product_name = 'Product P updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (17, 'Product Q', 'Description Q', 'RFID017') ON DUPLICATE KEY UPDATE product_name = 'Product Q updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (18, 'Product R', 'Description R', 'RFID018') ON DUPLICATE KEY UPDATE product_name = 'Product R updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (19, 'Product S', 'Description S', 'RFID019') ON DUPLICATE KEY UPDATE product_name = 'Product S updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (20, 'Product T', 'Description T', 'RFID020') ON DUPLICATE KEY UPDATE product_name = 'Product T updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (1, 'Product 1', 'Description of Product 1', 'RFID1') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product 1';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_description, rfid_tag) VALUES (2, 'Product 2', 'Description of Product 2', 'RFID2') ON CONFLICT (rfid_tag) DO UPDATE SET product_description = 'Updated Description of Product 2';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO locations (location_id, location_name, location_address, capacity) VALUES (1, 'Location 1', 'Address of Location 1', 100) ON CONFLICT (location_id) DO UPDATE SET location_name = 'Updated Location 1';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO locations (location_id, location_name, location_address, capacity) VALUES (2, 'Location 2', 'Address of Location 2', 150) ON CONFLICT (location_name) DO UPDATE SET capacity = 200;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO tracking_logs (log_id, rfid_tag, location_id, timestamp) VALUES (1, 'RFID1', 1, '2022-01-01 10:00:00') ON CONFLICT (log_id) DO UPDATE SET location_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO tracking_logs (log_id, rfid_tag, location_id, timestamp) VALUES (2, 'RFID2', 2, '2022-01-02 11:00:00') ON CONFLICT (rfid_tag) DO UPDATE SET timestamp = '2022-01-02 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_address, contact_person) VALUES (1, 'Supplier 1', 'Address of Supplier 1', 'Contact Person 1') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Updated Supplier 1';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_address, contact_person) VALUES (2, 'Supplier 2', 'Address of Supplier 2', 'Contact Person 2') ON CONFLICT (contact_person) DO UPDATE SET supplier_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO shipments (shipment_id, supplier_id, product_id, quantity, shipped_date) VALUES (1, 1, 1, 10, '2022-01-01') ON CONFLICT (shipment_id) DO UPDATE SET supplier_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_description TEXT,\n    rfid_tag VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    capacity INT\n);\n\nCREATE TABLE tracking_logs (\n    log_id INT PRIMARY KEY,\n    rfid_tag VARCHAR(50),\n    location_id INT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_address TEXT,\n    contact_person VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    supplier_id INT,\n    product_id INT,\n    quantity INT,\n    shipped_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO shipments (shipment_id, supplier_id, product_id, quantity, shipped_date) VALUES (2, 2, 2, 20, '2022-01-02') ON CONFLICT (supplier_id) DO UPDATE SET product_id = 3;"
]