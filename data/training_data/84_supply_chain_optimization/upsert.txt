<t>CREATE TABLE shipment (shipment_id SERIAL PRIMARY KEY, supplier_id INT, product_id INT, quantity INT, shipment_date DATE)</t><stat>INSERT INTO shipment (supplier_id, product_id, quantity, shipment_date) VALUES (1, 101, 20, '2022-01-15') ON CONFLICT (shipment_id) DO UPDATE SET supplier_id = EXCLUDED.supplier_id, product_id = EXCLUDED.product_id, quantity = EXCLUDED.quantity, shipment_date = EXCLUDED.shipment_date;</stat><divider><t>CREATE TABLE shipment (shipment_id SERIAL PRIMARY KEY, supplier_id INT, product_id INT, quantity INT, shipment_date DATE)</t><stat>insert into shipment (supplier_id, product_id, quantity, shipment_date) values (1, 101, 20, '2022-01-15') on conflict (shipment_id) do update set supplier_id = excluded.supplier_id, product_id = excluded.product_id, quantity = excluded.quantity, shipment_date = excluded.shipment_date;</stat><divider><t>CREATE TABLE shipment (shipment_id SERIAL PRIMARY KEY, supplier_id INT, product_id INT, quantity INT, shipment_date DATE)</t><stat>INSERT INTO shipment (supplier_id, product_id, quantity, shipment_date) VALUES (2, 102, 30, '2022-01-20') ON CONFLICT (shipment_id) DO UPDATE SET supplier_id = EXCLUDED.supplier_id, product_id = EXCLUDED.product_id, quantity = EXCLUDED.quantity, shipment_date = EXCLUDED.shipment_date;</stat><divider><t>CREATE TABLE shipment (shipment_id SERIAL PRIMARY KEY, supplier_id INT, product_id INT, quantity INT, shipment_date DATE)</t><stat>insert into shipment (supplier_id, product_id, quantity, shipment_date) values (2, 102, 30, '2022-01-20') on conflict (shipment_id) do update set supplier_id = excluded.supplier_id, product_id = excluded.product_id, quantity = excluded.quantity, shipment_date = excluded.shipment_date;</stat><divider><t>CREATE TABLE shipment (shipment_id SERIAL PRIMARY KEY, supplier_id INT, product_id INT, quantity INT, shipment_date DATE)</t><stat>INSERT INTO shipment (supplier_id, product_id, quantity, shipment_date) VALUES (3, 103, 25, '2022-01-25') ON CONFLICT (shipment_id) DO UPDATE SET supplier_id = EXCLUDED.supplier_id, product_id = EXCLUDED.product_id, quantity = EXCLUDED.quantity, shipment_date = EXCLUDED.shipment_date;</stat><divider><t>CREATE TABLE shipment (shipment_id SERIAL PRIMARY KEY, supplier_id INT, product_id INT, quantity INT, shipment_date DATE)</t><stat>insert into shipment (supplier_id, product_id, quantity, shipment_date) values (3, 103, 25, '2022-01-25') on conflict (shipment_id) do update set supplier_id = excluded.supplier_id, product_id = excluded.product_id, quantity = excluded.quantity, shipment_date = excluded.shipment_date;</stat><divider><t>CREATE TABLE warehouses (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    location VARCHAR(100)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    price DECIMAL(10, 2),
    quantity INT,
    warehouse_id INT REFERENCES warehouses(id)
);</t><stat>UPSERT INTO warehouses (id, name, location) VALUES (1, 'Warehouse A', 'New York')</stat><divider><t>CREATE TABLE warehouses (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    location VARCHAR(100)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    price DECIMAL(10, 2),
    quantity INT,
    warehouse_id INT REFERENCES warehouses(id)
);</t><stat>upsert into warehouses (id, name, location) values (1, 'warehouse a', 'new york')</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    price DECIMAL(10, 2),
    quantity INT,
    warehouse_id INT REFERENCES warehouses(id)
);

CREATE TABLE warehouses (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    location VARCHAR(100)
);</t><stat>UPSERT INTO warehouses (id, name, location) VALUES (1, 'Warehouse A', 'New York')</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    price DECIMAL(10, 2),
    quantity INT,
    warehouse_id INT REFERENCES warehouses(id)
);

CREATE TABLE warehouses (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    location VARCHAR(100)
);</t><stat>upsert into warehouses (id, name, location) values (1, 'warehouse a', 'new york')</stat><divider><t>CREATE TABLE warehouses (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    location VARCHAR(100)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    price DECIMAL(10, 2),
    quantity INT,
    warehouse_id INT REFERENCES warehouses(id)
);</t><stat>UPSERT INTO products (id, name, price, quantity, warehouse_id) VALUES (1, 'Product A', 10.99, 100, 1)</stat><divider><t>CREATE TABLE warehouses (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    location VARCHAR(100)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    price DECIMAL(10, 2),
    quantity INT,
    warehouse_id INT REFERENCES warehouses(id)
);</t><stat>upsert into products (id, name, price, quantity, warehouse_id) values (1, 'product a', 10.99, 100, 1)</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    price DECIMAL(10, 2),
    quantity INT,
    warehouse_id INT REFERENCES warehouses(id)
);

CREATE TABLE warehouses (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    location VARCHAR(100)
);</t><stat>UPSERT INTO products (id, name, price, quantity, warehouse_id) VALUES (1, 'Product A', 10.99, 100, 1)</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    price DECIMAL(10, 2),
    quantity INT,
    warehouse_id INT REFERENCES warehouses(id)
);

CREATE TABLE warehouses (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    location VARCHAR(100)
);</t><stat>upsert into products (id, name, price, quantity, warehouse_id) values (1, 'product a', 10.99, 100, 1)</stat><divider><t>CREATE TABLE warehouses (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    location VARCHAR(100)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    price DECIMAL(10, 2),
    quantity INT,
    warehouse_id INT REFERENCES warehouses(id)
);</t><stat>UPSERT INTO products (id, name, price, quantity, warehouse_id) VALUES (2, 'Product B', 15.50, 50, 1)</stat><divider><t>CREATE TABLE warehouses (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    location VARCHAR(100)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    price DECIMAL(10, 2),
    quantity INT,
    warehouse_id INT REFERENCES warehouses(id)
);</t><stat>upsert into products (id, name, price, quantity, warehouse_id) values (2, 'product b', 15.50, 50, 1)</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    price DECIMAL(10, 2),
    quantity INT,
    warehouse_id INT REFERENCES warehouses(id)
);

CREATE TABLE warehouses (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    location VARCHAR(100)
);</t><stat>UPSERT INTO products (id, name, price, quantity, warehouse_id) VALUES (2, 'Product B', 15.50, 50, 1)</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    price DECIMAL(10, 2),
    quantity INT,
    warehouse_id INT REFERENCES warehouses(id)
);

CREATE TABLE warehouses (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    location VARCHAR(100)
);</t><stat>upsert into products (id, name, price, quantity, warehouse_id) values (2, 'product b', 15.50, 50, 1)</stat><divider><t>CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))</t><stat>INSERT INTO products (name, price) VALUES ('Product1', 20.50) ON CONFLICT (name) DO UPDATE SET price = EXCLUDED.price</stat><divider><t>CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))</t><stat>insert into products (name, price) values ('product1', 20.50) on conflict (name) do update set price = excluded.price</stat><divider><t>CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)</t><stat>INSERT INTO products (name, price) VALUES ('Product1', 20.50) ON CONFLICT (name) DO UPDATE SET price = EXCLUDED.price</stat><divider><t>CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)</t><stat>insert into products (name, price) values ('product1', 20.50) on conflict (name) do update set price = excluded.price</stat><divider><t>CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))</t><stat>INSERT INTO products (name, price) VALUES ('Product1', 20.50) ON CONFLICT (name) DO UPDATE SET price = EXCLUDED.price</stat><divider><t>CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))</t><stat>insert into products (name, price) values ('product1', 20.50) on conflict (name) do update set price = excluded.price</stat><divider><t>CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))</t><stat>INSERT INTO products (name, price) VALUES ('Product1', 20.50) ON CONFLICT (name) DO UPDATE SET price = EXCLUDED.price</stat><divider><t>CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))</t><stat>insert into products (name, price) values ('product1', 20.50) on conflict (name) do update set price = excluded.price</stat><divider><t>CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)</t><stat>INSERT INTO products (name, price) VALUES ('Product1', 20.50) ON CONFLICT (name) DO UPDATE SET price = EXCLUDED.price</stat><divider><t>CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)</t><stat>insert into products (name, price) values ('product1', 20.50) on conflict (name) do update set price = excluded.price</stat><divider><t>CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))</t><stat>INSERT INTO products (name, price) VALUES ('Product1', 20.50) ON CONFLICT (name) DO UPDATE SET price = EXCLUDED.price</stat><divider><t>CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))</t><stat>insert into products (name, price) values ('product1', 20.50) on conflict (name) do update set price = excluded.price</stat><divider><t>CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))</t><stat>INSERT INTO orders (product_id, quantity, order_date) VALUES (1, 10, '2022-01-01') ON CONFLICT (product_id, order_date) DO UPDATE SET quantity = orders.quantity + EXCLUDED.quantity</stat><divider><t>CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))</t><stat>insert into orders (product_id, quantity, order_date) values (1, 10, '2022-01-01') on conflict (product_id, order_date) do update set quantity = orders.quantity + excluded.quantity</stat><divider><t>CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)</t><stat>INSERT INTO orders (product_id, quantity, order_date) VALUES (1, 10, '2022-01-01') ON CONFLICT (product_id, order_date) DO UPDATE SET quantity = orders.quantity + EXCLUDED.quantity</stat><divider><t>CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)</t><stat>insert into orders (product_id, quantity, order_date) values (1, 10, '2022-01-01') on conflict (product_id, order_date) do update set quantity = orders.quantity + excluded.quantity</stat><divider><t>CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))</t><stat>INSERT INTO orders (product_id, quantity, order_date) VALUES (1, 10, '2022-01-01') ON CONFLICT (product_id, order_date) DO UPDATE SET quantity = orders.quantity + EXCLUDED.quantity</stat><divider><t>CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))</t><stat>insert into orders (product_id, quantity, order_date) values (1, 10, '2022-01-01') on conflict (product_id, order_date) do update set quantity = orders.quantity + excluded.quantity</stat><divider><t>CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))</t><stat>INSERT INTO orders (product_id, quantity, order_date) VALUES (1, 10, '2022-01-01') ON CONFLICT (product_id, order_date) DO UPDATE SET quantity = orders.quantity + EXCLUDED.quantity</stat><divider><t>CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))</t><stat>insert into orders (product_id, quantity, order_date) values (1, 10, '2022-01-01') on conflict (product_id, order_date) do update set quantity = orders.quantity + excluded.quantity</stat><divider><t>CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)</t><stat>INSERT INTO orders (product_id, quantity, order_date) VALUES (1, 10, '2022-01-01') ON CONFLICT (product_id, order_date) DO UPDATE SET quantity = orders.quantity + EXCLUDED.quantity</stat><divider><t>CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)</t><stat>insert into orders (product_id, quantity, order_date) values (1, 10, '2022-01-01') on conflict (product_id, order_date) do update set quantity = orders.quantity + excluded.quantity</stat><divider><t>CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))</t><stat>INSERT INTO orders (product_id, quantity, order_date) VALUES (1, 10, '2022-01-01') ON CONFLICT (product_id, order_date) DO UPDATE SET quantity = orders.quantity + EXCLUDED.quantity</stat><divider><t>CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))</t><stat>insert into orders (product_id, quantity, order_date) values (1, 10, '2022-01-01') on conflict (product_id, order_date) do update set quantity = orders.quantity + excluded.quantity</stat><divider><t>CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))</t><stat>INSERT INTO suppliers (name, address, phone_number) VALUES ('Supplier1', '123 Main St', '555-123-4567') ON CONFLICT (name) DO UPDATE SET address = EXCLUDED.address, phone_number = EXCLUDED.phone_number</stat><divider><t>CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))</t><stat>insert into suppliers (name, address, phone_number) values ('supplier1', '123 main st', '555-123-4567') on conflict (name) do update set address = excluded.address, phone_number = excluded.phone_number</stat><divider><t>CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)</t><stat>INSERT INTO suppliers (name, address, phone_number) VALUES ('Supplier1', '123 Main St', '555-123-4567') ON CONFLICT (name) DO UPDATE SET address = EXCLUDED.address, phone_number = EXCLUDED.phone_number</stat><divider><t>CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)</t><stat>insert into suppliers (name, address, phone_number) values ('supplier1', '123 main st', '555-123-4567') on conflict (name) do update set address = excluded.address, phone_number = excluded.phone_number</stat><divider><t>CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))</t><stat>INSERT INTO suppliers (name, address, phone_number) VALUES ('Supplier1', '123 Main St', '555-123-4567') ON CONFLICT (name) DO UPDATE SET address = EXCLUDED.address, phone_number = EXCLUDED.phone_number</stat><divider><t>CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))</t><stat>insert into suppliers (name, address, phone_number) values ('supplier1', '123 main st', '555-123-4567') on conflict (name) do update set address = excluded.address, phone_number = excluded.phone_number</stat><divider><t>CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))</t><stat>INSERT INTO suppliers (name, address, phone_number) VALUES ('Supplier1', '123 Main St', '555-123-4567') ON CONFLICT (name) DO UPDATE SET address = EXCLUDED.address, phone_number = EXCLUDED.phone_number</stat><divider><t>CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))</t><stat>insert into suppliers (name, address, phone_number) values ('supplier1', '123 main st', '555-123-4567') on conflict (name) do update set address = excluded.address, phone_number = excluded.phone_number</stat><divider><t>CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)</t><stat>INSERT INTO suppliers (name, address, phone_number) VALUES ('Supplier1', '123 Main St', '555-123-4567') ON CONFLICT (name) DO UPDATE SET address = EXCLUDED.address, phone_number = EXCLUDED.phone_number</stat><divider><t>CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)</t><stat>insert into suppliers (name, address, phone_number) values ('supplier1', '123 main st', '555-123-4567') on conflict (name) do update set address = excluded.address, phone_number = excluded.phone_number</stat><divider><t>CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))</t><stat>INSERT INTO suppliers (name, address, phone_number) VALUES ('Supplier1', '123 Main St', '555-123-4567') ON CONFLICT (name) DO UPDATE SET address = EXCLUDED.address, phone_number = EXCLUDED.phone_number</stat><divider><t>CREATE TABLE IF NOT EXISTS suppliers (supplier_id SERIAL PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), phone_number VARCHAR(15))

CREATE TABLE IF NOT EXISTS orders (order_id SERIAL PRIMARY KEY, product_id INT REFERENCES products(id), quantity INT, order_date TIMESTAMP)

CREATE TABLE IF NOT EXISTS products (id SERIAL PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2))</t><stat>insert into suppliers (name, address, phone_number) values ('supplier1', '123 main st', '555-123-4567') on conflict (name) do update set address = excluded.address, phone_number = excluded.phone_number</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO products (id, name, price, stock_quantity) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE name = 'Product A', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into products (id, name, price, stock_quantity) values (1, 'product a', 50.00, 100) on duplicate key update name = 'product a', price = 50.00, stock_quantity = 100;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'Location A') ON DUPLICATE KEY UPDATE name = 'Supplier X', location = 'Location A';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into suppliers (id, name, location) values (1, 'supplier x', 'location a') on duplicate key update name = 'supplier x', location = 'location a';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>UPSERT INTO orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE shipments (shipment_id INT PRIMARY KEY, order_id INT, supplier_id INT, shipment_date TIMESTAMP);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date TIMESTAMP);

CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), stock_quantity INT);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 10, '2022-01-01 12:00:00') on duplicate key update product_id = 1, supplier_id = 1, quantity = 10, order_date = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Products (product_id, product_name, quantity, price) VALUES (1, 'Laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into products (product_id, product_name, quantity, price) values (1, 'laptop', 10, 800)</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Suppliers (supplier_id, supplier_name, location) VALUES (1, 'SupplierA', 'New York')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into suppliers (supplier_id, supplier_name, location) values (1, 'suppliera', 'new york')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>UPSERT INTO Orders (order_id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 2, '2022-10-15')</stat><divider><t>CREATE TABLE IF NOT EXISTS Shipments (shipment_id INT PRIMARY KEY, order_id INT, customer_id INT, shipment_date DATE, delivery_status STRING);

CREATE TABLE IF NOT EXISTS Customers (customer_id INT PRIMARY KEY, customer_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Orders (order_id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, order_date DATE);

CREATE TABLE IF NOT EXISTS Suppliers (supplier_id INT PRIMARY KEY, supplier_name STRING, location STRING);

CREATE TABLE IF NOT EXISTS Products (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL);</t><stat>upsert into orders (order_id, product_id, supplier_id, quantity, order_date) values (1, 1, 1, 2, '2022-10-15')</stat>