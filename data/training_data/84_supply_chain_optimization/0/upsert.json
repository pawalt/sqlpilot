[
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174001', 'Product A', '7c0849d3-d116-4ac5-bf97-0a0f887ae6e6', 100, 200)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174002', 'Product B', '7c0849d3-d116-4ac5-bf97-0a0f887ae6e6', 150, 250)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174003', 'Product C', 'f321ca80-8c45-4997-94ee-7e3c510d6b65', 75, 150)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174004', 'Product D', 'f321ca80-8c45-4997-94ee-7e3c510d6b65', 50, 100)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174005', 'Product E', 'b88f752c-3e7b-4f40-9645-17d05fc8a679', 200, 300)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174006', 'Product F', 'b88f752c-3e7b-4f40-9645-17d05fc8a679', 125, 225)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174007', 'Product G', '4a93d7df-858d-4fa3-819b-689a476d9789', 80, 160)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174008', 'Product H', '4a93d7df-858d-4fa3-819b-689a476d9789', 90, 180)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174009', 'Product I', 'f86a129d-ebb8-4f26-890a-3c0556a587d1', 110, 220)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174010', 'Product J', 'f86a129d-ebb8-4f26-890a-3c0556a587d1', 70, 140)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174011', 'Product K', '1a4d4d9a-7bdf-4c8e-93c6-9507a066ee82', 85, 170)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174012', 'Product L', '1a4d4d9a-7bdf-4c8e-93c6-9507a066ee82', 95, 190)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174013', 'Product M', 'ae1fd0d1-1316-4a2b-927d-4d6ea63c63ed', 120, 240)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174014', 'Product N', 'ae1fd0d1-1316-4a2b-927d-4d6ea63c63ed', 55, 110)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174015', 'Product O', 'ee0749ee-a154-402a-994c-342e05f8f3a6', 130, 260)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174016', 'Product P', 'ee0749ee-a154-402a-994c-342e05f8f3a6', 65, 130)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174017', 'Product Q', '77ac7563-3559-4df7-bb1d-2bb61eb7e6bd', 75, 150)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174018', 'Product R', '77ac7563-3559-4df7-bb1d-2bb61eb7e6bd', 100, 200)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('123e4567-e89b-12d3-a456-426614174019', 'Product S', 'be27c426-1ac3-4ab1-ba25-646b0523e6d3', 150, 300)",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('11111111-1111-1111-1111-111111111111', 'Product A', '22222222-2222-2222-2222-222222222222', 100, 200) ON CONFLICT (product_id) DO UPDATE SET current_stock = 120, max_capacity = 250;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('22222222-2222-2222-2222-222222222222', 'Product B', '33333333-3333-3333-3333-333333333333', 150, 300) ON CONFLICT (product_id) DO UPDATE SET current_stock = 170, max_capacity = 320;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('33333333-3333-3333-3333-333333333333', 'Product C', '44444444-4444-4444-4444-444444444444', 200, 400) ON CONFLICT (product_id) DO UPDATE SET current_stock = 220, max_capacity = 420;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('44444444-4444-4444-4444-444444444444', 'Product D', '55555555-5555-5555-5555-555555555555', 250, 500) ON CONFLICT (product_id) DO UPDATE SET current_stock = 270, max_capacity = 520;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('55555555-5555-5555-5555-555555555555', 'Product E', '66666666-6666-6666-6666-666666666666', 300, 600) ON CONFLICT (product_id) DO UPDATE SET current_stock = 320, max_capacity = 620;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('66666666-6666-6666-6666-666666666666', 'Product F', '77777777-7777-7777-7777-777777777777', 350, 700) ON CONFLICT (product_id) DO UPDATE SET current_stock = 370, max_capacity = 720;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('77777777-7777-7777-7777-777777777777', 'Product G', '88888888-8888-8888-8888-888888888888', 400, 800) ON CONFLICT (product_id) DO UPDATE SET current_stock = 420, max_capacity = 820;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('88888888-8888-8888-8888-888888888888', 'Product H', '99999999-9999-8888-8888-888888888888', 450, 900) ON CONFLICT (product_id) DO UPDATE SET current_stock = 470, max_capacity = 920;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('99999999-9999-9999-9999-999999999999', 'Product I', '11111111-1111-1111-1111-111111111111', 500, 1000) ON CONFLICT (product_id) DO UPDATE SET current_stock = 520, max_capacity = 1020;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('10101010-1010-1010-1010-101010101010', 'Product J', '21212121-2121-2121-2121-212121212121', 550, 1100) ON CONFLICT (product_id) DO UPDATE SET current_stock = 570, max_capacity = 1120;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('12121212-1212-1212-1212-121212121212', 'Product K', '32323232-3232-3232-3232-323232323232', 600, 1200) ON CONFLICT (product_id) DO UPDATE SET current_stock = 620, max_capacity = 1220;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('13131313-1313-1313-1313-131313131313', 'Product L', '43434343-4343-4343-4343-434343434343', 650, 1300) ON CONFLICT (product_id) DO UPDATE SET current_stock = 670, max_capacity = 1320;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('14141414-1414-1414-1414-141414141414', 'Product M', '54545454-5454-5454-5454-545454545454', 700, 1400) ON CONFLICT (product_id) DO UPDATE SET current_stock = 720, max_capacity = 1420;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('15151515-1515-1515-1515-151515151515', 'Product N', '65656565-6565-6565-6565-656565656565', 750, 1500) ON CONFLICT (product_id) DO UPDATE SET current_stock = 770, max_capacity = 1520;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('16161616-1616-1616-1616-161616161616', 'Product O', '76767676-7676-7676-7676-767676767676', 800, 1600) ON CONFLICT (product_id) DO UPDATE SET current_stock = 820, max_capacity = 1620;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('17171717-1717-1717-1717-171717171717', 'Product P', '87878787-8787-8787-8787-878787878787', 850, 1700) ON CONFLICT (product_id) DO UPDATE SET current_stock = 870, max_capacity = 1720;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('18181818-1818-1818-1818-181818181818', 'Product Q', '98989898-9898-9898-9898-989898989898', 900, 1800) ON CONFLICT (product_id) DO UPDATE SET current_stock = 920, max_capacity = 1820;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('19191919-1919-1919-1919-191919191919', 'Product R', '01010101-0101-0101-0101-010101010101', 950, 1900) ON CONFLICT (product_id) DO UPDATE SET current_stock = 970, max_capacity = 1920;",
  "### TABLEDATA\n\nCREATE TABLE product_inventory (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id UUID,\n    current_stock INT,\n    max_capacity INT\n)\n\n### STATEMENT\n\nUPSERT INTO product_inventory (product_id, product_name, warehouse_id, current_stock, max_capacity) VALUES ('20202020-2020-2020-2020-202020202020', 'Product S', '12121212-1212-1212-1212-121212121212', 1000, 2000) ON CONFLICT (product_id) DO UPDATE SET current_stock = 1020, max_capacity = 2020;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (id, location, capacity) VALUES (1, 'Warehouse A', 100) ON CONFLICT (id) DO UPDATE SET location = 'Warehouse A', capacity = 100;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (id, location, capacity) VALUES (2, 'Warehouse B', 150) ON CONFLICT (id) DO UPDATE SET location = 'Warehouse B', capacity = 150;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (id, location, capacity) VALUES (3, 'Warehouse C', 200) ON CONFLICT (id) DO UPDATE SET location = 'Warehouse C', capacity = 200;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (id, location, capacity) VALUES (4, 'Warehouse D', 120) ON CONFLICT (id) DO UPDATE SET location = 'Warehouse D', capacity = 120;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (id, location, capacity) VALUES (5, 'Warehouse E', 180) ON CONFLICT (id) DO UPDATE SET location = 'Warehouse E', capacity = 180;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (id, location, capacity) VALUES (6, 'Warehouse F', 90) ON CONFLICT (id) DO UPDATE SET location = 'Warehouse F', capacity = 90;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (id, location, capacity) VALUES (7, 'Warehouse G', 140) ON CONFLICT (id) DO UPDATE SET location = 'Warehouse G', capacity = 140;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (id, location, capacity) VALUES (8, 'Warehouse H', 160) ON CONFLICT (id) DO UPDATE SET location = 'Warehouse H', capacity = 160;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (id, location, capacity) VALUES (9, 'Warehouse I', 110) ON CONFLICT (id) DO UPDATE SET location = 'Warehouse I', capacity = 110;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (id, location, capacity) VALUES (10, 'Warehouse J', 130) ON CONFLICT (id) DO UPDATE SET location = 'Warehouse J', capacity = 130;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, category, price) VALUES (1, 'Product A', 'Category A', 10.5) ON CONFLICT (id) DO UPDATE SET name = 'Product A', category = 'Category A', price = 10.5;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, category, price) VALUES (2, 'Product B', 'Category B', 15.75) ON CONFLICT (id) DO UPDATE SET name = 'Product B', category = 'Category B', price = 15.75;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, category, price) VALUES (3, 'Product C', 'Category A', 20.0) ON CONFLICT (id) DO UPDATE SET name = 'Product C', category = 'Category A', price = 20.0;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, category, price) VALUES (4, 'Product D', 'Category C', 12.25) ON CONFLICT (id) DO UPDATE SET name = 'Product D', category = 'Category C', price = 12.25;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, category, price) VALUES (5, 'Product E', 'Category B', 18.5) ON CONFLICT (id) DO UPDATE SET name = 'Product E', category = 'Category B', price = 18.5;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, category, price) VALUES (6, 'Product F', 'Category C', 22.75) ON CONFLICT (id) DO UPDATE SET name = 'Product F', category = 'Category C', price = 22.75;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, category, price) VALUES (7, 'Product G', 'Category A', 14.0) ON CONFLICT (id) DO UPDATE SET name = 'Product G', category = 'Category A', price = 14.0;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, category, price) VALUES (8, 'Product H', 'Category B', 16.25) ON CONFLICT (id) DO UPDATE SET name = 'Product H', category = 'Category B', price = 16.25;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, category, price) VALUES (9, 'Product I', 'Category C', 11.75) ON CONFLICT (id) DO UPDATE SET name = 'Product I', category = 'Category C', price = 11.75;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, category, price) VALUES (10, 'Product J', 'Category A', 13.5) ON CONFLICT (id) DO UPDATE SET name = 'Product J', category = 'Category A', price = 13.5;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity) VALUES (1, 'New York', 100) ON CONFLICT (id) DO UPDATE SET location = 'New York', capacity = 100;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity) VALUES (2, 'Los Angeles', 150) ON CONFLICT (id) DO UPDATE SET location = 'Los Angeles', capacity = 150;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity) VALUES (3, 'Chicago', 120) ON CONFLICT (id) DO UPDATE SET location = 'Chicago', capacity = 120;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity) VALUES (4, 'Houston', 200) ON CONFLICT (id) DO UPDATE SET location = 'Houston', capacity = 200;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity) VALUES (5, 'Miami', 80) ON CONFLICT (id) DO UPDATE SET location = 'Miami', capacity = 80;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity) VALUES (6, 'Seattle', 130) ON CONFLICT (id) DO UPDATE SET location = 'Seattle', capacity = 130;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity) VALUES (7, 'Boston', 110) ON CONFLICT (id) DO UPDATE SET location = 'Boston', capacity = 110;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity) VALUES (8, 'Dallas', 180) ON CONFLICT (id) DO UPDATE SET location = 'Dallas', capacity = 180;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity) VALUES (9, 'Atlanta', 160) ON CONFLICT (id) DO UPDATE SET location = 'Atlanta', capacity = 160;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity) VALUES (10, 'San Francisco', 140) ON CONFLICT (id) DO UPDATE SET location = 'San Francisco', capacity = 140;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, category, price) VALUES (101, 'Phone', 'Electronics', 500.00) ON CONFLICT (id) DO UPDATE SET name = 'Phone', category = 'Electronics', price = 500.00;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, category, price) VALUES (102, 'Laptop', 'Electronics', 1000.00) ON CONFLICT (id) DO UPDATE SET name = 'Laptop', category = 'Electronics', price = 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, category, price) VALUES (103, 'Shoes', 'Fashion', 50.00) ON CONFLICT (id) DO UPDATE SET name = 'Shoes', category = 'Fashion', price = 50.00;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, category, price) VALUES (104, 'Watch', 'Fashion', 200.00) ON CONFLICT (id) DO UPDATE SET name = 'Watch', category = 'Fashion', price = 200.00;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, category, price) VALUES (105, 'TV', 'Electronics', 800.00) ON CONFLICT (id) DO UPDATE SET name = 'TV', category = 'Electronics', price = 800.00;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, category, price) VALUES (106, 'Dress', 'Fashion', 70.00) ON CONFLICT (id) DO UPDATE SET name = 'Dress', category = 'Fashion', price = 70.00;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, category, price) VALUES (107, 'Headphones', 'Electronics', 100.00) ON CONFLICT (id) DO UPDATE SET name = 'Headphones', category = 'Electronics', price = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, category, price) VALUES (108, 'Sneakers', 'Fashion', 60.00) ON CONFLICT (id) DO UPDATE SET name = 'Sneakers', category = 'Fashion', price = 60.00;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, category, price) VALUES (109, 'Tablet', 'Electronics', 300.00) ON CONFLICT (id) DO UPDATE SET name = 'Tablet', category = 'Electronics', price = 300.00;",
  "### TABLEDATA\n\nCREATE TABLE warehouses (\n    id INT PRIMARY KEY,\n    location TEXT,\n    capacity INT\n);\n\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name TEXT,\n    category TEXT,\n    price DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, category, price) VALUES (110, 'Jacket', 'Fashion', 150.00) ON CONFLICT (id) DO UPDATE SET name = 'Jacket', category = 'Fashion', price = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (1, 'Apple', 1, 100) ON DUPLICATE KEY UPDATE quantity = quantity + 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (2, 'Banana', 2, 150) ON DUPLICATE KEY UPDATE quantity = quantity + 20;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (3, 'Orange', 3, 200) ON DUPLICATE KEY UPDATE quantity = quantity + 30;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (4, 'Grapes', 1, 120) ON DUPLICATE KEY UPDATE quantity = quantity + 15;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (5, 'Mango', 2, 180) ON DUPLICATE KEY UPDATE quantity = quantity + 25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (6, 'Pineapple', 3, 220) ON DUPLICATE KEY UPDATE quantity = quantity + 35;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (7, 'Watermelon', 1, 130) ON DUPLICATE KEY UPDATE quantity = quantity + 18;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (8, 'Strawberry', 2, 160) ON DUPLICATE KEY UPDATE quantity = quantity + 22;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (9, 'Cherry', 3, 180) ON DUPLICATE KEY UPDATE quantity = quantity + 24;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (10, 'Peach', 1, 110) ON DUPLICATE KEY UPDATE quantity = quantity + 12;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (11, 'Pear', 2, 170) ON DUPLICATE KEY UPDATE quantity = quantity + 21;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (12, 'Kiwi', 3, 190) ON DUPLICATE KEY UPDATE quantity = quantity + 28;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (13, 'Plum', 1, 105) ON DUPLICATE KEY UPDATE quantity = quantity + 16;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (14, 'Apricot', 2, 158) ON DUPLICATE KEY UPDATE quantity = quantity + 23;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (15, 'Blackberry', 3, 230) ON DUPLICATE KEY UPDATE quantity = quantity + 37;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (16, 'Raspberry', 1, 135) ON DUPLICATE KEY UPDATE quantity = quantity + 19;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (17, 'Blueberry', 2, 165) ON DUPLICATE KEY UPDATE quantity = quantity + 26;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (18, 'Cranberry', 3, 200) ON DUPLICATE KEY UPDATE quantity = quantity + 30;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (19, 'Lemon', 1, 125) ON DUPLICATE KEY UPDATE quantity = quantity + 17;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (20, 'Lime', 2, 175) ON DUPLICATE KEY UPDATE quantity = quantity + 24;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (1, 'Product A', 1, 100) ON CONFLICT (product_id) DO UPDATE SET quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (2, 'Product B', 2, 150) ON CONFLICT (product_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (3, 'Product C', 1, 200) ON CONFLICT (product_id) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (4, 'Product D', 3, 120) ON CONFLICT (product_id) DO UPDATE SET quantity = quantity + EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (5, 'Product E', 2, 180) ON CONFLICT (product_id) DO UPDATE SET quantity = quantity - EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (1, 'Warehouse A', 'Location A') ON CONFLICT (warehouse_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (2, 'Warehouse B', 'Location B') ON CONFLICT (warehouse_id) DO UPDATE SET location = EXCLUDED.location;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (3, 'Warehouse C', 'Location C') ON CONFLICT (warehouse_id) DO UPDATE SET warehouse_name = EXCLUDED.warehouse_name, location = EXCLUDED.location;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO restocking_history (restocking_id, product_id, warehouse_id, restock_date, restock_quantity) VALUES (1, 1, 1, '2022-01-01', 50) ON CONFLICT (restocking_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO restocking_history (restocking_id, product_id, warehouse_id, restock_date, restock_quantity) VALUES (2, 2, 2, '2022-01-02', 70) ON CONFLICT (restocking_id) DO UPDATE SET restock_quantity = EXCLUDED.restock_quantity;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO restocking_history (restocking_id, product_id, warehouse_id, restock_date, restock_quantity) VALUES (3, 3, 1, '2022-01-03', 100) ON CONFLICT (restocking_id) DO UPDATE SET product_id = EXCLUDED.product_id, warehouse_id = EXCLUDED.warehouse_id, restock_date = EXCLUDED.restock_date;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO restocking_history (restocking_id, product_id, warehouse_id, restock_date, restock_quantity) VALUES (4, 4, 3, '2022-01-04', 80) ON CONFLICT (restocking_id) DO UPDATE SET product_id = EXCLUDED.product_id, warehouse_id = EXCLUDED.warehouse_id, restock_quantity = EXCLUDED.restock_quantity;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    warehouse_id INT,\n    quantity INT\n);\n\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\n\nCREATE TABLE restocking_history (\n    restocking_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    restock_date DATE,\n    restock_quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO restocking_history (restocking_id, product_id, warehouse_id, restock_date, restock_quantity) VALUES (5, 5, 2, '2022-01-05', 120) ON CONFLICT (restocking_id) DO UPDATE SET product_id = EXCLUDED.product_id, warehouse_id = EXCLUDED.warehouse_id, restock_quantity = EXCLUDED.restock_quantity;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES (1, 'Product 1', 'Description for Product 1', 50.00) ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), description = VALUES(description), price = VALUES(price);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES (2, 'Product 2', 'Description for Product 2', 75.00) ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), description = VALUES(description), price = VALUES(price);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES (3, 'Product 3', 'Description for Product 3', 100.00) ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), description = VALUES(description), price = VALUES(price);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES (4, 'Product 4', 'Description for Product 4', 120.00) ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), description = VALUES(description), price = VALUES(price);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES (5, 'Product 5', 'Description for Product 5', 150.00) ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), description = VALUES(description), price = VALUES(price);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES (6, 'Product 6', 'Description for Product 6', 200.00) ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), description = VALUES(description), price = VALUES(price);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES (7, 'Product 7', 'Description for Product 7', 250.00) ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), description = VALUES(description), price = VALUES(price);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES (8, 'Product 8', 'Description for Product 8', 300.00) ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), description = VALUES(description), price = VALUES(price);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES (9, 'Product 9', 'Description for Product 9', 350.00) ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), description = VALUES(description), price = VALUES(price);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES (10, 'Product 10', 'Description for Product 10', 400.00) ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), description = VALUES(description), price = VALUES(price);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (1, 'Warehouse A', 'Location A') ON DUPLICATE KEY UPDATE warehouse_name = VALUES(warehouse_name), location = VALUES(location);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (2, 'Warehouse B', 'Location B') ON DUPLICATE KEY UPDATE warehouse_name = VALUES(warehouse_name), location = VALUES(location);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (3, 'Warehouse C', 'Location C') ON DUPLICATE KEY UPDATE warehouse_name = VALUES(warehouse_name), location = VALUES(location);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (4, 'Warehouse D', 'Location D') ON DUPLICATE KEY UPDATE warehouse_name = VALUES(warehouse_name), location = VALUES(location);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (5, 'Warehouse E', 'Location E') ON DUPLICATE KEY UPDATE warehouse_name = VALUES(warehouse_name), location = VALUES(location);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (6, 'Warehouse F', 'Location F') ON DUPLICATE KEY UPDATE warehouse_name = VALUES(warehouse_name), location = VALUES(location);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (7, 'Warehouse G', 'Location G') ON DUPLICATE KEY UPDATE warehouse_name = VALUES(warehouse_name), location = VALUES(location);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (8, 'Warehouse H', 'Location H') ON DUPLICATE KEY UPDATE warehouse_name = VALUES(warehouse_name), location = VALUES(location);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (9, 'Warehouse I', 'Location I') ON DUPLICATE KEY UPDATE warehouse_name = VALUES(warehouse_name), location = VALUES(location);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (10, 'Warehouse J', 'Location J') ON DUPLICATE KEY UPDATE warehouse_name = VALUES(warehouse_name), location = VALUES(location);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, warehouse_id, quantity) VALUES (1, 1, 100) ON DUPLICATE KEY UPDATE quantity = VALUES(quantity);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, warehouse_id, quantity) VALUES (1, 2, 150) ON DUPLICATE KEY UPDATE quantity = VALUES(quantity);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, warehouse_id, quantity) VALUES (2, 3, 200) ON DUPLICATE KEY UPDATE quantity = VALUES(quantity);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, warehouse_id, quantity) VALUES (2, 4, 250) ON DUPLICATE KEY UPDATE quantity = VALUES(quantity);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, warehouse_id, quantity) VALUES (3, 5, 300) ON DUPLICATE KEY UPDATE quantity = VALUES(quantity);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, warehouse_id, quantity) VALUES (3, 6, 350) ON DUPLICATE KEY UPDATE quantity = VALUES(quantity);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, warehouse_id, quantity) VALUES (4, 7, 400) ON DUPLICATE KEY UPDATE quantity = VALUES(quantity);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, warehouse_id, quantity) VALUES (4, 8, 450) ON DUPLICATE KEY UPDATE quantity = VALUES(quantity);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, warehouse_id, quantity) VALUES (5, 9, 500) ON DUPLICATE KEY UPDATE quantity = VALUES(quantity);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, warehouse_id, quantity) VALUES (5, 10, 550) ON DUPLICATE KEY UPDATE quantity = VALUES(quantity);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO restocking_orders (order_id, product_id, warehouse_id, quantity, order_date, status) VALUES (1, 1, 1, 50, '2022-01-01', 'Pending') ON DUPLICATE KEY UPDATE product_id = VALUES(product_id), warehouse_id = VALUES(warehouse_id), quantity = VALUES(quantity), order_date = VALUES(order_date), status = VALUES(status);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO restocking_orders (order_id, product_id, warehouse_id, quantity, order_date, status) VALUES (2, 2, 2, 100, '2022-02-01', 'Completed') ON DUPLICATE KEY UPDATE product_id = VALUES(product_id), warehouse_id = VALUES(warehouse_id), quantity = VALUES(quantity), order_date = VALUES(order_date), status = VALUES(status);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO restocking_orders (order_id, product_id, warehouse_id, quantity, order_date, status) VALUES (3, 3, 3, 150, '2022-03-01', 'Cancelled') ON DUPLICATE KEY UPDATE product_id = VALUES(product_id), warehouse_id = VALUES(warehouse_id), quantity = VALUES(quantity), order_date = VALUES(order_date), status = VALUES(status);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO restocking_orders (order_id, product_id, warehouse_id, quantity, order_date, status) VALUES (4, 4, 4, 200, '2022-04-01', 'Pending') ON DUPLICATE KEY UPDATE product_id = VALUES(product_id), warehouse_id = VALUES(warehouse_id), quantity = VALUES(quantity), order_date = VALUES(order_date), status = VALUES(status);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO restocking_orders (order_id, product_id, warehouse_id, quantity, order_date, status) VALUES (5, 5, 5, 250, '2022-05-01', 'Completed') ON DUPLICATE KEY UPDATE product_id = VALUES(product_id), warehouse_id = VALUES(warehouse_id), quantity = VALUES(quantity), order_date = VALUES(order_date), status = VALUES(status);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES (1, 'Product 1', 'Description of Product 1', 10.50) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product 1', description = 'Updated Description of Product 1', price = 12.50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (1, 'Warehouse A', 'Location A') ON CONFLICT (warehouse_id) DO UPDATE SET warehouse_name = 'Updated Warehouse A', location = 'Updated Location A';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, warehouse_id, quantity) VALUES (1, 1, 100) ON CONFLICT (product_id, warehouse_id) DO UPDATE SET quantity = 150;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE inventory (\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    PRIMARY KEY (product_id, warehouse_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)\n);\n\nCREATE TABLE restocking_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO restocking_orders (order_id, product_id, warehouse_id, quantity, order_date, status) VALUES (1, 1, 1, 50, '2022-05-15', 'Pending') ON CONFLICT (order_id) DO UPDATE SET product_id = 2, warehouse_id = 2, quantity = 75, order_date = '2022-05-20', status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (1, 'ProductA', 1, 100) ON DUPLICATE KEY UPDATE product_name='ProductA', warehouse_id=1, quantity=100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (2, 'ProductB', 2, 150) ON DUPLICATE KEY UPDATE product_name='ProductB', warehouse_id=2, quantity=150;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (3, 'ProductC', 1, 200) ON DUPLICATE KEY UPDATE product_name='ProductC', warehouse_id=1, quantity=200;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (4, 'ProductD', 3, 120) ON DUPLICATE KEY UPDATE product_name='ProductD', warehouse_id=3, quantity=120;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (5, 'ProductE', 2, 80) ON DUPLICATE KEY UPDATE product_name='ProductE', warehouse_id=2, quantity=80;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (6, 'ProductF', 1, 90) ON DUPLICATE KEY UPDATE product_name='ProductF', warehouse_id=1, quantity=90;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (7, 'ProductG', 3, 110) ON DUPLICATE KEY UPDATE product_name='ProductG', warehouse_id=3, quantity=110;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (8, 'ProductH', 2, 140) ON DUPLICATE KEY UPDATE product_name='ProductH', warehouse_id=2, quantity=140;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (9, 'ProductI', 1, 180) ON DUPLICATE KEY UPDATE product_name='ProductI', warehouse_id=1, quantity=180;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (10, 'ProductJ', 3, 160) ON DUPLICATE KEY UPDATE product_name='ProductJ', warehouse_id=3, quantity=160;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (11, 'ProductK', 1, 170) ON DUPLICATE KEY UPDATE product_name='ProductK', warehouse_id=1, quantity=170;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (12, 'ProductL', 2, 130) ON DUPLICATE KEY UPDATE product_name='ProductL', warehouse_id=2, quantity=130;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (13, 'ProductM', 1, 150) ON DUPLICATE KEY UPDATE product_name='ProductM', warehouse_id=1, quantity=150;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (14, 'ProductN', 3, 100) ON DUPLICATE KEY UPDATE product_name='ProductN', warehouse_id=3, quantity=100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (15, 'ProductO', 2, 190) ON DUPLICATE KEY UPDATE product_name='ProductO', warehouse_id=2, quantity=190;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (16, 'ProductP', 1, 120) ON DUPLICATE KEY UPDATE product_name='ProductP', warehouse_id=1, quantity=120;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (17, 'ProductQ', 3, 110) ON DUPLICATE KEY UPDATE product_name='ProductQ', warehouse_id=3, quantity=110;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (18, 'ProductR', 2, 140) ON DUPLICATE KEY UPDATE product_name='ProductR', warehouse_id=2, quantity=140;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (19, 'ProductS', 1, 80) ON DUPLICATE KEY UPDATE product_name='ProductS', warehouse_id=1, quantity=80;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (20, 'ProductT', 3, 200) ON DUPLICATE KEY UPDATE product_name='ProductT', warehouse_id=3, quantity=200;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (1, 'Product A', 1, 100) ON DUPLICATE KEY UPDATE quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (2, 'Product B', 2, 150) ON DUPLICATE KEY UPDATE quantity = 150;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (3, 'Product C', 3, 200) ON DUPLICATE KEY UPDATE quantity = 200;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (4, 'Product D', 1, 120) ON DUPLICATE KEY UPDATE quantity = 120;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (5, 'Product E', 2, 180) ON DUPLICATE KEY UPDATE quantity = 180;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (6, 'Product F', 3, 220) ON DUPLICATE KEY UPDATE quantity = 220;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (7, 'Product G', 1, 130) ON DUPLICATE KEY UPDATE quantity = 130;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (8, 'Product H', 1, 140) ON DUPLICATE KEY UPDATE quantity = 140;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (9, 'Product I', 2, 160) ON DUPLICATE KEY UPDATE quantity = 160;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (10, 'Product J', 3, 180) ON DUPLICATE KEY UPDATE quantity = 180;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (11, 'Product K', 2, 190) ON DUPLICATE KEY UPDATE quantity = 190;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (12, 'Product L', 3, 210) ON DUPLICATE KEY UPDATE quantity = 210;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (13, 'Product M', 1, 150) ON DUPLICATE KEY UPDATE quantity = 150;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (14, 'Product N', 1, 160) ON DUPLICATE KEY UPDATE quantity = 160;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (15, 'Product O', 3, 230) ON DUPLICATE KEY UPDATE quantity = 230;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (16, 'Product P', 2, 200) ON DUPLICATE KEY UPDATE quantity = 200;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (17, 'Product Q', 2, 210) ON DUPLICATE KEY UPDATE quantity = 210;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (18, 'Product R', 3, 240) ON DUPLICATE KEY UPDATE quantity = 240;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (19, 'Product S', 1, 170) ON DUPLICATE KEY UPDATE quantity = 170;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE restocking_history (\n    restock_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    restock_date DATE NOT NULL,\n    quantity_restocked INT NOT NULL\n);\n\nCREATE TABLE inventory_levels (\n    inventory_id INT PRIMARY KEY,\n    product_id INT NOT NULL,\n    warehouse_id INT NOT NULL,\n    quantity_available INT NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, warehouse_id, quantity) VALUES (20, 'Product T', 1, 180) ON DUPLICATE KEY UPDATE quantity = 180;"
]