<t>CREATE TABLE Music( /* Add columns here */ );</t><stat>INSERT INTO Music (title, artist, genre) VALUES ('Song 1', 'Artist 1', 'Rock');</stat><divider><t>CREATE TABLE Music( /* Add columns here */ );</t><stat>insert into music (title, artist, genre) values ('song 1', 'artist 1', 'rock');</stat><divider><t>CREATE TABLE Music( /* Add columns here */ );</t><stat>INSERT INTO Music (title, artist, genre) VALUES ('Song 2', 'Artist 2', 'Pop');</stat><divider><t>CREATE TABLE Music( /* Add columns here */ );</t><stat>insert into music (title, artist, genre) values ('song 2', 'artist 2', 'pop');</stat><divider><t>CREATE TABLE Music( /* Add columns here */ );</t><stat>INSERT INTO Music (title, artist, genre) VALUES ('Song 3', 'Artist 3', 'Hip Hop');</stat><divider><t>CREATE TABLE Music( /* Add columns here */ );</t><stat>insert into music (title, artist, genre) values ('song 3', 'artist 3', 'hip hop');</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name STRING, genre STRING)</t><stat>INSERT INTO artists (id, name, genre) VALUES (1, 'Artist1', 'Pop')</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name STRING, genre STRING)</t><stat>insert into artists (id, name, genre) values (1, 'artist1', 'pop')</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name STRING, genre STRING)</t><stat>INSERT INTO artists (id, name, genre) VALUES (2, 'Artist2', 'Rock')</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name STRING, genre STRING)</t><stat>insert into artists (id, name, genre) values (2, 'artist2', 'rock')</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name STRING, genre STRING)</t><stat>INSERT INTO artists (id, name, genre) VALUES (3, 'Artist3', 'Hip-hop')</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name STRING, genre STRING)</t><stat>insert into artists (id, name, genre) values (3, 'artist3', 'hip-hop')</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))</t><stat>INSERT INTO artists (id, name, genre) VALUES (1, 'John Doe', 'Rock')</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))</t><stat>insert into artists (id, name, genre) values (1, 'john doe', 'rock')</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))</t><stat>INSERT INTO artists (id, name, genre) VALUES (1, 'John Doe', 'Rock')</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))</t><stat>insert into artists (id, name, genre) values (1, 'john doe', 'rock')</stat><divider><t>CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))</t><stat>INSERT INTO artists (id, name, genre) VALUES (1, 'John Doe', 'Rock')</stat><divider><t>CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))</t><stat>insert into artists (id, name, genre) values (1, 'john doe', 'rock')</stat><divider><t>CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))</t><stat>INSERT INTO artists (id, name, genre) VALUES (1, 'John Doe', 'Rock')</stat><divider><t>CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))</t><stat>insert into artists (id, name, genre) values (1, 'john doe', 'rock')</stat><divider><t>CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))</t><stat>INSERT INTO artists (id, name, genre) VALUES (1, 'John Doe', 'Rock')</stat><divider><t>CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))</t><stat>insert into artists (id, name, genre) values (1, 'john doe', 'rock')</stat><divider><t>CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))</t><stat>INSERT INTO artists (id, name, genre) VALUES (1, 'John Doe', 'Rock')</stat><divider><t>CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))</t><stat>insert into artists (id, name, genre) values (1, 'john doe', 'rock')</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))</t><stat>INSERT INTO albums (id, title, release_date, artist_id) VALUES (1, 'Album 1', '2022-01-01', 1)</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))</t><stat>insert into albums (id, title, release_date, artist_id) values (1, 'album 1', '2022-01-01', 1)</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))</t><stat>INSERT INTO albums (id, title, release_date, artist_id) VALUES (1, 'Album 1', '2022-01-01', 1)</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))</t><stat>insert into albums (id, title, release_date, artist_id) values (1, 'album 1', '2022-01-01', 1)</stat><divider><t>CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))</t><stat>INSERT INTO albums (id, title, release_date, artist_id) VALUES (1, 'Album 1', '2022-01-01', 1)</stat><divider><t>CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))</t><stat>insert into albums (id, title, release_date, artist_id) values (1, 'album 1', '2022-01-01', 1)</stat><divider><t>CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))</t><stat>INSERT INTO albums (id, title, release_date, artist_id) VALUES (1, 'Album 1', '2022-01-01', 1)</stat><divider><t>CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))</t><stat>insert into albums (id, title, release_date, artist_id) values (1, 'album 1', '2022-01-01', 1)</stat><divider><t>CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))</t><stat>INSERT INTO albums (id, title, release_date, artist_id) VALUES (1, 'Album 1', '2022-01-01', 1)</stat><divider><t>CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))</t><stat>insert into albums (id, title, release_date, artist_id) values (1, 'album 1', '2022-01-01', 1)</stat><divider><t>CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))</t><stat>INSERT INTO albums (id, title, release_date, artist_id) VALUES (1, 'Album 1', '2022-01-01', 1)</stat><divider><t>CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))</t><stat>insert into albums (id, title, release_date, artist_id) values (1, 'album 1', '2022-01-01', 1)</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))</t><stat>INSERT INTO songs (id, title, duration, album_id) VALUES (1, 'Song 1', 180, 1)</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))</t><stat>insert into songs (id, title, duration, album_id) values (1, 'song 1', 180, 1)</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))</t><stat>INSERT INTO songs (id, title, duration, album_id) VALUES (1, 'Song 1', 180, 1)</stat><divider><t>CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))</t><stat>insert into songs (id, title, duration, album_id) values (1, 'song 1', 180, 1)</stat><divider><t>CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))</t><stat>INSERT INTO songs (id, title, duration, album_id) VALUES (1, 'Song 1', 180, 1)</stat><divider><t>CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))</t><stat>insert into songs (id, title, duration, album_id) values (1, 'song 1', 180, 1)</stat><divider><t>CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))</t><stat>INSERT INTO songs (id, title, duration, album_id) VALUES (1, 'Song 1', 180, 1)</stat><divider><t>CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))</t><stat>insert into songs (id, title, duration, album_id) values (1, 'song 1', 180, 1)</stat><divider><t>CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))</t><stat>INSERT INTO songs (id, title, duration, album_id) VALUES (1, 'Song 1', 180, 1)</stat><divider><t>CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))</t><stat>insert into songs (id, title, duration, album_id) values (1, 'song 1', 180, 1)</stat><divider><t>CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))</t><stat>INSERT INTO songs (id, title, duration, album_id) VALUES (1, 'Song 1', 180, 1)</stat><divider><t>CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(255), duration INT, album_id INT, FOREIGN KEY(album_id) REFERENCES albums(id))

CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_date DATE, artist_id INT, FOREIGN KEY(artist_id) REFERENCES artists(id))

CREATE TABLE artists (id INT PRIMARY KEY, name VARCHAR(255), genre VARCHAR(255))</t><stat>insert into songs (id, title, duration, album_id) values (1, 'song 1', 180, 1)</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Artist (name, genre) VALUES ('Michael Jackson', 'Pop');</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into artist (name, genre) values ('michael jackson', 'pop');</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Album (title, release_date, artist_id) VALUES ('Thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into album (title, release_date, artist_id) values ('thriller', '1982-11-30', 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>INSERT INTO Song (title, duration, album_id, artist_id) VALUES ('Billie Jean', 292, 1, 1);</stat><divider><t>CREATE TABLE Playlist (id SERIAL PRIMARY KEY, name STRING NOT NULL, description STRING, user_id INT);

CREATE TABLE Song (id SERIAL PRIMARY KEY, title STRING NOT NULL, duration INT, album_id INT REFERENCES Album(id), artist_id INT REFERENCES Artist(id));

CREATE TABLE Album (id SERIAL PRIMARY KEY, title STRING NOT NULL, release_date DATE, artist_id INT REFERENCES Artist(id));

CREATE TABLE Artist (id SERIAL PRIMARY KEY, name STRING NOT NULL, genre STRING);</t><stat>insert into song (title, duration, album_id, artist_id) values ('billie jean', 292, 1, 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ed Sheeran');</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into artists (artist_id, artist_name) values (1, 'ed sheeran');</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO albums (album_id, album_name, release_date, artist_id) VALUES (1, 'Divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into albums (album_id, album_name, release_date, artist_id) values (1, 'divide', '2017-03-03', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>INSERT INTO songs (song_id, song_name, album_id) VALUES (1, 'Shape of You', 1);</stat><divider><t>CREATE TABLE song_genre (
    song_id INT,
    genre_id INT,
    PRIMARY KEY (song_id, genre_id),
    FOREIGN KEY (song_id) REFERENCES songs(song_id),
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);


CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);


CREATE TABLE songs (
    song_id INT PRIMARY KEY,
    song_name VARCHAR(255) NOT NULL,
    album_id INT,
    FOREIGN KEY (album_id) REFERENCES albums(album_id)
);


CREATE TABLE albums (
    album_id INT PRIMARY KEY,
    album_name VARCHAR(255) NOT NULL,
    release_date DATE,
    artist_id INT,
    FOREIGN KEY (artist_id) REFERENCES artists(artist_id)
);


CREATE TABLE artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255) NOT NULL
);
</t><stat>insert into songs (song_id, song_name, album_id) values (1, 'shape of you', 1);</stat>