<t>CREATE TABLE games (  game_id UUID NOT NULL PRIMARY KEY,  game_name STRING NOT NULL,  release_date DATE NOT NULL,  genre STRING NOT NULL,  rating DOUBLE NOT NULL,  platform STRING NOT NULL )</t><stat>DELETE FROM games WHERE game_id = '123e4567-e89b-12d3-a456-426614174000';</stat><divider><t>CREATE TABLE games (  game_id UUID NOT NULL PRIMARY KEY,  game_name STRING NOT NULL,  release_date DATE NOT NULL,  genre STRING NOT NULL,  rating DOUBLE NOT NULL,  platform STRING NOT NULL )</t><stat>delete from games where game_id = '123e4567-e89b-12d3-a456-426614174000';</stat><divider><t>CREATE TABLE games (  game_id UUID NOT NULL PRIMARY KEY,  game_name STRING NOT NULL,  release_date DATE NOT NULL,  genre STRING NOT NULL,  rating DOUBLE NOT NULL,  platform STRING NOT NULL )</t><stat>DELETE FROM games WHERE genre = 'Action';</stat><divider><t>CREATE TABLE games (  game_id UUID NOT NULL PRIMARY KEY,  game_name STRING NOT NULL,  release_date DATE NOT NULL,  genre STRING NOT NULL,  rating DOUBLE NOT NULL,  platform STRING NOT NULL )</t><stat>delete from games where genre = 'action';</stat><divider><t>CREATE TABLE games (  game_id UUID NOT NULL PRIMARY KEY,  game_name STRING NOT NULL,  release_date DATE NOT NULL,  genre STRING NOT NULL,  rating DOUBLE NOT NULL,  platform STRING NOT NULL )</t><stat>DELETE FROM games WHERE release_date < '2022-01-01';</stat><divider><t>CREATE TABLE games (  game_id UUID NOT NULL PRIMARY KEY,  game_name STRING NOT NULL,  release_date DATE NOT NULL,  genre STRING NOT NULL,  rating DOUBLE NOT NULL,  platform STRING NOT NULL )</t><stat>delete from games where release_date < '2022-01-01';</stat><divider><t>CREATE TABLE players (
    player_id INT PRIMARY KEY,
    player_name VARCHAR(50) NOT NULL,
    player_level INT
);


CREATE TABLE games (
    game_id INT PRIMARY KEY,
    game_name VARCHAR(50) NOT NULL,
    game_genre VARCHAR(50)
);
</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (
    player_id INT PRIMARY KEY,
    player_name VARCHAR(50) NOT NULL,
    player_level INT
);


CREATE TABLE games (
    game_id INT PRIMARY KEY,
    game_name VARCHAR(50) NOT NULL,
    game_genre VARCHAR(50)
);
</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (
    game_id INT PRIMARY KEY,
    game_name VARCHAR(50) NOT NULL,
    game_genre VARCHAR(50)
);


CREATE TABLE players (
    player_id INT PRIMARY KEY,
    player_name VARCHAR(50) NOT NULL,
    player_level INT
);
</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (
    game_id INT PRIMARY KEY,
    game_name VARCHAR(50) NOT NULL,
    game_genre VARCHAR(50)
);


CREATE TABLE players (
    player_id INT PRIMARY KEY,
    player_name VARCHAR(50) NOT NULL,
    player_level INT
);
</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (
    player_id INT PRIMARY KEY,
    player_name VARCHAR(50) NOT NULL,
    player_level INT
);


CREATE TABLE games (
    game_id INT PRIMARY KEY,
    game_name VARCHAR(50) NOT NULL,
    game_genre VARCHAR(50)
);
</t><stat>DELETE FROM games WHERE game_id = 1;</stat><divider><t>CREATE TABLE players (
    player_id INT PRIMARY KEY,
    player_name VARCHAR(50) NOT NULL,
    player_level INT
);


CREATE TABLE games (
    game_id INT PRIMARY KEY,
    game_name VARCHAR(50) NOT NULL,
    game_genre VARCHAR(50)
);
</t><stat>delete from games where game_id = 1;</stat><divider><t>CREATE TABLE games (
    game_id INT PRIMARY KEY,
    game_name VARCHAR(50) NOT NULL,
    game_genre VARCHAR(50)
);


CREATE TABLE players (
    player_id INT PRIMARY KEY,
    player_name VARCHAR(50) NOT NULL,
    player_level INT
);
</t><stat>DELETE FROM games WHERE game_id = 1;</stat><divider><t>CREATE TABLE games (
    game_id INT PRIMARY KEY,
    game_name VARCHAR(50) NOT NULL,
    game_genre VARCHAR(50)
);


CREATE TABLE players (
    player_id INT PRIMARY KEY,
    player_name VARCHAR(50) NOT NULL,
    player_level INT
);
</t><stat>delete from games where game_id = 1;</stat><divider><t>CREATE TABLE players (
    player_id INT PRIMARY KEY,
    player_name VARCHAR(50) NOT NULL,
    player_level INT
);


CREATE TABLE games (
    game_id INT PRIMARY KEY,
    game_name VARCHAR(50) NOT NULL,
    game_genre VARCHAR(50)
);
</t><stat>DELETE FROM players WHERE player_name = 'John';</stat><divider><t>CREATE TABLE players (
    player_id INT PRIMARY KEY,
    player_name VARCHAR(50) NOT NULL,
    player_level INT
);


CREATE TABLE games (
    game_id INT PRIMARY KEY,
    game_name VARCHAR(50) NOT NULL,
    game_genre VARCHAR(50)
);
</t><stat>delete from players where player_name = 'john';</stat><divider><t>CREATE TABLE games (
    game_id INT PRIMARY KEY,
    game_name VARCHAR(50) NOT NULL,
    game_genre VARCHAR(50)
);


CREATE TABLE players (
    player_id INT PRIMARY KEY,
    player_name VARCHAR(50) NOT NULL,
    player_level INT
);
</t><stat>DELETE FROM players WHERE player_name = 'John';</stat><divider><t>CREATE TABLE games (
    game_id INT PRIMARY KEY,
    game_name VARCHAR(50) NOT NULL,
    game_genre VARCHAR(50)
);


CREATE TABLE players (
    player_id INT PRIMARY KEY,
    player_name VARCHAR(50) NOT NULL,
    player_level INT
);
</t><stat>delete from players where player_name = 'john';</stat><divider><t>CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )</t><stat>DELETE FROM Player WHERE player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d';</stat><divider><t>CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )</t><stat>delete from player where player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d';</stat><divider><t>CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )</t><stat>DELETE FROM Player WHERE player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d';</stat><divider><t>CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )</t><stat>delete from player where player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d';</stat><divider><t>CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )</t><stat>DELETE FROM Player WHERE player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d';</stat><divider><t>CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )</t><stat>delete from player where player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d';</stat><divider><t>CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )</t><stat>DELETE FROM Player WHERE player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d';</stat><divider><t>CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )</t><stat>delete from player where player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d';</stat><divider><t>CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )</t><stat>DELETE FROM Player WHERE player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d';</stat><divider><t>CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )</t><stat>delete from player where player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d';</stat><divider><t>CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )</t><stat>DELETE FROM Player WHERE player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d';</stat><divider><t>CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )</t><stat>delete from player where player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d';</stat><divider><t>CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )</t><stat>DELETE FROM Game WHERE game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )</t><stat>delete from game where game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )</t><stat>DELETE FROM Game WHERE game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )</t><stat>delete from game where game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )</t><stat>DELETE FROM Game WHERE game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )</t><stat>delete from game where game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )</t><stat>DELETE FROM Game WHERE game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )</t><stat>delete from game where game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )</t><stat>DELETE FROM Game WHERE game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )</t><stat>delete from game where game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )</t><stat>DELETE FROM Game WHERE game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )</t><stat>delete from game where game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )</t><stat>DELETE FROM Scoreboard WHERE player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d' AND game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )</t><stat>delete from scoreboard where player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d' and game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )</t><stat>DELETE FROM Scoreboard WHERE player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d' AND game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )</t><stat>delete from scoreboard where player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d' and game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )</t><stat>DELETE FROM Scoreboard WHERE player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d' AND game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )</t><stat>delete from scoreboard where player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d' and game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )</t><stat>DELETE FROM Scoreboard WHERE player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d' AND game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )</t><stat>delete from scoreboard where player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d' and game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )</t><stat>DELETE FROM Scoreboard WHERE player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d' AND game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )</t><stat>delete from scoreboard where player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d' and game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )</t><stat>DELETE FROM Scoreboard WHERE player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d' AND game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE Scoreboard ( player_id UUID REFERENCES Player(player_id), game_id UUID REFERENCES Game(game_id), score INTEGER NOT NULL, PRIMARY KEY (player_id, game_id) )

CREATE TABLE Game ( game_id UUID PRIMARY KEY, game_name VARCHAR(50) NOT NULL, genre VARCHAR(50) NOT NULL, release_date DATE )

CREATE TABLE Player ( player_id UUID PRIMARY KEY, player_name VARCHAR(50) NOT NULL, level INTEGER NOT NULL )</t><stat>delete from scoreboard where player_id = 'e6f8c471-25d3-475c-b4f1-bd137391054d' and game_id = '816f3052-1a8b-4ff6-b4cc-ee410b865e22';</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM game WHERE id = 1;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from game where id = 1;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM player WHERE id = 100;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from player where id = 100;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>DELETE FROM developer WHERE id = 10;</stat><divider><t>CREATE TABLE review (
    id INT PRIMARY KEY,
    game_id INT,
    player_id INT,
    rating DECIMAL(2, 1),
    review_text TEXT,
    FOREIGN KEY (game_id) REFERENCES game(id),
    FOREIGN KEY (player_id) REFERENCES player(id)
);

CREATE TABLE developer (
    id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    founded_date DATE,
    headquarters VARCHAR(255)
);

CREATE TABLE player (
    id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE,
    registration_date DATE
);

CREATE TABLE game (
    id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    platform VARCHAR(100)
);</t><stat>delete from developer where id = 10;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM players WHERE player_id = 1;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from players where player_id = 1;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM games WHERE game_id = 3;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from games where game_id = 3;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);</t><stat>delete from inventory where item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>DELETE FROM inventory WHERE item_id = 5;</stat><divider><t>CREATE TABLE inventory (item_id INT PRIMARY KEY, player_id INT, item_name VARCHAR(255), item_quantity INT, item_type VARCHAR(255), FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE user_ratings (rating_id INT PRIMARY KEY, player_id INT, game_id INT, rating FLOAT, rating_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (game_id) REFERENCES games(game_id));

CREATE TABLE achievements (achievement_id INT PRIMARY KEY, achievement_name VARCHAR(255), player_id INT, achievement_date DATE, FOREIGN KEY (player_id) REFERENCES players(player_id));

CREATE TABLE games (game_id INT PRIMARY KEY, game_name VARCHAR(255), game_genre VARCHAR(255), game_release_date DATE);

CREATE TABLE players (player_id INT PRIMARY KEY, player_name VARCHAR(255), player_level INT, player_score INT);</t><stat>delete from inventory where item_id = 5;</stat>