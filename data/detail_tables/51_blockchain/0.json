[
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    permissions JSONB\n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    user_id INT,\n    permission_type VARCHAR(50) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(id)\n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE user_identities (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    public_key VARCHAR(255) NOT NULL\n);\n"
      },
      {
        "table_schema": "CREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    permission_type VARCHAR(50) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES user_identities(user_id)\n);\n"
      },
      {
        "table_schema": "CREATE TABLE blockchain_network (\n    network_id INT PRIMARY KEY,\n    network_name VARCHAR(100) NOT NULL,\n    network_type VARCHAR(50) NOT NULL,\n    creator_user_id INT NOT NULL,\n    FOREIGN KEY (creator_user_id) REFERENCES user_identities(user_id)\n);\n"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(id)\n);"
      },
      {
        "table_schema": "CREATE TABLE roles (\n    id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE permissions (\n    id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE user_roles (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE user_permissions (\n    permission_id SERIAL PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE user_roles_permissions (\n    role_id INT REFERENCES user_roles(role_id) ON DELETE CASCADE,\n    permission_id INT REFERENCES user_permissions(permission_id) ON DELETE CASCADE,\n    PRIMARY KEY (role_id, permission_id)\n);"
      },
      {
        "table_schema": "CREATE TABLE user_role_mapping (\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    role_id INT REFERENCES user_roles(role_id) ON DELETE CASCADE,\n    PRIMARY KEY (user_id, role_id)\n);"
      }
    ]
  }
]