[
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE blockchain_consensus_data (\n    block_id INT PRIMARY KEY,\n    timestamp TIMESTAMP NOT NULL,\n    consensus_algo VARCHAR(50) NOT NULL,\n    validator_address VARCHAR(100) NOT NULL\n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE blockchain_data (\n    block_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    data TEXT\n);\n"
      },
      {
        "table_schema": "CREATE TABLE consensus_results (\n    result_id INT PRIMARY KEY,\n    block_id INT,\n    timestamp TIMESTAMP,\n    decision VARCHAR(255)\n);\n"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE blockchain_consensus_data (\n    block_number INT,\n    timestamp TIMESTAMP,\n    consensus_method VARCHAR(50)\n);"
      },
      {
        "table_schema": "CREATE TABLE validator_nodes (\n    node_id UUID PRIMARY KEY,\n    node_name VARCHAR(100),\n    public_key BYTEA,\n    node_role VARCHAR(50)\n);"
      },
      {
        "table_schema": "CREATE TABLE block_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    sender_address VARCHAR(100),\n    receiver_address VARCHAR(100),\n    amount DECIMAL(10,2),\n    transaction_timestamp TIMESTAMP\n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE blockchain_data (\n    block_number INT NOT NULL,\n    hash VARCHAR(255) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    data TEXT,\n    PRIMARY KEY (block_number)\n);\n"
      },
      {
        "table_schema": "CREATE TABLE transactions (\n    transaction_id INT NOT NULL,\n    block_number INT NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (transaction_id),\n    FOREIGN KEY (block_number) REFERENCES blockchain_data(block_number)\n);\n"
      },
      {
        "table_schema": "CREATE TABLE blocks (\n    block_number INT NOT NULL,\n    previous_hash VARCHAR(255) NOT NULL,\n    nonce INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (block_number),\n    UNIQUE (previous_hash)\n);\n"
      },
      {
        "table_schema": "CREATE TABLE validators (\n    validator_id INT NOT NULL,\n    validator_address VARCHAR(255) NOT NULL,\n    active BOOLEAN NOT NULL,\n    PRIMARY KEY (validator_id)\n);\n"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE blockchain_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    block_number BIGINT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    sender_address VARCHAR(50) NOT NULL,\n    receiver_address VARCHAR(50) NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE blockchain_blocks (\n    block_id SERIAL PRIMARY KEY,\n    block_number BIGINT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    transactions_count INT NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE blockchain_miners (\n    miner_id SERIAL PRIMARY KEY,\n    miner_address VARCHAR(50) NOT NULL,\n    mined_blocks_count INT NOT NULL,\n    last_mining_timestamp TIMESTAMP\n);"
      },
      {
        "table_schema": "CREATE TABLE blockchain_nodes (\n    node_id SERIAL PRIMARY KEY,\n    node_address VARCHAR(50) NOT NULL,\n    node_type VARCHAR(20) NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE blockchain_consensus (\n    round_id SERIAL PRIMARY KEY,\n    block_id BIGINT NOT NULL,\n    miner_id INT NOT NULL,\n    consensus_timestamp TIMESTAMP NOT NULL\n);"
      }
    ]
  }
]