[
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE customer_orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n  )"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);"
      },
      {
        "table_schema": "CREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    order_date TIMESTAMP NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL,\n    customer_id UUID REFERENCES customers(customer_id)\n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE customers (customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  customer_email VARCHAR(50) NOT NULL);\n"
      },
      {
        "table_schema": "CREATE TABLE orders (order_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL);\n"
      },
      {
        "table_schema": "CREATE TABLE order_items (item_id INT PRIMARY KEY,\n  order_id INT REFERENCES orders(order_id),\n  product_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  unit_price DECIMAL(8, 2) NOT NULL);\n"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE customers (\n    customer_id UUID,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    PRIMARY KEY (customer_id)\n)"
      },
      {
        "table_schema": "CREATE TABLE orders (\n    order_id UUID,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL,\n    PRIMARY KEY (order_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)"
      },
      {
        "table_schema": "CREATE TABLE products (\n    product_id UUID,\n    product_name VARCHAR(255),\n    price DECIMAL,\n    PRIMARY KEY (product_id)\n)"
      },
      {
        "table_schema": "CREATE TABLE order_details (\n    order_id UUID,\n    product_id UUID,\n    quantity INT,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n)"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  customer_email VARCHAR(50) NOT NULL\n)"
      },
      {
        "table_schema": "CREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  product_price DECIMAL(10,2) NOT NULL\n)"
      },
      {
        "table_schema": "CREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  order_total DECIMAL(10,2) NOT NULL\n)"
      },
      {
        "table_schema": "CREATE TABLE OrderDetails (\n  order_id INT,\n  product_id INT,\n  quantity INT NOT NULL,\n  PRIMARY KEY (order_id, product_id)\n)"
      },
      {
        "table_schema": "CREATE TABLE PurchaseHistory (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date DATE\n)"
      }
    ]
  }
]