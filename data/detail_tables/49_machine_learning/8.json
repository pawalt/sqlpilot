[
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);"
      },
      {
        "table_schema": "CREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);"
      },
      {
        "table_schema": "CREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n"
      },
      {
        "table_schema": "CREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n"
      },
      {
        "table_schema": "CREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n"
      },
      {
        "table_schema": "CREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);"
      },
      {
        "table_schema": "CREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);"
      },
      {
        "table_schema": "CREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);"
      },
      {
        "table_schema": "CREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);"
      },
      {
        "table_schema": "CREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);"
      }
    ]
  }
]