[
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(255),\n    email VARCHAR(100) UNIQUE\n)"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE users (\nid SERIAL PRIMARY KEY,\nusername VARCHAR(50) NOT NULL,\npassword VARCHAR(50) NOT NULL,\nemail VARCHAR(100) NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE sensitive_data (\nid SERIAL PRIMARY KEY,\nuser_id INT REFERENCES users(id),\ndata_value TEXT NOT NULL\n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE users ( \n   id INT PRIMARY KEY, \n   username STRING, \n   password STRING, \n   email STRING \n);"
      },
      {
        "table_schema": "CREATE TABLE permissions ( \n   id INT PRIMARY KEY, \n   user_id INT, \n   type STRING, \n   description STRING \n);"
      },
      {
        "table_schema": "CREATE TABLE encryption_keys ( \n   id INT PRIMARY KEY, \n   user_id INT, \n   encryption_key STRING, \n   encryption_type STRING \n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE encrypted_data (\n    data_id INT PRIMARY KEY,\n    encrypted_content TEXT NOT NULL\n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) UNIQUE NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE user_roles_permissions (\n    role_id INT REFERENCES user_roles(role_id),\n    permission_id INT REFERENCES user_permissions(permission_id),\n    PRIMARY KEY (role_id, permission_id)\n);"
      },
      {
        "table_schema": "CREATE TABLE encrypted_data (\n    data_id INT PRIMARY KEY,\n    encrypted_content BYTEA NOT NULL\n);"
      }
    ]
  }
]