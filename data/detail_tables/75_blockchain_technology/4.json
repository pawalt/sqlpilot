[
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);"
      },
      {
        "table_schema": "CREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);"
      },
      {
        "table_schema": "CREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);"
      },
      {
        "table_schema": "CREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);"
      },
      {
        "table_schema": "CREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);"
      }
    ]
  },
  {
    "tables": [
      {
        "table_schema": "CREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);"
      },
      {
        "table_schema": "CREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);"
      },
      {
        "table_schema": "CREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);"
      },
      {
        "table_schema": "CREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);"
      },
      {
        "table_schema": "CREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);"
      }
    ]
  }
]