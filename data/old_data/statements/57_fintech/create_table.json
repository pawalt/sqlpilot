[
  {
    "statements": [
      "CREATE TABLE fintech_transactions (transaction_id INT PRIMARY KEY, amount DECIMAL, transaction_date DATE, description VARCHAR(255));"
    ]
  },
  {
    "statements": [
      "CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE NOT NULL, password VARCHAR(50) NOT NULL);",
      "CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id), amount DECIMAL(10, 2) NOT NULL, transaction_type VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL);"
    ]
  },
  {
    "statements": [
      "CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password_hash VARCHAR(100) )",
      "CREATE TABLE accounts ( account_id INT PRIMARY KEY, user_id INT, account_type VARCHAR(50), balance DECIMAL(10,2), FOREIGN KEY (user_id) REFERENCES users(user_id) )",
      "CREATE TABLE transactions ( transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(20), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id) )"
    ]
  },
  {
    "statements": [
      "CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255), email VARCHAR(255), password VARCHAR(255))",
      "CREATE TABLE accounts (account_id INT PRIMARY KEY, user_id INT, account_type VARCHAR(255), balance DECIMAL(10, 2))",
      "CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10, 2), transaction_type VARCHAR(255), transaction_date DATE)",
      "CREATE TABLE investments (investment_id INT PRIMARY KEY, account_id INT, investment_type VARCHAR(255), amount DECIMAL(10, 2), investment_date DATE)"
    ]
  },
  {
    "statements": [
      "CREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  price DECIMAL(10,2) NOT NULL,\n  category VARCHAR(50) NOT NULL\n);",
      "CREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  quantity INT NOT NULL,\n  order_date DATE,\n  FOREIGN KEY (product_id) REFERENCES Products(product_id)\n);",
      "CREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);"
    ]
  }
]