[
  {
    "statements": [
      "SELECT * FROM sensors",
      "SELECT sensor_id, sensor_type FROM sensors",
      "SELECT sensor_id, location FROM sensors",
      "SELECT * FROM readings",
      "SELECT reading_id, sensor_id, value FROM readings",
      "SELECT sensor_id, value, timestamp FROM readings",
      "SELECT * FROM sensors WHERE sensor_type='temperature'",
      "SELECT * FROM sensors WHERE location='kitchen'",
      "SELECT * FROM readings WHERE value > 50",
      "SELECT * FROM sensors ORDER BY sensor_id",
      "SELECT * FROM readings ORDER BY timestamp",
      "SELECT COUNT(*) FROM sensors",
      "SELECT AVG(value) FROM readings",
      "SELECT MAX(value) FROM readings",
      "SELECT MIN(value) FROM readings",
      "SELECT sensor_id, COUNT(*) FROM readings GROUP BY sensor_id",
      "SELECT sensor_id, MAX(value) FROM readings GROUP BY sensor_id",
      "SELECT sensor_id, MIN(value) FROM readings GROUP BY sensor_id",
      "SELECT sensor_id, AVG(value) FROM readings GROUP BY sensor_id",
      "SELECT sensor_id, location, COUNT(*) FROM sensors GROUP BY location HAVING COUNT(*) > 1"
    ]
  },
  {
    "statements": [
      "SELECT * FROM smart_streetlights;",
      "SELECT id, location, status FROM smart_streetlights WHERE brightness > 50;",
      "SELECT status FROM smart_streetlights WHERE location = 'Main Street';",
      "SELECT COUNT(id) FROM smart_streetlights;",
      "SELECT AVG(brightness) FROM smart_streetlights;",
      "SELECT location, status FROM smart_streetlights ORDER BY location DESC;",
      "SELECT * FROM traffic_cameras;",
      "SELECT location, camera_type FROM traffic_cameras WHERE status = 'active';",
      "SELECT camera_id FROM traffic_cameras WHERE camera_type = 'PTZ';",
      "SELECT COUNT(camera_id) FROM traffic_cameras;",
      "SELECT MAX(camera_id) FROM traffic_cameras;",
      "SELECT * FROM weather_sensors;",
      "SELECT location, temperature FROM weather_sensors WHERE humidity < 40;",
      "SELECT sensor_id FROM weather_sensors WHERE temperature BETWEEN 20 AND 30;",
      "SELECT AVG(temperature), AVG(humidity) FROM weather_sensors;",
      "SELECT location, humidity FROM weather_sensors ORDER BY humidity ASC;",
      "SELECT id, location, brightness FROM smart_streetlights WHERE brightness > 70 ORDER BY brightness DESC;",
      "SELECT camera_id, camera_type FROM traffic_cameras WHERE camera_type IN ('Dome', 'Bullet');",
      "SELECT sensor_id, location FROM weather_sensors WHERE temperature < 10 OR (humidity > 80 AND humidity < 90);",
      "SELECT MIN(temperature), MAX(temperature) FROM weather_sensors;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM city;",
      "SELECT city_name, population FROM city;",
      "SELECT city_name, population FROM city WHERE population > 1000000;",
      "SELECT * FROM sensors;",
      "SELECT sensor_type, location FROM sensors;",
      "SELECT * FROM events;",
      "SELECT event_name, event_date FROM events;",
      "SELECT * FROM weather;",
      "SELECT temperature, humidity FROM weather;",
      "SELECT city.city_name, weather.temperature FROM city JOIN weather ON city.city_id = weather.city_id;",
      "SELECT city.city_name, sensors.sensor_type FROM city JOIN sensors ON city.city_id = sensors.city_id;",
      "SELECT city.city_name, events.event_name FROM city JOIN events ON city.city_id = events.city_id;",
      "SELECT city.city_name, events.event_name, weather.temperature FROM city JOIN events ON city.city_id = events.city_id JOIN weather ON city.city_id = weather.city_id;",
      "SELECT city.city_name, city.population, weather.humidity FROM city LEFT JOIN weather ON city.city_id = weather.city_id;",
      "SELECT city.city_name, COUNT(events.event_id) AS num_events FROM city LEFT JOIN events ON city.city_id = events.city_id GROUP BY city.city_name;",
      "SELECT city.city_name, AVG(weather.temperature) AS avg_temperature FROM city JOIN weather ON city.city_id = weather.city_id GROUP BY city.city_name;",
      "SELECT city.city_name, MAX(weather.humidity) AS max_humidity FROM city JOIN weather ON city.city_id = weather.city_id GROUP BY city.city_name;",
      "SELECT DISTINCT city.city_name FROM city;",
      "SELECT city.city_name, events.event_name, weather.temperature FROM city JOIN events ON city.city_id = events.city_id JOIN weather ON city.city_id = weather.city_id WHERE events.event_date > '2022-01-01';",
      "SELECT city.city_name, sensors.sensor_type FROM city JOIN sensors ON city.city_id = sensors.city_id WHERE sensors.location = 'Outdoors';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, name FROM users WHERE age > 30;",
      "SELECT * FROM devices;",
      "SELECT device_name, location FROM devices WHERE user_id = '123';",
      "SELECT * FROM sensors;",
      "SELECT sensor_type, status FROM sensors WHERE device_id = '456';",
      "SELECT * FROM locations;",
      "SELECT location_id, location_name FROM locations WHERE city = 'New York';",
      "SELECT * FROM events;",
      "SELECT event_name, event_type FROM events WHERE sensor_id = '789';",
      "SELECT user_id, name, age, city FROM users JOIN devices ON users.user_id = devices.user_id;",
      "SELECT device_name, location, user_id FROM devices JOIN sensors ON devices.device_id = sensors.device_id;",
      "SELECT sensor_type, status, device_id FROM sensors JOIN events ON sensors.sensor_id = events.sensor_id;",
      "SELECT location_id, location_name, city FROM locations JOIN devices ON locations.city = devices.location;",
      "SELECT event_id, event_name, event_type FROM events JOIN sensors ON events.sensor_id = sensors.sensor_id;",
      "SELECT location_id, location_name, city FROM locations JOIN locations ON locations.location_name = locations.city;",
      "SELECT user_id, name, age, city FROM users WHERE city = 'London';",
      "SELECT event_name, event_type FROM events WHERE event_type = 'alert';",
      "SELECT device_name, location FROM devices WHERE location = 'Room 101';",
      "SELECT user_id, name, city FROM users WHERE age BETWEEN 25 AND 35;"
    ]
  }
]