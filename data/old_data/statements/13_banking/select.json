[
  {
    "statements": [
      "SELECT * FROM Banking_Accounts",
      "SELECT id, account_number, balance FROM Banking_Accounts",
      "SELECT account_number, balance FROM Banking_Accounts WHERE balance > 1000",
      "SELECT * FROM Banking_Accounts WHERE account_type='Savings'",
      "SELECT id, account_number, balance FROM Banking_Accounts WHERE balance < 0",
      "SELECT id, account_type FROM Banking_Accounts ORDER BY account_type DESC",
      "SELECT id, account_number, balance FROM Banking_Accounts WHERE account_number BETWEEN 1000 AND 2000",
      "SELECT * FROM Banking_Accounts LIMIT 10",
      "SELECT id, account_number, balance FROM Banking_Accounts WHERE account_type='Checking'",
      "SELECT * FROM Banking_Accounts WHERE balance < 5000",
      "SELECT id, balance FROM Banking_Accounts WHERE account_number = 12345",
      "SELECT id, balance FROM Banking_Accounts WHERE account_type='Savings' AND balance >= 5000",
      "SELECT * FROM Banking_Accounts WHERE balance > 5000 ORDER BY balance DESC",
      "SELECT id, account_number, balance FROM Banking_Accounts WHERE account_number IN (1001, 1002, 1003)",
      "SELECT id, account_number, balance FROM Banking_Accounts WHERE account_type='Checking' AND balance < 1000",
      "SELECT id, account_number, balance FROM Banking_Accounts WHERE balance = 0",
      "SELECT id, account_type FROM Banking_Accounts WHERE balance > 5000",
      "SELECT * FROM Banking_Accounts WHERE account_type='Savings' OR account_type='Checking'",
      "SELECT id, account_number, account_type FROM Banking_Accounts WHERE balance < 0",
      "SELECT id, account_type FROM Banking_Accounts WHERE account_number = 54321"
    ]
  },
  {
    "statements": [
      "SELECT * FROM accounts;",
      "SELECT account_id, account_type FROM accounts WHERE balance > 1000;",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, transaction_type, amount FROM transactions WHERE amount > 100;",
      "SELECT account_id, SUM(amount) AS total_amount FROM transactions GROUP BY account_id;",
      "SELECT account_id, transaction_date, amount FROM transactions ORDER BY transaction_date DESC;",
      "SELECT * FROM accounts INNER JOIN transactions ON accounts.account_id = transactions.account_id;",
      "SELECT * FROM accounts LEFT JOIN transactions ON accounts.account_id = transactions.account_id;",
      "SELECT * FROM accounts RIGHT JOIN transactions ON accounts.account_id = transactions.account_id;",
      "SELECT * FROM accounts JOIN transactions ON accounts.account_id = transactions.account_id;",
      "SELECT * FROM accounts WHERE account_id = 100;",
      "SELECT * FROM transactions WHERE transaction_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT * FROM transactions WHERE transaction_type = 'Deposit';",
      "SELECT account_id, AVG(amount) AS avg_amount FROM transactions GROUP BY account_id HAVING avg_amount > 500;",
      "SELECT owner_id, COUNT(account_id) AS num_accounts FROM accounts GROUP BY owner_id;",
      "SELECT * FROM accounts WHERE account_type = 'Savings' OR account_type = 'Checking';",
      "SELECT account_id, MAX(balance) AS max_balance FROM accounts GROUP BY account_id;",
      "SELECT * FROM accounts WHERE account_id IN (1, 2, 3);",
      "SELECT * FROM transactions WHERE account_id = 1 AND amount > 100;",
      "SELECT account_id, MIN(balance) AS min_balance FROM accounts GROUP BY account_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers",
      "SELECT name, email, phone_number FROM customers WHERE customer_id = 100",
      "SELECT * FROM accounts",
      "SELECT balance FROM accounts WHERE customer_id = 200",
      "SELECT customer_id, SUM(balance) AS total_balance FROM accounts GROUP BY customer_id",
      "SELECT * FROM transactions",
      "SELECT amount, transaction_type FROM transactions WHERE account_id = 300",
      "SELECT SUM(amount) AS total_transactions FROM transactions WHERE transaction_type = 'deposit'",
      "SELECT account_id, AVG(amount) AS avg_transaction_amount FROM transactions GROUP BY account_id",
      "SELECT * FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id",
      "SELECT * FROM accounts JOIN transactions ON accounts.account_id = transactions.account_id",
      "SELECT c.name, a.balance, t.amount FROM customers c JOIN accounts a ON c.customer_id = a.customer_id JOIN transactions t ON a.account_id = t.account_id",
      "SELECT AVG(balance) AS avg_balance FROM accounts",
      "SELECT MAX(amount) AS max_transaction_amount FROM transactions WHERE transaction_type = 'withdrawal'",
      "SELECT name, email FROM customers WHERE phone_number LIKE '%1234%'",
      "SELECT customer_id, balance FROM accounts WHERE balance > 1000",
      "SELECT * FROM transactions ORDER BY transaction_date DESC",
      "SELECT customer_id, COUNT(*) AS num_transactions FROM transactions GROUP BY customer_id HAVING num_transactions > 5",
      "SELECT customer_id, MAX(amount) AS max_transaction_amount FROM transactions GROUP BY customer_id",
      "SELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM accounts WHERE balance > 5000)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customers;",
      "SELECT first_name, last_name FROM Customers;",
      "SELECT customer_id, email FROM Customers WHERE first_name='John';",
      "SELECT * FROM Accounts;",
      "SELECT customer_id, balance FROM Accounts WHERE balance > 1000;",
      "SELECT * FROM Transactions;",
      "SELECT transaction_type, amount FROM Transactions WHERE transaction_date > '2022-01-01';",
      "SELECT * FROM Loans;",
      "SELECT customer_id, loan_amount FROM Loans WHERE status='approved';",
      "SELECT c.first_name, a.account_type, t.transaction_type, l.loan_type FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id JOIN Transactions t ON a.account_id = t.account_id JOIN Loans l ON c.customer_id = l.customer_id;",
      "SELECT c.first_name, a.account_type, t.transaction_type, l.loan_type FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id LEFT JOIN Transactions t ON a.account_id = t.account_id LEFT JOIN Loans l ON c.customer_id = l.customer_id;",
      "SELECT a.account_id, SUM(amount) AS total_amount FROM Accounts a JOIN Transactions t ON a.account_id = t.account_id GROUP BY a.account_id;",
      "SELECT c.first_name, COUNT(distinct a.account_id) AS num_accounts FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id GROUP BY c.customer_id;",
      "SELECT customer_id, MAX(balance) AS max_balance FROM Accounts GROUP BY customer_id;",
      "SELECT customer_id, AVG(loan_amount) AS avg_loan_amount FROM Loans GROUP BY customer_id;",
      "SELECT l.loan_type, COUNT(loan_id) AS num_loans FROM Loans l JOIN Customers c ON l.customer_id = c.customer_id GROUP BY l.loan_type;",
      "SELECT first_name, last_name, email FROM Customers WHERE phone_number IS NULL;",
      "SELECT first_name, last_name, email FROM Customers WHERE phone_number IS NOT NULL;",
      "SELECT * FROM Accounts WHERE customer_id IN (SELECT customer_id FROM Customers WHERE first_name='Jane');",
      "SELECT * FROM Transactions WHERE amount = (SELECT MAX(amount) FROM Transactions);"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT first_name, last_name FROM customers;",
      "SELECT customer_id, email FROM customers;",
      "SELECT * FROM accounts;",
      "SELECT account_number, balance FROM accounts;",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, transaction_type, amount FROM transactions;",
      "SELECT * FROM branches;",
      "SELECT branch_name, address FROM branches;",
      "SELECT * FROM loans;",
      "SELECT customer_id, loan_amount, loan_type FROM loans;",
      "SELECT customers.first_name, accounts.balance FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id;",
      "SELECT branches.branch_name, branches.manager_name, loans.loan_type FROM branches JOIN loans ON branches.branch_id = loans.customer_id;",
      "SELECT customers.first_name, transactions.amount FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id JOIN transactions ON accounts.account_number = transactions.account_number;",
      "SELECT accounts.account_number, SUM(transactions.amount) AS total_amount FROM accounts JOIN transactions ON accounts.account_number = transactions.account_number GROUP BY accounts.account_number;",
      "SELECT branches.branch_name, AVG(accounts.balance) AS avg_balance FROM branches JOIN accounts ON branches.branch_id = accounts.customer_id GROUP BY branches.branch_name;",
      "SELECT DISTINCT loan_type FROM loans;",
      "SELECT customer_id, SUM(loan_amount) AS total_loan_amount FROM loans GROUP BY customer_id;",
      "SELECT customer_id, COUNT(loan_id) AS num_loans FROM loans GROUP BY customer_id;",
      "SELECT customer_id, AVG(loan_amount) AS avg_loan_amount FROM loans GROUP BY customer_id;",
      "SELECT branch_name, MAX(accounts.balance) AS max_balance FROM branches JOIN accounts ON branches.branch_id = accounts.customer_id GROUP BY branch_name;"
    ]
  }
]