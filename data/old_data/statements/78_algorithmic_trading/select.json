[
  {
    "statements": [
      "SELECT * FROM strategy;",
      "SELECT strategy_name, strategy_description FROM strategy;",
      "SELECT * FROM strategy WHERE id = 1;",
      "SELECT * FROM strategy WHERE strategy_name = 'Example Strategy';",
      "SELECT trade_id, symbol, entry_price, exit_price FROM trade;",
      "SELECT * FROM trade WHERE trade_id = 100;",
      "SELECT symbol, entry_price, exit_price FROM trade WHERE trade_date = '2022-01-01';",
      "SELECT * FROM performance;",
      "SELECT strategy_id, total_returns, max_drawdown FROM performance;",
      "SELECT * FROM performance WHERE performance_id = 50;",
      "SELECT strategy_id, total_trades FROM performance WHERE total_returns > 1000;",
      "SELECT strategy.strategy_name, trade.symbol, performance.total_trades FROM strategy JOIN trade ON strategy.id = trade.strategy_id JOIN performance ON strategy.id = performance.strategy_id;",
      "SELECT strategy.strategy_name, trade.symbol, performance.total_returns FROM strategy JOIN trade ON strategy.id = trade.strategy_id JOIN performance ON strategy.id = performance.strategy_id WHERE trade.entry_price > 50;",
      "SELECT strategy.strategy_name, MAX(performance.total_returns) AS max_returns FROM strategy JOIN performance ON strategy.id = performance.strategy_id GROUP BY strategy.id;",
      "SELECT strategy.strategy_name, AVG(performance.max_drawdown) AS avg_drawdown FROM strategy JOIN performance ON strategy.id = performance.strategy_id GROUP BY strategy.id;",
      "SELECT strategy.strategy_name, COUNT(trade.trade_id) AS total_trades FROM strategy JOIN trade ON strategy.id = trade.strategy_id GROUP BY strategy.id;",
      "SELECT strategy_id, SUM(total_returns) AS total_returns FROM performance GROUP BY strategy_id;",
      "SELECT strategy.strategy_name, performance.total_trades FROM strategy JOIN performance ON strategy.id = performance.strategy_id WHERE performance.total_trades > 50;",
      "SELECT strategy.strategy_name, AVG(performance.total_returns) AS avg_returns FROM strategy JOIN performance ON strategy.id = performance.strategy_id WHERE performance.total_trades > 50 GROUP BY strategy.id;",
      "SELECT DISTINCT strategy_id FROM trade;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users",
      "SELECT username, email FROM users WHERE user_id = 1",
      "SELECT user_id, username FROM users WHERE email = 'example@email.com'",
      "SELECT * FROM stocks",
      "SELECT stock_symbol, stock_name FROM stocks WHERE stock_price > 100",
      "SELECT * FROM orders",
      "SELECT user_id, stock_id, order_type FROM orders WHERE order_quantity > 50",
      "SELECT * FROM transactions",
      "SELECT order_id, transaction_time FROM transactions WHERE order_id = 1",
      "SELECT * FROM users LIMIT 5",
      "SELECT * FROM stocks LIMIT 10",
      "SELECT * FROM orders LIMIT 15",
      "SELECT * FROM transactions LIMIT 20",
      "SELECT users.username, stocks.stock_symbol FROM users JOIN orders ON users.user_id = orders.user_id JOIN stocks ON orders.stock_id = stocks.stock_id",
      "SELECT MAX(order_quantity) AS max_quantity FROM orders",
      "SELECT MIN(stock_price) AS min_price FROM stocks",
      "SELECT AVG(order_quantity) AS avg_quantity FROM orders",
      "SELECT COUNT(*) AS total_users FROM users",
      "SELECT SUM(order_price) AS total_price FROM orders"
    ]
  },
  {
    "statements": [
      "SELECT * FROM algo_trading.stocks;",
      "SELECT symbol, price FROM algo_trading.stocks WHERE volume > 1000;",
      "SELECT symbol, volume FROM algo_trading.stocks WHERE price BETWEEN 50 AND 100;",
      "SELECT * FROM algo_trading.portfolio;",
      "SELECT symbol, quantity FROM algo_trading.portfolio WHERE quantity > 0;",
      "SELECT * FROM algo_trading.trades;",
      "SELECT symbol, quantity, trade_type FROM algo_trading.trades WHERE trade_date = '2023-01-15';",
      "SELECT * FROM algo_trading.indicators;",
      "SELECT symbol, value FROM algo_trading.indicators WHERE calculation_date = '2023-01-15';",
      "SELECT * FROM algo_trading.strategies;",
      "SELECT strategy_id, strategy_name FROM algo_trading.strategies WHERE created_date > '2023-01-01';",
      "SELECT symbol, value FROM algo_trading.indicators WHERE indicator_type = 'RSI';",
      "SELECT symbol, value FROM algo_trading.indicators WHERE indicator_type = 'MA' AND value > 50;",
      "SELECT strategy_id, strategy_name FROM algo_trading.strategies WHERE description LIKE '%trend%';",
      "SELECT * FROM algo_trading.stocks WHERE symbol = 'AAPL';",
      "SELECT * FROM algo_trading.portfolio WHERE id = 1;",
      "SELECT * FROM algo_trading.trades WHERE trade_id = 1001;",
      "SELECT * FROM algo_trading.indicators WHERE indicator_id = 2001;",
      "SELECT * FROM algo_trading.strategies WHERE strategy_id = 1;",
      "SELECT * FROM algo_trading.stocks LIMIT 5;"
    ]
  }
]