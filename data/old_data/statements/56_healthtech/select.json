[
  {
    "statements": [
      "SELECT * FROM patients WHERE age > 30",
      "SELECT name, age FROM patients",
      "SELECT * FROM patients ORDER BY name ASC",
      "SELECT id, name, gender FROM patients WHERE medical_condition LIKE '%diabetes%'",
      "SELECT COUNT(*) FROM patients",
      "SELECT DISTINCT gender FROM patients",
      "SELECT name, medical_condition FROM patients WHERE age BETWEEN 20 AND 40",
      "SELECT * FROM patients WHERE gender = 'Male'",
      "SELECT id, age FROM patients WHERE age < 50",
      "SELECT * FROM patients WHERE name LIKE 'J%'",
      "SELECT name, age FROM patients WHERE gender = 'Female'",
      "SELECT id, medical_condition FROM patients WHERE age > 50",
      "SELECT * FROM patients WHERE age >= 18 AND age <= 25",
      "SELECT id, name, medical_condition FROM patients",
      "SELECT MAX(age) FROM patients",
      "SELECT * FROM patients WHERE medical_condition = 'Heart Disease'",
      "SELECT name, age FROM patients WHERE age > 60",
      "SELECT * FROM patients WHERE gender = 'Female'",
      "SELECT id, gender FROM patients WHERE medical_condition LIKE '%asthma%'",
      "SELECT AVG(age) FROM patients"
    ]
  },
  {
    "statements": [
      "SELECT * FROM patients",
      "SELECT id, name, age FROM patients",
      "SELECT * FROM appointments",
      "SELECT id, patient_id, doctor_id, appointment_date FROM appointments",
      "SELECT id, name, age, gender, city FROM patients",
      "SELECT name, city FROM patients",
      "SELECT id, doctor_id, appointment_date, status FROM appointments",
      "SELECT * FROM patients WHERE age > 50",
      "SELECT * FROM patients WHERE gender = 'Male'",
      "SELECT * FROM appointments WHERE status = 'Confirmed'",
      "SELECT id, patient_id, appointment_date FROM appointments WHERE appointment_date > NOW()",
      "SELECT * FROM patients ORDER BY name ASC",
      "SELECT id, name, age FROM patients WHERE city = 'New York'",
      "SELECT * FROM appointments WHERE doctor_id = 12345",
      "SELECT id, name, age, gender FROM patients WHERE age >= 18",
      "SELECT * FROM patients WHERE city LIKE 'Los%'",
      "SELECT name, age, city FROM patients ORDER BY age DESC",
      "SELECT id, doctor_id, status FROM appointments WHERE status NOT IN ('Cancelled', 'Rescheduled')",
      "SELECT * FROM appointments WHERE appointment_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT id, patient_id, appointment_date FROM appointments ORDER BY appointment_date DESC LIMIT 10"
    ]
  },
  {
    "statements": [
      "SELECT * FROM patients;",
      "SELECT patient_name, age FROM patients WHERE age > 50;",
      "SELECT patient_name, diagnosis FROM patients WHERE diagnosis = 'Cancer';",
      "SELECT * FROM doctors;",
      "SELECT doctor_name, specialization FROM doctors WHERE specialization = 'Cardiology';",
      "SELECT * FROM appointments;",
      "SELECT appointment_id, patient_id, doctor_id FROM appointments WHERE status = 'Scheduled';",
      "SELECT patient_name, doctor_name, appointment_date FROM patients p, doctors d, appointments a WHERE p.patient_id = a.patient_id AND d.doctor_id = a.doctor_id;",
      "SELECT doctor_name, schedule FROM doctors d, appointments a WHERE d.doctor_id = a.doctor_id AND appointment_date = '2022-09-30';",
      "SELECT appointment_id, appointment_date, status FROM appointments WHERE appointment_date BETWEEN '2022-09-01' AND '2022-09-30';",
      "SELECT patient_id, patient_name, age FROM patients ORDER BY age DESC;",
      "SELECT doctor_id, doctor_name, specialization FROM doctors ORDER BY doctor_name ASC;",
      "SELECT appointment_id, patient_id, doctor_id, appointment_date FROM appointments WHERE patient_id = 1001;",
      "SELECT doctor_id, doctor_name, schedule FROM doctors d, appointments a WHERE d.doctor_id = a.doctor_id AND a.status = 'Scheduled' AND a.appointment_date > CURRENT_DATE;",
      "SELECT COUNT(*) AS total_appointments FROM appointments;",
      "SELECT AVG(age) AS avg_age FROM patients;",
      "SELECT COUNT(*) AS total_doctors, specialization FROM doctors GROUP BY specialization;",
      "SELECT patient_id, patient_name, diagnosis FROM patients WHERE diagnosis IS NOT NULL;",
      "SELECT doctor_id, doctor_name, schedule FROM doctors WHERE schedule LIKE '%AM%';",
      "SELECT appointment_id, patient_id, doctor_id, appointment_date, status FROM appointments ORDER BY appointment_date ASC LIMIT 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM patient;",
      "SELECT patient_name, age FROM patient;",
      "SELECT patient_name, gender FROM patient;",
      "SELECT * FROM doctor;",
      "SELECT doctor_name, specialization FROM doctor;",
      "SELECT * FROM appointment;",
      "SELECT appointment_date, appointment_time FROM appointment;",
      "SELECT * FROM medical_record;",
      "SELECT diagnosis, treatment FROM medical_record;",
      "SELECT patient.patient_name, doctor.doctor_name FROM patient JOIN appointment ON patient.patient_id = appointment.patient_id JOIN doctor ON doctor.doctor_id = appointment.doctor_id;",
      "SELECT patient.patient_name, doctor.doctor_name, appointment.appointment_date FROM patient JOIN appointment ON patient.patient_id = appointment.patient_id JOIN doctor ON doctor.doctor_id = appointment.doctor_id;",
      "SELECT doctor.doctor_name, patient.age FROM doctor JOIN appointment ON doctor.doctor_id = appointment.doctor_id JOIN patient ON patient.patient_id = appointment.patient_id;",
      "SELECT patient.patient_name, appointment.appointment_date, medical_record.diagnosis FROM patient JOIN appointment ON patient.patient_id = appointment.patient_id JOIN medical_record ON medical_record.patient_id = patient.patient_id;",
      "SELECT COUNT(patient_id) AS total_patients FROM patient;",
      "SELECT SUM(age) AS total_age FROM patient;",
      "SELECT AVG(age) AS avg_age FROM patient;",
      "SELECT MAX(age) AS max_age FROM patient;",
      "SELECT MIN(age) AS min_age FROM patient;",
      "SELECT patient_name, MAX(age) AS max_age FROM patient;",
      "SELECT doctor_name, COUNT(appointment_id) AS total_appointments FROM doctor JOIN appointment ON doctor.doctor_id = appointment.doctor_id GROUP BY doctor_id;",
      "SELECT doctor_name, COUNT(appointment_id) AS total_appointments FROM doctor JOIN appointment ON doctor.doctor_id = appointment.doctor_id GROUP BY doctor_name HAVING COUNT(appointment_id) > 5;"
    ]
  }
]