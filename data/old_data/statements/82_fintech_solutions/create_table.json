[
  {
    "statements": [
      "CREATE TABLE fintech_solutions (id INT PRIMARY KEY, account_number INT, balance DECIMAL(10, 2), user_id INT, created_at TIMESTAMP);",
      "CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), created_at TIMESTAMP);",
      "CREATE TABLE transactions (id INT PRIMARY KEY, sender_id INT, receiver_id INT, amount DECIMAL(10, 2), created_at TIMESTAMP);"
    ]
  },
  {
    "statements": [
      "CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL);"
    ]
  },
  {
    "statements": [
      "CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))",
      "CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)"
    ]
  },
  {
    "statements": [
      "CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20);",
      "CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));",
      "CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));",
      "CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));"
    ]
  },
  {
    "statements": [
      "CREATE TABLE user_info (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, registration_date DATE)"
    ]
  }
]