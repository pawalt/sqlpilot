[
  {
    "statements": [
      "SELECT * FROM geolocation_data WHERE id = 1",
      "SELECT location_name FROM geolocation_data",
      "SELECT id, latitude, longitude FROM geolocation_data WHERE latitude > 40",
      "SELECT * FROM geolocation_data WHERE location_name LIKE '%New York%'",
      "SELECT COUNT(*) FROM geolocation_data",
      "SELECT * FROM geolocation_data ORDER BY location_name ASC",
      "SELECT AVG(latitude) FROM geolocation_data",
      "SELECT MAX(longitude) FROM geolocation_data",
      "SELECT MIN(latitude) FROM geolocation_data",
      "SELECT * FROM geolocation_data WHERE longitude < -80",
      "SELECT id, location_name FROM geolocation_data WHERE id BETWEEN 10 AND 20",
      "SELECT DISTINCT latitude FROM geolocation_data",
      "SELECT * FROM geolocation_data WHERE location_name = 'California'",
      "SELECT * FROM geolocation_data WHERE id IN (1, 3, 5)",
      "SELECT id, location_name FROM geolocation_data WHERE location_name IS NOT NULL",
      "SELECT * FROM geolocation_data LIMIT 5",
      "SELECT SUM(longitude) FROM geolocation_data",
      "SELECT * FROM geolocation_data WHERE latitude < 35",
      "SELECT id, location_name FROM geolocation_data WHERE id > 15",
      "SELECT * FROM geolocation_data WHERE location_name <> 'Texas'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM location;",
      "SELECT id, latitude, longitude FROM location WHERE id = 1;",
      "SELECT street, city, country FROM address WHERE city = 'New York';",
      "SELECT * FROM address WHERE country = 'USA';",
      "SELECT id, street FROM address WHERE city = 'London';",
      "SELECT id, latitude, longitude FROM location WHERE latitude > 40 AND longitude < -100;",
      "SELECT * FROM location ORDER BY id DESC;",
      "SELECT street, city, country FROM address ORDER BY country ASC, city DESC;",
      "SELECT AVG(latitude), MAX(longitude) FROM location;",
      "SELECT COUNT(*) FROM address;",
      "SELECT city, COUNT(id) FROM address GROUP BY city;",
      "SELECT MAX(latitude), MIN(longitude) FROM location;",
      "SELECT * FROM location INNER JOIN address ON location.id = address.id;",
      "SELECT street, city, country FROM address LEFT JOIN location ON address.id = location.id;",
      "SELECT id, street FROM address RIGHT JOIN location ON address.id = location.id;",
      "SELECT id, street, city, country FROM address JOIN location ON address.id = location.id WHERE city = 'Paris';",
      "SELECT id, street, city, country FROM address JOIN location ON address.id = location.id WHERE country = 'Canada';",
      "SELECT id, street, city, country FROM address JOIN location ON address.id = location.id ORDER BY city ASC;",
      "SELECT DISTINCT city FROM address;",
      "SELECT latitude, COUNT(id) FROM location GROUP BY latitude HAVING COUNT(id) > 1;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Locations",
      "SELECT location_name, latitude, longitude FROM Locations",
      "SELECT location_name FROM Locations WHERE location_id = 1",
      "SELECT * FROM Countries",
      "SELECT country_name FROM Countries",
      "SELECT * FROM Locations INNER JOIN Countries ON Locations.location_id = Countries.country_code",
      "SELECT location_name, country_name FROM Locations INNER JOIN Countries ON Locations.location_id = Countries.country_code",
      "SELECT location_name, latitude, longitude, country_name FROM Locations INNER JOIN Countries ON Locations.location_id = Countries.country_code",
      "SELECT * FROM Locations WHERE latitude > 0",
      "SELECT * FROM Locations WHERE longitude < 0",
      "SELECT * FROM Locations WHERE location_name LIKE 'A%'",
      "SELECT * FROM Countries WHERE country_name = 'USA'",
      "SELECT * FROM Locations WHERE latitude BETWEEN -90 AND 90",
      "SELECT * FROM Locations WHERE longitude BETWEEN -180 AND 180",
      "SELECT * FROM Locations WHERE location_name IN ('New York', 'Los Angeles', 'Chicago')",
      "SELECT * FROM Locations ORDER BY location_name ASC",
      "SELECT * FROM Locations ORDER BY latitude DESC",
      "SELECT * FROM Countries ORDER BY country_name ASC",
      "SELECT * FROM Countries ORDER BY country_code DESC"
    ]
  },
  {
    "statements": [
      "SELECT * FROM location_data",
      "SELECT location_id, city FROM location_data WHERE country = 'USA'",
      "SELECT user_id, location_id FROM user_location",
      "SELECT * FROM trip_data WHERE user_id = 1",
      "SELECT region_id, region_name FROM region_data",
      "SELECT * FROM location_data WHERE city = 'New York' AND country = 'USA'",
      "SELECT trip_id, user_id FROM trip_data WHERE start_location_id = 1 AND end_location_id = 2",
      "SELECT region_id, region_description FROM region_data WHERE region_name LIKE 'North%'",
      "SELECT user_location.user_id, location_data.city FROM user_location INNER JOIN location_data ON user_location.location_id = location_data.location_id",
      "SELECT trip_id, start_location_id, end_location_id FROM trip_data ORDER BY trip_id DESC",
      "SELECT region_id, region_name FROM region_data WHERE LENGTH(region_name) > 10",
      "SELECT * FROM location_data WHERE latitude > 40 AND longitude < -75",
      "SELECT COUNT(*) FROM trip_data",
      "SELECT MAX(trip_id) FROM trip_data",
      "SELECT AVG(latitude), AVG(longitude) FROM location_data",
      "SELECT user_id, COUNT(trip_id) AS total_trips FROM user_location INNER JOIN trip_data ON user_location.user_id = trip_data.user_id GROUP BY user_id ORDER BY total_trips DESC",
      "SELECT DISTINCT country FROM location_data",
      "SELECT * FROM trip_data WHERE start_location_id = end_location_id",
      "SELECT region_id, COUNT(region_name) AS num_regions FROM region_data GROUP BY region_id HAVING num_regions > 1",
      "SELECT SUM(trip_id) FROM trip_data"
    ]
  },
  {
    "statements": [
      "SELECT * FROM locations;",
      "SELECT name, latitude, longitude FROM locations;",
      "SELECT * FROM cities;",
      "SELECT name, country, population FROM cities;",
      "SELECT * FROM countries;",
      "SELECT name, continent, population FROM countries;",
      "SELECT * FROM regions;",
      "SELECT name, country_id FROM regions;",
      "SELECT * FROM landmarks;",
      "SELECT name, location_id FROM landmarks;",
      "SELECT locations.name, cities.name, countries.name, regions.name, landmarks.name FROM locations, cities, countries, regions, landmarks;",
      "SELECT locations.*, cities.*, countries.*, regions.*, landmarks.* FROM locations, cities, countries, regions, landmarks;",
      "SELECT locations.name AS location_name, cities.name AS city_name, countries.name AS country_name, regions.name AS region_name, landmarks.name AS landmark_name FROM locations, cities, countries, regions, landmarks;",
      "SELECT locations.id AS location_id, cities.id AS city_id, countries.id AS country_id, regions.id AS region_id, landmarks.id AS landmark_id FROM locations, cities, countries, regions, landmarks;",
      "SELECT * FROM locations WHERE id = 1;",
      "SELECT * FROM cities WHERE country = 'USA';",
      "SELECT name, latitude, longitude FROM locations WHERE id < 10;",
      "SELECT name, country, population FROM cities WHERE population > 1000000;",
      "SELECT name, continent, population FROM countries WHERE continent = 'Europe';"
    ]
  }
]