[
  {
    "statements": [
      "SELECT * FROM Customers WHERE id = 1",
      "SELECT name, email FROM Customers WHERE id = 2",
      "SELECT * FROM Customers WHERE name = 'John'",
      "SELECT * FROM Customers WHERE name LIKE 'A%'",
      "SELECT * FROM Customers WHERE email = 'example@email.com'",
      "SELECT * FROM Customers WHERE phone_number = '+1234567890'",
      "SELECT * FROM Customers WHERE address LIKE '%Street%'",
      "SELECT id, name FROM Customers WHERE id IN (3, 5, 7)",
      "SELECT * FROM Customers WHERE name = 'Alice' AND email = 'alice@example.com'",
      "SELECT * FROM Customers WHERE phone_number LIKE '%555%'",
      "SELECT * FROM Customers WHERE address IS NOT NULL",
      "SELECT id, email FROM Customers WHERE id = 10",
      "SELECT * FROM Customers WHERE name = 'Bob' OR name = 'Charlie'",
      "SELECT * FROM Customers WHERE name IN ('David', 'Eve')",
      "SELECT * FROM Customers WHERE address LIKE '%Apt%'",
      "SELECT id, phone_number FROM Customers WHERE id < 15",
      "SELECT id, name, email FROM Customers WHERE email LIKE '%@gmail.com'",
      "SELECT * FROM Customers WHERE id BETWEEN 5 AND 10",
      "SELECT * FROM Customers WHERE name = 'Frank' OR phone_number = '+9876543210'",
      "SELECT * FROM Customers WHERE address NOT LIKE '%Po Box%'"
    ]
  },
  {
    "statements": [
      "SELECT id, name, email, phone, address FROM customers",
      "SELECT * FROM customers",
      "SELECT order_id, customer_id, order_date, order_total FROM orders",
      "SELECT * FROM orders",
      "SELECT customers.name, orders.order_date FROM customers INNER JOIN orders ON customers.id = orders.customer_id",
      "SELECT customers.name, orders.order_total FROM customers LEFT JOIN orders ON customers.id = orders.customer_id",
      "SELECT customers.name, orders.order_date FROM customers RIGHT JOIN orders ON customers.customer_id = orders.customer_id",
      "SELECT customers.name, orders.order_total FROM customers INNER JOIN orders ON customers.id = orders.customer_id",
      "SELECT customers.name, orders.order_date FROM customers LEFT JOIN orders ON customers.id = orders.customer_id",
      "SELECT customers.name, orders.order_total FROM customers RIGHT JOIN orders ON customers.id = orders.customer_id",
      "SELECT customers.name, COUNT(orders.order_id) AS num_orders FROM customers LEFT JOIN orders ON customers.id = orders.customer_id GROUP BY customers.name",
      "SELECT customers.name, SUM(orders.order_total) AS total_spent FROM customers LEFT JOIN orders ON customers.id = orders.customer_id GROUP BY customers.name",
      "SELECT customers.name, AVG(orders.order_total) AS avg_order_total FROM customers LEFT JOIN orders ON customers.id = orders.customer_id GROUP BY customers.name",
      "SELECT customers.name, MAX(orders.order_total) AS max_order_total FROM customers LEFT JOIN orders ON customers.id = orders.customer_id GROUP BY customers.name",
      "SELECT customers.name, MIN(orders.order_total) AS min_order_total FROM customers LEFT JOIN orders ON customers.id = orders.customer_id GROUP BY customers.name",
      "SELECT customers.name, orders.order_total FROM customers JOIN orders ON customers.id = orders.customer_id WHERE orders.order_total > 100",
      "SELECT customers.name, orders.order_date FROM customers JOIN orders ON customers.id = orders.customer_id WHERE orders.order_date > '2022-01-01'",
      "SELECT customers.name, orders.order_total FROM customers JOIN orders ON customers.id = orders.customer_id WHERE customers.name LIKE 'A%'",
      "SELECT customers.name, orders.order_total FROM customers JOIN orders ON customers.id = orders.customer_id WHERE orders.order_total BETWEEN 50 AND 150"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, email FROM customers;",
      "SELECT customer_id, email, phone_number FROM customers WHERE customer_id = 1;",
      "SELECT * FROM orders;",
      "SELECT order_id, total_amount FROM orders WHERE total_amount > 100;",
      "SELECT order_id, order_date FROM orders WHERE order_date >= '2022-01-01';",
      "SELECT * FROM products;",
      "SELECT product_name, price FROM products;",
      "SELECT product_id, product_name FROM products WHERE price < 50;",
      "SELECT c.customer_id, c.customer_name, o.order_id, o.total_amount FROM customers c JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT o.order_id, p.product_name, p.price FROM orders o JOIN products p ON o.order_id = p.product_id;",
      "SELECT c.customer_name, o.order_date, p.product_name FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.order_id = p.product_id;",
      "SELECT c.customer_name, o.order_date, p.product_name FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.order_id = p.product_id WHERE c.customer_id = 1;",
      "SELECT c.customer_name, o.order_date, p.product_name FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.order_id = p.product_id WHERE p.price > 100;",
      "SELECT c.customer_id, c.customer_name, o.order_id, o.total_amount FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT c.customer_id, c.customer_name, o.order_id, o.total_amount FROM customers c RIGHT JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT c.customer_id, c.customer_name, o.order_id, o.total_amount FROM customers c FULL JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT c.customer_name, COALESCE(o.total_amount, 0) AS total_amount FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id;",
      "SELECT AVG(total_amount) AS avg_amount FROM orders;",
      "SELECT product_name, SUM(price) AS total_price FROM products GROUP BY product_name;",
      "SELECT customer_id, COUNT(order_id) AS total_orders FROM orders GROUP BY customer_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, email FROM customers WHERE address IS NULL;",
      "SELECT customer_id, customer_name, phone_number FROM customers WHERE email LIKE '%gmail.com';",
      "SELECT * FROM orders;",
      "SELECT order_id, order_date, total_amount FROM orders WHERE status='Pending';",
      "SELECT * FROM products;",
      "SELECT product_id, product_name, price FROM products WHERE price > 100;",
      "SELECT * FROM transactions;",
      "SELECT transaction_id, order_id, transaction_date FROM transactions WHERE payment_method='Credit Card';",
      "SELECT * FROM contacts;",
      "SELECT contact_id, customer_id, contact_name FROM contacts WHERE contact_email IS NOT NULL;",
      "SELECT customer_name, address FROM customers WHERE customer_id=100;",
      "SELECT order_id, order_date FROM orders WHERE customer_id=50;",
      "SELECT product_name, description FROM products WHERE price BETWEEN 50 AND 100;",
      "SELECT transaction_id, payment_method FROM transactions WHERE order_id=200;",
      "SELECT contact_name, contact_phone FROM contacts WHERE customer_id=10;",
      "SELECT * FROM customers WHERE address IS NOT NULL AND phone_number IS NOT NULL;",
      "SELECT order_id, total_amount FROM orders WHERE order_date >= '2022-01-01' AND order_date <= '2022-12-31';",
      "SELECT product_name, price FROM products WHERE description ILIKE '%organic%';",
      "SELECT transaction_id, transaction_date FROM transactions WHERE payment_method IN ('Cash', 'PayPal');"
    ]
  }
]