[
  {
    "statements": [
      "SELECT * FROM customers",
      "SELECT customer_name, email FROM customers",
      "SELECT customer_id, customer_name, phone_number FROM customers",
      "SELECT * FROM customers WHERE customer_id = 100",
      "SELECT * FROM customers WHERE email LIKE '%@domain.com'",
      "SELECT customer_name, phone_number FROM customers WHERE customer_id = 200",
      "SELECT customer_name, email, issue_description FROM customers WHERE customer_id >= 100",
      "SELECT * FROM customers ORDER BY customer_name ASC",
      "SELECT customer_name, phone_number FROM customers ORDER BY customer_name DESC",
      "SELECT COUNT(customer_id) AS total_customers FROM customers",
      "SELECT customer_name, phone_number FROM customers WHERE phone_number LIKE '123%'",
      "SELECT customer_name, email, phone_number FROM customers WHERE issue_description IS NOT NULL",
      "SELECT customer_name, phone_number FROM customers WHERE LENGTH(customer_name) > 10",
      "SELECT customer_name, email FROM customers WHERE customer_name LIKE '%A%'",
      "SELECT * FROM customers WHERE email IN ('email1@test.com', 'email2@test.com')",
      "SELECT customer_name, email, phone_number FROM customers WHERE customer_name = 'John Smith'",
      "SELECT MAX(customer_id) AS max_id FROM customers",
      "SELECT DISTINCT email FROM customers",
      "SELECT AVG(customer_id) AS avg_id FROM customers",
      "SELECT COUNT(DISTINCT phone_number) AS unique_phones FROM customers"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customer;",
      "SELECT name, email FROM Customer WHERE customer_id = 1;",
      "SELECT customer_id, name FROM Customer WHERE email = 'example@example.com';",
      "SELECT COUNT(*) FROM Customer;",
      "SELECT AVG(customer_id) FROM Customer;",
      "SELECT * FROM Ticket;",
      "SELECT ticket_id, issue_description FROM Ticket WHERE customer_id = 1;",
      "SELECT * FROM Ticket WHERE status = 'open';",
      "SELECT COUNT(*) FROM Ticket WHERE issue_description LIKE '%urgent%';",
      "SELECT MAX(customer_id) FROM Customer;",
      "SELECT MIN(ticket_id) FROM Ticket;",
      "SELECT customer_id, COUNT(*) FROM Ticket GROUP BY customer_id;",
      "SELECT customer_id, AVG(ticket_id) FROM Ticket GROUP BY customer_id;",
      "SELECT DISTINCT status FROM Ticket;",
      "SELECT * FROM Customer JOIN Ticket ON Customer.customer_id = Ticket.customer_id;",
      "SELECT * FROM Customer LEFT JOIN Ticket ON Customer.customer_id = Ticket.customer_id;",
      "SELECT * FROM Customer RIGHT JOIN Ticket ON Customer.customer_id = Ticket.customer_id;",
      "SELECT * FROM Customer INNER JOIN Ticket ON Customer.customer_id = Ticket.customer_id;",
      "SELECT * FROM Customer FULL JOIN Ticket ON Customer.customer_id = Ticket.customer_id;",
      "SELECT * FROM Customer CROSS JOIN Ticket;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_id, name, email FROM customers WHERE customer_id = 1;",
      "SELECT * FROM customers WHERE name LIKE 'A%';",
      "SELECT * FROM tickets;",
      "SELECT ticket_id, category, status FROM tickets WHERE ticket_id = 1;",
      "SELECT * FROM tickets WHERE status = 'open';",
      "SELECT * FROM interactions;",
      "SELECT interaction_id, message, interaction_type FROM interactions WHERE interaction_id = 1;",
      "SELECT * FROM interactions WHERE interaction_time > '2022-01-01 00:00:00';",
      "SELECT c.name, t.category, i.message FROM customers c JOIN tickets t ON c.customer_id = t.customer_id JOIN interactions i ON t.ticket_id = i.ticket_id;",
      "SELECT c.name, t.category, i.message FROM customers c INNER JOIN tickets t ON c.customer_id = t.customer_id INNER JOIN interactions i ON t.ticket_id = i.ticket_id WHERE i.interaction_type = 'reply';",
      "SELECT c.name, t.category, i.message FROM customers c LEFT JOIN tickets t ON c.customer_id = t.customer_id LEFT JOIN interactions i ON t.ticket_id = i.ticket_id;",
      "SELECT c.name, t.category, i.message FROM customers c RIGHT JOIN tickets t ON c.customer_id = t.customer_id RIGHT JOIN interactions i ON t.ticket_id = i.ticket_id WHERE c.name LIKE 'J%';",
      "SELECT c.name, COUNT(t.ticket_id) AS total_tickets FROM customers c JOIN tickets t ON c.customer_id = t.customer_id GROUP BY c.name;",
      "SELECT t.category, COUNT(i.interaction_id) AS total_interactions FROM tickets t JOIN interactions i ON t.ticket_id = i.ticket_id GROUP BY t.category;",
      "SELECT c.name, AVG(DATEDIFF(i.interaction_time, t.created_at)) AS avg_response_time FROM customers c JOIN tickets t ON c.customer_id = t.customer_id JOIN interactions i ON t.ticket_id = i.ticket_id GROUP BY c.name;",
      "SELECT c.name, MAX(DATEDIFF(t.closed_at, t.created_at)) AS max_closure_time FROM customers c JOIN tickets t ON c.customer_id = t.customer_id GROUP BY c.name;",
      "SELECT c.name, COUNT(i.interaction_id) AS total_interactions FROM customers c JOIN tickets t ON c.customer_id = t.customer_id JOIN interactions i ON t.ticket_id = i.ticket_id WHERE t.status = 'open' GROUP BY c.name;",
      "SELECT t.category, MIN(DATEDIFF(NOW(), t.created_at)) AS min_age FROM tickets t GROUP BY t.category;",
      "SELECT c.name, t.category, AVG(DATEDIFF(i.interaction_time, t.created_at)) AS avg_response_time FROM customers c JOIN tickets t ON c.customer_id = t.customer_id JOIN interactions i ON t.ticket_id = i.ticket_id GROUP BY c.name, t.category;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT name, email FROM customers WHERE customer_id = 1;",
      "SELECT * FROM tickets WHERE status = 'Open';",
      "SELECT ticket_id, issue_description FROM tickets WHERE created_at > '2022-01-01';",
      "SELECT * FROM agents;",
      "SELECT name, email FROM agents WHERE agent_id = 1;",
      "SELECT * FROM assignments;",
      "SELECT agent_id, ticket_id FROM assignments WHERE assignment_id = 1;",
      "SELECT name, phone_number FROM customers WHERE email LIKE '%example.com%';",
      "SELECT * FROM tickets WHERE status = 'Closed' AND issue_description LIKE '%urgent%';",
      "SELECT * FROM customers WHERE customer_id IN (1, 2, 3);",
      "SELECT * FROM tickets WHERE created_at BETWEEN '2022-01-01' AND '2022-02-01';",
      "SELECT * FROM agents WHERE name LIKE 'A%';",
      "SELECT * FROM assignments WHERE assigned_at < NOW();",
      "SELECT name, email FROM agents WHERE agent_id IN (1, 2, 3);",
      "SELECT * FROM customers WHERE phone_number IS NULL;",
      "SELECT agent_id, COUNT(ticket_id) AS total_tickets FROM assignments GROUP BY agent_id;",
      "SELECT MAX(created_at) AS latest_ticket_created_at FROM tickets;",
      "SELECT DISTINCT status FROM tickets;",
      "SELECT * FROM tickets WHERE customer_id = 1;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, customer_email FROM customers WHERE customer_id = 1;",
      "SELECT * FROM tickets;",
      "SELECT ticket_subject, ticket_status FROM tickets WHERE customer_id = 1;",
      "SELECT * FROM agents;",
      "SELECT agent_name, agent_email FROM agents WHERE agent_id = 1;",
      "SELECT * FROM departments;",
      "SELECT department_name FROM departments WHERE department_id = 1;",
      "SELECT * FROM interactions;",
      "SELECT interaction_text FROM interactions WHERE ticket_id = 1;",
      "SELECT customer_name, interaction_text FROM customers c JOIN interactions i ON c.customer_id = i.ticket_id;",
      "SELECT agent_name, interaction_text FROM agents a JOIN interactions i ON a.agent_id = i.agent_id;",
      "SELECT t.ticket_subject, i.interaction_text FROM tickets t JOIN interactions i ON t.ticket_id = i.ticket_id;",
      "SELECT c.customer_name, t.ticket_subject, i.interaction_text FROM customers c JOIN tickets t ON c.customer_id = t.customer_id JOIN interactions i ON t.ticket_id = i.ticket_id;",
      "SELECT c.customer_name AS Customer, a.agent_name AS Agent, t.ticket_subject AS Subject, i.interaction_text AS Interaction FROM customers c JOIN tickets t ON c.customer_id = t.customer_id JOIN agents a ON t.ticket_id = a.agent_id JOIN interactions i ON t.ticket_id = i.ticket_id;",
      "SELECT c.customer_name, COUNT(i.interaction_id) AS Num_Interactions FROM customers c JOIN tickets t ON c.customer_id = t.customer_id JOIN interactions i ON t.ticket_id = i.ticket_id GROUP BY c.customer_name;",
      "SELECT d.department_name, COUNT(a.agent_id) AS Num_Agents FROM departments d LEFT JOIN agents a ON d.department_id = a.agent_id GROUP BY d.department_name;",
      "SELECT c.customer_name, MAX(i.interaction_timestamp) AS Last_Interaction FROM customers c JOIN tickets t ON c.customer_id = t.customer_id JOIN interactions i ON t.ticket_id = i.ticket_id GROUP BY c.customer_name;",
      "SELECT a.agent_name, MIN(i.interaction_timestamp) AS First_Interaction FROM agents a JOIN interactions i ON a.agent_id = i.agent_id GROUP BY a.agent_name;",
      "SELECT t.ticket_subject, AVG(i.interaction_timestamp) AS Avg_Time_Between_Interactions FROM tickets t JOIN interactions i ON t.ticket_id = i.ticket_id GROUP BY t.ticket_subject;"
    ]
  }
]