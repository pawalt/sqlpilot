[
  {
    "statements": [
      "SELECT * FROM shipment WHERE shipment_id = 1",
      "SELECT supplier_id, product_id, quantity FROM shipment WHERE supplier_id = 5",
      "SELECT shipment_id, supplier_id, shipment_date FROM shipment WHERE shipment_date > '2021-01-01'",
      "SELECT * FROM shipment ORDER BY shipment_date DESC",
      "SELECT COUNT(*) FROM shipment",
      "SELECT MAX(quantity) FROM shipment",
      "SELECT AVG(quantity) FROM shipment WHERE supplier_id = 3",
      "SELECT shipment_id, supplier_id, product_id, quantity FROM shipment WHERE supplier_id = 2 AND product_id = 10",
      "SELECT * FROM shipment WHERE shipment_date BETWEEN '2021-01-01' AND '2021-06-30'",
      "SELECT shipment_id, supplier_id, product_id, quantity, shipment_date FROM shipment WHERE supplier_id = 4 OR supplier_id = 6",
      "SELECT supplier_id, SUM(quantity) FROM shipment GROUP BY supplier_id",
      "SELECT DISTINCT supplier_id FROM shipment",
      "SELECT * FROM shipment WHERE supplier_id IN (1, 3, 5)",
      "SELECT shipment_id, supplier_id, quantity FROM shipment WHERE quantity > 100",
      "SELECT * FROM shipment WHERE product_id IS NULL",
      "SELECT supplier_id, AVG(quantity) FROM shipment GROUP BY supplier_id HAVING AVG(quantity) > 50",
      "SELECT shipment_id, supplier_id, product_id, quantity FROM shipment WHERE supplier_id = 1 LIMIT 5",
      "SELECT * FROM shipment WHERE shipment_id = 10 OR shipment_id = 15",
      "SELECT shipment_id, supplier_id, product_id, quantity FROM shipment WHERE shipment_date = '2021-12-05'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM warehouses;",
      "SELECT name, location FROM warehouses;",
      "SELECT id, name, price FROM products;",
      "SELECT * FROM products WHERE price > 100;",
      "SELECT name, quantity FROM products WHERE quantity < 10;",
      "SELECT name, price FROM products WHERE price < 50 OR price > 200;",
      "SELECT * FROM warehouses WHERE location LIKE '%New York%';",
      "SELECT * FROM products ORDER BY price DESC;",
      "SELECT * FROM products ORDER BY quantity ASC;",
      "SELECT name, price FROM products WHERE price BETWEEN 50 AND 100;",
      "SELECT name, quantity FROM products WHERE quantity IN (5, 10, 15);",
      "SELECT SUM(quantity) FROM products;",
      "SELECT AVG(price) FROM products;",
      "SELECT warehouse_id, COUNT(*) FROM products GROUP BY warehouse_id;",
      "SELECT name, SUM(quantity) FROM products GROUP BY name;",
      "SELECT id, name, location FROM warehouses INNER JOIN products ON warehouses.id = products.warehouse_id;",
      "SELECT p.name AS product_name, w.name AS warehouse_name FROM products p INNER JOIN warehouses w ON p.warehouse_id = w.id;",
      "SELECT name, AVG(price) AS avg_price FROM products GROUP BY name HAVING AVG(price) > 50;",
      "SELECT name, MAX(price) AS max_price FROM products GROUP BY name HAVING MAX(price) < 200;",
      "SELECT * FROM products WHERE name LIKE '%Tablet%' OR name LIKE '%Phone%';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM products",
      "SELECT name, price FROM products",
      "SELECT * FROM orders",
      "SELECT quantity, order_date FROM orders",
      "SELECT * FROM suppliers",
      "SELECT name, address, phone_number FROM suppliers",
      "SELECT p.name, p.price, o.quantity, o.order_date FROM products p INNER JOIN orders o ON p.id = o.product_id",
      "SELECT o.order_id, p.name, o.quantity, o.order_date FROM products p INNER JOIN orders o ON p.product_id = p.id",
      "SELECT s.name, s.address, s.phone_number, p.name, o.quantity, o.order_date FROM suppliers s INNER JOIN products p ON s.supplier_id = p.id INNER JOIN orders o ON p.id = o.product_id",
      "SELECT p.name, p.price, o.quantity, o.order_date, s.name AS supplier_name FROM products p INNER JOIN orders o ON p.id = o.product_id INNER JOIN suppliers s ON s.supplier_id = p.id ORDER BY o.order_date DESC",
      "SELECT p.name, SUM(o.quantity) AS total_quantity FROM products p INNER JOIN orders o ON p.id = o.product_id GROUP BY p.name",
      "SELECT s.name AS supplier_name, COUNT(*) AS total_orders FROM suppliers s JOIN products p ON s.supplier_id = p.id JOIN orders o ON p.id = o.product_id GROUP BY s.name",
      "SELECT s.name AS supplier_name, COUNT(*) AS total_orders FROM suppliers s LEFT JOIN products p ON s.supplier_id = p.id LEFT JOIN orders o ON p.id = o.product_id GROUP BY s.name",
      "SELECT p.name, AVG(o.quantity) AS avg_quantity FROM products p INNER JOIN orders o ON p.id = o.product_id GROUP BY p.name",
      "SELECT s.name AS supplier_name, MAX(p.price) AS max_price FROM suppliers s JOIN products p ON s.supplier_id = p.id GROUP BY s.name",
      "SELECT p.name, MIN(p.price) AS min_price FROM products p GROUP BY p.name",
      "SELECT p.name, COUNT(*) FILTER (WHERE o.quantity > 5) AS orders_with_quantity_above_5 FROM products p JOIN orders o ON p.id = o.product_id GROUP BY p.name",
      "SELECT s.name AS supplier_name, SUM(o.quantity) FILTER (WHERE o.order_date >= '2022-01-01' AND o.order_date < '2023-01-01') AS total_quantity_2022 FROM suppliers s JOIN products p ON s.supplier_id = p.id JOIN orders o ON p.id = o.product_id GROUP BY s.name",
      "SELECT s.name AS supplier_name, AVG(p.price) AS avg_price FROM suppliers s JOIN products p ON s.supplier_id = p.id GROUP BY s.name HAVING AVG(p.price) > 50",
      "SELECT p.name, COUNT(*) AS total_orders FROM products p JOIN orders o ON p.id = o.product_id GROUP BY p.name HAVING COUNT(*) > 10",
      "SELECT s.name AS supplier_name, AVG(o.quantity) AS avg_quantity FROM suppliers s JOIN products p ON s.supplier_id = p.id JOIN orders o ON p.id = o.product_id GROUP BY s.name HAVING AVG(o.quantity) < 50"
    ]
  },
  {
    "statements": [
      "SELECT * FROM products;",
      "SELECT name, price FROM products;",
      "SELECT * FROM suppliers;",
      "SELECT name, location FROM suppliers;",
      "SELECT * FROM orders;",
      "SELECT product_id, supplier_id, quantity FROM orders;",
      "SELECT * FROM shipments;",
      "SELECT order_id, supplier_id, shipment_date FROM shipments;",
      "SELECT p.name AS product_name, o.quantity AS order_quantity FROM products p JOIN orders o ON p.id = o.product_id;",
      "SELECT s.name AS supplier_name, o.quantity AS order_quantity FROM suppliers s JOIN orders o ON s.id = o.supplier_id;",
      "SELECT p.name AS product_name, s.location AS supplier_location, o.quantity AS order_quantity FROM products p JOIN suppliers s ON p.id = s.id JOIN orders o ON p.id = o.product_id AND s.id = o.supplier_id;",
      "SELECT p.name AS product_name, s.location AS supplier_location, o.quantity AS order_quantity, s.name AS supplier_name FROM products p JOIN suppliers s ON p.id = s.id JOIN orders o ON p.id = o.product_id AND s.id = o.supplier_id;",
      "SELECT p.name AS product_name, s.location AS supplier_location, o.quantity AS order_quantity, s.name AS supplier_name, sh.shipment_date AS shipment_date FROM products p JOIN suppliers s ON p.id = s.id JOIN orders o ON p.id = o.product_id AND s.id = o.supplier_id JOIN shipments sh ON o.order_id = sh.order_id AND o.supplier_id = sh.supplier_id;",
      "SELECT p.name AS product_name, s.location AS supplier_location, o.quantity AS order_quantity, s.name AS supplier_name, sh.shipment_date AS shipment_date FROM products p JOIN suppliers s ON p.id = s.id JOIN orders o ON p.id = o.product_id AND s.id = o.supplier_id JOIN shipments sh ON o.order_id = sh.order_id AND o.supplier_id = sh.supplier_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Products;",
      "SELECT product_name, quantity FROM Products;",
      "SELECT product_name, price FROM Products WHERE quantity > 0;",
      "SELECT supplier_name, location FROM Suppliers;",
      "SELECT * FROM Orders INNER JOIN Products ON Orders.product_id = Products.product_id;",
      "SELECT * FROM Orders INNER JOIN Customers ON Orders.customer_id = Customers.customer_id;",
      "SELECT supplier_name, product_name, quantity FROM Suppliers INNER JOIN Products ON Suppliers.supplier_id = Products.product_id;",
      "SELECT customer_name, location, order_date FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id;",
      "SELECT shipment_id, shipment_date, delivery_status FROM Shipments WHERE shipment_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT customer_name, order_date, delivery_status FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id INNER JOIN Shipments ON Orders.order_id = Shipments.order_id;",
      "SELECT product_name AS Product, price AS Price FROM Products;",
      "SELECT supplier_name AS Supplier, location AS Location FROM Suppliers;",
      "SELECT customer_name AS Customer, location AS Location FROM Customers;",
      "SELECT order_id AS Order_ID, quantity AS Quantity FROM Orders;",
      "SELECT shipment_id AS Shipment_ID, shipment_date AS Shipment_Date FROM Shipments;",
      "SELECT * FROM Products WHERE product_id = 1;",
      "SELECT * FROM Orders WHERE order_date = '2022-10-10';",
      "SELECT supplier_name, product_name, shipment_date FROM Suppliers INNER JOIN Products ON Suppliers.supplier_id = Products.product_id INNER JOIN Orders ON Products.product_id = Orders.product_id INNER JOIN Shipments ON Orders.order_id = Shipments.order_id;",
      "SELECT COUNT(*) AS Total_Products FROM Products;",
      "SELECT MAX(price) AS Max_Price FROM Products;"
    ]
  }
]