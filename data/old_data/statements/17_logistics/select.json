[
  {
    "statements": [
      "SELECT * FROM logistics.shipments;",
      "SELECT shipment_id, shipment_date FROM logistics.shipments;",
      "SELECT origin_address, destination_address FROM logistics.shipments;",
      "SELECT * FROM logistics.shipments WHERE shipment_date = '2022-01-01';",
      "SELECT * FROM logistics.shipments WHERE total_weight > 100;",
      "SELECT shipment_id, total_weight FROM logistics.shipments WHERE origin_address = 'New York';",
      "SELECT * FROM logistics.shipments ORDER BY shipment_date ASC;",
      "SELECT * FROM logistics.shipments ORDER BY total_weight DESC;",
      "SELECT COUNT(*) FROM logistics.shipments;",
      "SELECT AVG(total_weight) FROM logistics.shipments;",
      "SELECT MAX(total_weight) FROM logistics.shipments;",
      "SELECT MIN(total_weight) FROM logistics.shipments;",
      "SELECT * FROM logistics.shipments LIMIT 10;",
      "SELECT * FROM logistics.shipments WHERE shipment_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM logistics.shipments WHERE origin_address LIKE '%Street%';",
      "SELECT * FROM logistics.shipments WHERE destination_address IN ('Los Angeles', 'Chicago');",
      "SELECT * FROM logistics.shipments WHERE total_weight BETWEEN 50 AND 100;",
      "SELECT * FROM logistics.shipments WHERE shipment_date > '2022-01-01' AND shipment_date < '2022-02-01';",
      "SELECT COUNT(*) FROM logistics.shipments GROUP BY shipment_date;",
      "SELECT AVG(total_weight) FROM logistics.shipments GROUP BY origin_address;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM shipments",
      "SELECT shipment_id, shipment_date FROM shipments",
      "SELECT product_name, product_price FROM products",
      "SELECT * FROM shipments WHERE shipment_status='Delivered'",
      "SELECT * FROM products WHERE product_price > 100",
      "SELECT shipment_id, shipment_location FROM shipments",
      "SELECT product_name, product_price, product_description FROM products",
      "SELECT shipment_id, shipment_date, shipment_location FROM shipments",
      "SELECT product_name, product_description FROM products WHERE product_price < 50",
      "SELECT * FROM shipments WHERE shipment_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT * FROM products",
      "SELECT shipment_id, shipment_location FROM shipments WHERE shipment_status='In Transit'",
      "SELECT product_name, product_price FROM products WHERE product_price BETWEEN 50 AND 100",
      "SELECT shipment_id, shipment_status FROM shipments",
      "SELECT product_name, product_description FROM products WHERE product_price = 75",
      "SELECT * FROM shipments WHERE shipment_location='New York'",
      "SELECT shipment_id, shipment_date, shipment_status FROM shipments WHERE shipment_date < '2022-06-01'",
      "SELECT product_name, product_price FROM products ORDER BY product_price DESC",
      "SELECT shipment_id, shipment_date, shipment_location, shipment_status FROM shipments",
      "SELECT * FROM shipments WHERE shipment_status='Delayed'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM shipments;",
      "SELECT shipment_id, recipient_name, address FROM shipments;",
      "SELECT * FROM products;",
      "SELECT product_id, product_name, price FROM products;",
      "SELECT * FROM warehouses;",
      "SELECT warehouse_id, location, manager_name FROM warehouses;",
      "SELECT shipment_id, shipment_date, recipient_name, address, status FROM shipments;",
      "SELECT product_id, product_name, description, price FROM products;",
      "SELECT warehouse_id, location, capacity, manager_name FROM warehouses;",
      "SELECT shipment_id, recipient_name, status FROM shipments;",
      "SELECT product_id, product_name, price FROM products WHERE price > 100;",
      "SELECT * FROM shipments WHERE status = 'Delivered';",
      "SELECT * FROM products WHERE product_name LIKE '%Chair%';",
      "SELECT * FROM warehouses WHERE capacity > 500;",
      "SELECT shipment_id, shipment_date, recipient_name, status FROM shipments WHERE status = 'Pending';",
      "SELECT product_id, product_name, description FROM products WHERE description IS NOT NULL;",
      "SELECT warehouse_id, location, manager_name FROM warehouses WHERE location LIKE '%New York%';",
      "SELECT shipment_id, recipient_name, status FROM shipments WHERE shipment_date > '2021-01-01';",
      "SELECT product_id, product_name, price FROM products WHERE price BETWEEN 50 AND 100;",
      "SELECT * FROM warehouses WHERE capacity < 200;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM warehouse;",
      "SELECT warehouse_id, location FROM warehouse;",
      "SELECT warehouse_id, location, capacity FROM warehouse;",
      "SELECT * FROM employee;",
      "SELECT employee_id, name, role FROM employee;",
      "SELECT * FROM shipment;",
      "SELECT shipment_id, delivery_date FROM shipment;",
      "SELECT shipment_id, warehouse_id, employee_id FROM shipment;",
      "SELECT * FROM product;",
      "SELECT product_id, name, price FROM product;",
      "SELECT product_id, price FROM product;",
      "SELECT product_id, name FROM product;",
      "SELECT p.product_id, p.name, p.price, s.delivery_date FROM product p JOIN shipment s ON p.shipment_id = s.shipment_id;",
      "SELECT e.employee_id, e.name, e.role, w.location FROM employee e JOIN warehouse w ON e.warehouse_id = w.warehouse_id;",
      "SELECT p.product_id, p.name, p.price, s.delivery_date, e.name AS employee_name FROM product p JOIN shipment s ON p.shipment_id = s.shipment_id JOIN employee e ON s.employee_id = e.employee_id;",
      "SELECT w.location, COUNT(product_id) AS total_products FROM warehouse w LEFT JOIN product ON w.warehouse_id = product.shipment_id GROUP BY w.location;",
      "SELECT e.name AS employee_name, COUNT(product_id) AS total_products FROM employee e LEFT JOIN shipment s ON e.employee_id = s.employee_id LEFT JOIN product p ON s.shipment_id = p.shipment_id GROUP BY e.name;",
      "SELECT w.location, AVG(price) AS average_price FROM warehouse w JOIN shipment s ON w.warehouse_id = s.warehouse_id JOIN product p ON s.shipment_id = p.shipment_id GROUP BY w.location;",
      "SELECT p.name AS product_name, SUM(price) AS total_price FROM product p GROUP BY p.name HAVING total_price > 1000;",
      "SELECT e.name AS employee_name, SUM(price) AS total_price FROM employee e JOIN shipment s ON e.employee_id = s.employee_id JOIN product p ON s.shipment_id = p.shipment_id GROUP BY e.name HAVING total_price > 5000;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customers;",
      "SELECT customer_name, customer_email FROM Customers;",
      "SELECT customer_name, customer_phone FROM Customers;",
      "SELECT * FROM Orders;",
      "SELECT order_id, order_date FROM Orders;",
      "SELECT * FROM Products;",
      "SELECT product_name, product_price FROM Products;",
      "SELECT * FROM Warehouses;",
      "SELECT warehouse_location, warehouse_capacity FROM Warehouses;",
      "SELECT * FROM Shipments;",
      "SELECT shipment_id, shipment_date FROM Shipments;",
      "SELECT Customers.customer_name, Orders.order_date, Products.product_name, Warehouses.warehouse_location, Shipments.shipment_date FROM Customers, Orders, Products, Warehouses, Shipments WHERE Customers.customer_id = Orders.customer_id AND Orders.order_id = Shipments.order_id AND Shipments.product_id = Products.product_id AND Shipments.warehouse_id = Warehouses.warehouse_id;",
      "SELECT * FROM Customers WHERE customer_id = 1;",
      "SELECT * FROM Orders WHERE order_status = 'Shipped';",
      "SELECT * FROM Products WHERE product_price > 50.00;",
      "SELECT * FROM Warehouses WHERE warehouse_capacity > 100;",
      "SELECT * FROM Shipments WHERE shipment_date BETWEEN '2022-01-01' AND '2022-12-31';",
      "SELECT Customers.customer_name, Orders.order_date, Products.product_name, Warehouses.warehouse_location, Shipments.shipment_date FROM Customers, Orders, Products, Warehouses, Shipments WHERE Customers.customer_id = 1 AND Customers.customer_id = Orders.customer_id AND Orders.order_id = Shipments.order_id AND Shipments.product_id = Products.product_id AND Shipments.warehouse_id = Warehouses.warehouse_id;",
      "SELECT Customers.customer_name, COUNT(Orders.order_id) AS total_orders FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_name HAVING total_orders > 1;"
    ]
  }
]