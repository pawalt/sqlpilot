[
  {
    "statements": [
      "CREATE TABLE crops (id INT PRIMARY KEY, name STRING, type STRING, planting_date DATE, harvest_date DATE);",
      "CREATE TABLE customers (id INT PRIMARY KEY, name STRING, email STRING, phone_number STRING, address STRING);",
      "CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, order_date DATE, total_price FLOAT, status STRING);"
    ]
  },
  {
    "statements": [
      "CREATE TABLE field (field_id INT PRIMARY KEY, field_name VARCHAR, crop_type VARCHAR, field_size DECIMAL)",
      "CREATE TABLE customer (customer_id INT PRIMARY KEY, first_name VARCHAR, last_name VARCHAR, email VARCHAR)",
      "CREATE TABLE product (product_id INT PRIMARY KEY, product_name VARCHAR, price DECIMAL, category VARCHAR)"
    ]
  },
  {
    "statements": [
      "CREATE TABLE crop (crop_id INT PRIMARY KEY, crop_name VARCHAR(255) NOT NULL, crop_type VARCHAR(255) NOT NULL)",
      "CREATE TABLE farmer (farmer_id INT PRIMARY KEY, farmer_name VARCHAR(255) NOT NULL, farmer_location VARCHAR(255) NOT NULL)",
      "CREATE TABLE harvest (harvest_id INT PRIMARY KEY, harvest_date DATE NOT NULL, crop_id INT NOT NULL, farmer_id INT NOT NULL)"
    ]
  },
  {
    "statements": [
      "CREATE TABLE Crop (crop_id INT PRIMARY KEY, crop_name VARCHAR(255), crop_type VARCHAR(255), plant_date DATE, harvest_date DATE)",
      "CREATE TABLE Field (field_id INT PRIMARY KEY, field_name VARCHAR(255), area FLOAT, soil_type VARCHAR(255), crop_id INT, FOREIGN KEY (crop_id) REFERENCES Crop(crop_id)",
      "CREATE TABLE WeatherSensor (sensor_id INT PRIMARY KEY, location VARCHAR(255), sensor_type VARCHAR(255), field_id INT, FOREIGN KEY (field_id) REFERENCES Field(field_id)"
    ]
  }
]