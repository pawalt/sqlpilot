[
  {
    "statements": [
      "SELECT * FROM education_data;",
      "SELECT student_name, age FROM education_data;",
      "SELECT * FROM education_data WHERE age > 18;",
      "SELECT student_name, grade FROM education_data WHERE grade = 'A';",
      "SELECT COUNT(*) FROM education_data;",
      "SELECT AVG(age) FROM education_data;",
      "SELECT MAX(age) FROM education_data;",
      "SELECT MIN(age) FROM education_data;",
      "SELECT DISTINCT grade FROM education_data;",
      "SELECT * FROM education_data ORDER BY age DESC;",
      "SELECT * FROM education_data ORDER BY grade ASC;",
      "SELECT * FROM education_data WHERE age BETWEEN 18 AND 25;",
      "SELECT student_name, grade FROM education_data WHERE age > 20;",
      "SELECT * FROM education_data WHERE grade IN ('A', 'B');",
      "SELECT student_name, age FROM education_data WHERE age < 18 OR grade = 'C';",
      "SELECT * FROM education_data WHERE student_name LIKE 'John%';",
      "SELECT * FROM education_data WHERE student_name = 'Alice' AND grade = 'A';",
      "SELECT * FROM education_data WHERE student_name IS NOT NULL;",
      "SELECT * FROM education_data WHERE grade LIKE '_A%';",
      "SELECT * FROM education_data WHERE age % 2 = 0;",
      "SELECT * FROM education_data WHERE LENGTH(student_name) > 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_id, student_name FROM students WHERE grade_level = 10;",
      "SELECT course_name, credit_hours FROM courses;",
      "SELECT student_name, course_name FROM students JOIN courses ON students.student_id = courses.teacher_id;",
      "SELECT student_name, course_name FROM students JOIN courses ON students.student_id = courses.teacher_id WHERE grade_level > 10;",
      "SELECT * FROM students WHERE student_id = 1;",
      "SELECT * FROM courses WHERE credit_hours >= 3;",
      "SELECT count(*) FROM students;",
      "SELECT sum(credit_hours) FROM courses;",
      "SELECT student_name, course_name, credit_hours FROM students JOIN courses ON students.student_id = courses.teacher_id ORDER BY student_name;",
      "SELECT student_name, count(course_id) as course_count FROM students JOIN courses ON students.student_id = courses.teacher_id GROUP BY student_name;",
      "SELECT student_name, course_name, credit_hours FROM students JOIN courses ON students.student_id = courses.teacher_id LIMIT 5;",
      "SELECT student_name, course_name, credit_hours FROM students JOIN courses ON students.student_id = courses.teacher_id WHERE student_name LIKE 'A%';",
      "SELECT distinct grade_level FROM students;",
      "SELECT student_name, course_name, credit_hours FROM students LEFT JOIN courses ON students.student_id = courses.teacher_id;",
      "SELECT student_id, student_name, course_name, credit_hours, teacher_id FROM students LEFT JOIN courses ON students.student_id = courses.teacher_id WHERE course_name IS NULL;",
      "SELECT student_name, course_name, credit_hours FROM students INNER JOIN courses ON students.student_id = courses.teacher_id WHERE student_id IN (1, 2, 3);",
      "SELECT student_name, course_name, credit_hours FROM students INNER JOIN courses ON students.student_id = courses.teacher_id WHERE grade_level BETWEEN 9 AND 12;",
      "SELECT count(*) FROM students UNION SELECT count(*) FROM courses;",
      "SELECT student_name, course_name, credit_hours FROM students JOIN courses ON students.student_id = courses.teacher_id ORDER BY credit_hours DESC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Courses;",
      "SELECT course_id, course_name FROM Courses;",
      "SELECT * FROM Students;",
      "SELECT student_id, student_name FROM Students;",
      "SELECT * FROM Enrollments;",
      "SELECT enrollment_id, student_id, course_id FROM Enrollments;",
      "SELECT Courses.course_name, Courses.instructor_name FROM Courses;",
      "SELECT Students.student_name, Courses.course_name FROM Students JOIN Courses ON Students.course_id = Courses.course_id;",
      "SELECT Students.student_name, Courses.course_name FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id;",
      "SELECT Courses.course_name, COUNT(Enrollments.enrollment_id) AS num_students\nFROM Courses\nLEFT JOIN Enrollments ON Courses.course_id = Enrollments.course_id\nGROUP BY Courses.course_id;",
      "SELECT Courses.course_name, AVG(Enrollments.enrollment_id) AS avg_enrollments\nFROM Courses\nLEFT JOIN Enrollments ON Courses.course_id = Enrollments.course_id\nGROUP BY Courses.course_id;",
      "SELECT Students.student_name, COUNT(Enrollments.enrollment_id) AS num_courses\nFROM Students\nLEFT JOIN Enrollments ON Students.student_id = Enrollments.student_id\nGROUP BY Students.student_id;",
      "SELECT Courses.course_name, MAX(Enrollments.enrollment_id) AS max_enrollment\nFROM Courses\nLEFT JOIN Enrollments ON Courses.course_id = Enrollments.course_id\nGROUP BY Courses.course_id;",
      "SELECT student_name, course_name FROM Students, Courses, Enrollments\nWHERE Students.student_id = Enrollments.student_id\nAND Courses.course_id = Enrollments.course_id;",
      "SELECT course_name, COUNT(DISTINCT Students.student_id) AS num_students\nFROM Courses\nLEFT JOIN Enrollments ON Courses.course_id = Enrollments.course_id\nLEFT JOIN Students ON Enrollments.student_id = Students.student_id\nGROUP BY Courses.course_id;",
      "SELECT student_name, COUNT(DISTINCT Courses.course_id) AS num_courses\nFROM Students\nLEFT JOIN Enrollments ON Students.student_id = Enrollments.student_id\nLEFT JOIN Courses ON Enrollments.course_id = Courses.course_id\nGROUP BY Students.student_id;",
      "SELECT course_name, COUNT(DISTINCT Enrollments.student_id) AS num_students\nFROM Courses\nLEFT JOIN Enrollments ON Courses.course_id = Enrollments.course_id\nGROUP BY Courses.course_id;",
      "SELECT student_name, COUNT(DISTINCT Enrollments.course_id) AS num_courses\nFROM Students\nLEFT JOIN Enrollments ON Students.student_id = Enrollments.student_id\nGROUP BY Students.student_id;",
      "SELECT student_name, course_name, COUNT(Enrollments.enrollment_id) AS num_enrollments\nFROM Students\nLEFT JOIN Enrollments ON Students.student_id = Enrollments.student_id\nLEFT JOIN Courses ON Enrollments.course_id = Courses.course_id\nGROUP BY Students.student_id, Courses.course_id;",
      "SELECT student_name, course_name, MAX(Enrollments.enrollment_id) AS max_enrollment\nFROM Students\nLEFT JOIN Enrollments ON Students.student_id = Enrollments.student_id\nLEFT JOIN Courses ON Enrollments.course_id = Courses.course_id\nGROUP BY Students.student_id, Courses.course_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students",
      "SELECT student_id, student_name FROM students",
      "SELECT student_id, student_name, student_grade FROM students",
      "SELECT * FROM courses",
      "SELECT course_id, course_name FROM courses",
      "SELECT course_id, course_name, instructor_name FROM courses",
      "SELECT * FROM enrollments",
      "SELECT enrollment_id, student_id, course_id, enrollment_date FROM enrollments",
      "SELECT * FROM instructors",
      "SELECT instructor_id, instructor_name, instructor_email FROM instructors",
      "SELECT students.student_id, students.student_name, courses.course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON courses.course_id = enrollments.course_id",
      "SELECT students.student_id, students.student_name, courses.course_name, enrollments.enrollment_date FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON courses.course_id = enrollments.course_id",
      "SELECT student_id, COUNT(course_id) AS num_courses FROM enrollments GROUP BY student_id",
      "SELECT course_id, COUNT(student_id) AS num_students FROM enrollments GROUP BY course_id",
      "SELECT instructor_name, COUNT(course_id) AS num_courses FROM courses GROUP BY instructor_name",
      "SELECT instructor_name, instructor_email, COUNT(course_id) AS num_courses FROM courses JOIN instructors ON courses.instructor_name = instructors.instructor_name GROUP BY instructor_name, instructor_email"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students",
      "SELECT name, age FROM students",
      "SELECT * FROM teachers",
      "SELECT name, subject FROM teachers",
      "SELECT * FROM courses",
      "SELECT course_name, start_date, end_date FROM courses",
      "SELECT * FROM departments",
      "SELECT dept_name, location FROM departments",
      "SELECT * FROM enrollments",
      "SELECT student_id, course_id, enrollment_date FROM enrollments",
      "SELECT name, age FROM students WHERE age > 20",
      "SELECT name, subject FROM teachers WHERE experience > 5",
      "SELECT course_name, start_date FROM courses WHERE start_date >= '2022-01-01'",
      "SELECT dept_name, location FROM departments WHERE location LIKE '%New York%'",
      "SELECT * FROM students JOIN enrollments ON students.id = enrollments.student_id",
      "SELECT * FROM teachers JOIN courses ON teachers.id = courses.teacher_id",
      "SELECT * FROM students JOIN enrollments ON students.id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id",
      "SELECT DISTINCT subject FROM teachers",
      "SELECT AVG(age) FROM students",
      "SELECT COUNT(*) FROM enrollments WHERE course_id = 1"
    ]
  }
]