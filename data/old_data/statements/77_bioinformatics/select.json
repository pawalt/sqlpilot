[
  {
    "statements": [
      "SELECT * FROM BioinformaticsData;",
      "SELECT id, sequence FROM BioinformaticsData;",
      "SELECT organism, gene_name FROM BioinformaticsData;",
      "SELECT * FROM BioinformaticsData WHERE id = 1;",
      "SELECT * FROM BioinformaticsData WHERE organism = 'Homo sapiens';",
      "SELECT id, sequence FROM BioinformaticsData WHERE gene_name = 'BRCA1';",
      "SELECT id, organism FROM BioinformaticsData WHERE sequence LIKE 'ATG%';",
      "SELECT * FROM BioinformaticsData WHERE organism = 'E. coli' AND gene_name = 'lacZ';",
      "SELECT * FROM BioinformaticsData ORDER BY organism ASC;",
      "SELECT id, organism FROM BioinformaticsData ORDER BY id DESC;",
      "SELECT COUNT(*) FROM BioinformaticsData;",
      "SELECT DISTINCT organism FROM BioinformaticsData;",
      "SELECT AVG(id) FROM BioinformaticsData;",
      "SELECT * FROM BioinformaticsData LIMIT 5 OFFSET 3;",
      "SELECT * FROM BioinformaticsData WHERE id IN (1, 2, 3, 4);",
      "SELECT * FROM BioinformaticsData WHERE organism LIKE '%bacteria%';",
      "SELECT * FROM BioinformaticsData WHERE gene_name IS NOT NULL;",
      "SELECT organism, COUNT(*) FROM BioinformaticsData GROUP BY organism;",
      "SELECT organism, AVG(id) FROM BioinformaticsData GROUP BY organism HAVING AVG(id) > 100;",
      "SELECT * FROM BioinformaticsData WHERE sequence REGEXP '^[ATGC]+$';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Genes",
      "SELECT id, name FROM Genes",
      "SELECT * FROM Proteins",
      "SELECT id, gene_id, sequence FROM Proteins",
      "SELECT Genes.id, Genes.name, Proteins.sequence FROM Genes JOIN Proteins ON Genes.id = Proteins.gene_id",
      "SELECT * FROM Genes WHERE id = 1",
      "SELECT name, sequence FROM Proteins WHERE gene_id = 1",
      "SELECT * FROM Genes ORDER BY id DESC",
      "SELECT * FROM Proteins ORDER BY sequence ASC",
      "SELECT id, name FROM Genes WHERE name LIKE 'A%'",
      "SELECT * FROM Proteins WHERE sequence LIKE '%pattern%'",
      "SELECT name FROM Genes WHERE id BETWEEN 1 AND 10",
      "SELECT DISTINCT id FROM Genes",
      "SELECT * FROM Proteins LIMIT 5",
      "SELECT COUNT(*) FROM Genes",
      "SELECT AVG(id) FROM Genes",
      "SELECT MIN(id) FROM Genes",
      "SELECT MAX(id) FROM Genes",
      "SELECT COUNT(DISTINCT gene_id) FROM Proteins",
      "SELECT name, sequence FROM Proteins INNER JOIN Genes ON Proteins.gene_id = Genes.id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Gene;",
      "SELECT id, name FROM Gene;",
      "SELECT * FROM Mutation;",
      "SELECT id, type, position FROM Mutation;",
      "SELECT * FROM Variant;",
      "SELECT id, name, effect FROM Variant;",
      "SELECT Gene.name, Gene.sequence, Mutation.type, Mutation.position FROM Gene JOIN Mutation ON Gene.id = Mutation.gene_id;",
      "SELECT Gene.name, Gene.sequence, Mutation.type, Variant.effect FROM Gene JOIN Mutation ON Gene.id = Mutation.gene_id JOIN Variant ON Variant.mutation_id = Mutation.id;",
      "SELECT COUNT(*) FROM Gene;",
      "SELECT COUNT(*) FROM Mutation;",
      "SELECT COUNT(*) FROM Variant;",
      "SELECT AVG(position) FROM Mutation;",
      "SELECT MIN(position) FROM Mutation;",
      "SELECT MAX(position) FROM Mutation;",
      "SELECT Gene.name, COUNT(*) FROM Gene JOIN Mutation ON Gene.id = Mutation.gene_id GROUP BY Gene.name;",
      "SELECT Variant.name, AVG(position) FROM Variant JOIN Mutation ON Variant.mutation_id = Mutation.id GROUP BY Variant.name;",
      "SELECT Gene.name, Mutation.type, COUNT(*) FROM Gene JOIN Mutation ON Gene.id = Mutation.gene_id GROUP BY Gene.name, Mutation.type;",
      "SELECT Gene.name AS gene_name, Mutation.type AS mutation_type, Variant.effect AS variant_effect FROM Gene JOIN Mutation ON Gene.id = Mutation.gene_id JOIN Variant ON Variant.mutation_id = Mutation.id;",
      "SELECT * FROM Gene WHERE id = 1;",
      "SELECT * FROM Mutation WHERE type = 'SNP';",
      "SELECT * FROM Variant WHERE effect = 'Silent';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM genes;",
      "SELECT gene_id, gene_name, organism FROM genes;",
      "SELECT * FROM transcripts;",
      "SELECT transcript_id, gene_id, transcript_name FROM transcripts;",
      "SELECT * FROM mutations;",
      "SELECT mutation_id, transcript_id, mutation_type, position, new_base FROM mutations;",
      "SELECT * FROM patients;",
      "SELECT patient_id, patient_name, gender, dob, diagnosis FROM patients;",
      "SELECT * FROM genes WHERE organism = 'Human';",
      "SELECT * FROM transcripts WHERE transcript_name LIKE 'NM_%';",
      "SELECT * FROM mutations WHERE mutation_type = 'SNP';",
      "SELECT * FROM patients WHERE gender = 'M';",
      "SELECT * FROM genes ORDER BY gene_name ASC;",
      "SELECT * FROM transcripts ORDER BY sequence DESC;",
      "SELECT * FROM mutations WHERE position > 100;",
      "SELECT * FROM patients WHERE diagnosis = 'Cancer';",
      "SELECT gene_name, COUNT(*) AS num_transcripts FROM transcripts GROUP BY gene_name;",
      "SELECT chromosome, COUNT(*) AS num_genes FROM genes GROUP BY chromosome;",
      "SELECT gene_id, gene_name, transcript_id, transcript_name FROM genes INNER JOIN transcripts ON genes.gene_id = transcripts.gene_id;",
      "SELECT patient_name, diagnosis, gender, dob, gene_name, transcript_name, mutation_type FROM patients JOIN genes ON patients.patient_id = genes.gene_id JOIN transcripts ON genes.gene_id = transcripts.gene_id JOIN mutations ON transcripts.transcript_id = mutations.transcript_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM gene_info;",
      "SELECT gene_name, chromosome, start_position, end_position FROM gene_info WHERE gene_id = 1;",
      "SELECT DISTINCT chromosome FROM gene_info;",
      "SELECT gene_name FROM gene_info WHERE chromosome = 'X';",
      "SELECT COUNT(*) FROM protein_info;",
      "SELECT protein_name, length FROM protein_info WHERE gene_id = 2;",
      "SELECT gene_name, sequence FROM gene_info JOIN sequence_info ON gene_info.gene_id = sequence_info.gene_id WHERE gene_info.chromosome = 'Y';",
      "SELECT * FROM mutation_info WHERE gene_id = 3;",
      "SELECT mutation_description FROM mutation_info WHERE mutation_id = 1;",
      "SELECT COUNT(*) FROM phenotype_info;",
      "SELECT phenotype_description FROM phenotype_info WHERE gene_id = 5;",
      "SELECT gene_name, phenotype_description FROM gene_info JOIN phenotype_info ON gene_info.gene_id = phenotype_info.gene_id WHERE gene_info.chromosome = '2';",
      "SELECT * FROM sequence_info;",
      "SELECT sequence FROM sequence_info WHERE gene_id = 4;",
      "SELECT gene_name, mutation_description FROM gene_info JOIN mutation_info ON gene_info.gene_id = mutation_info.gene_id WHERE gene_info.chromosome = '3';",
      "SELECT * FROM protein_info WHERE length > 200;",
      "SELECT DISTINCT gene_id FROM mutation_info;",
      "SELECT gene_name, sequence FROM gene_info JOIN sequence_info ON gene_info.gene_id = sequence_info.gene_id WHERE gene_info.chromosome = '1';",
      "SELECT protein_name, sequence FROM protein_info JOIN sequence_info ON protein_info.gene_id = sequence_info.gene_id;",
      "SELECT sequence FROM sequence_info WHERE gene_id = 6;"
    ]
  }
]