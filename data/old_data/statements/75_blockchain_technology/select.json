[
  {
    "statements": [
      "SELECT * FROM blockchain_transactions;",
      "SELECT transaction_id, from_address, to_address, amount FROM blockchain_transactions WHERE amount > 1000;",
      "SELECT block_id, block_hash, previous_block_hash FROM blockchain_blocks;",
      "SELECT user_name, balance, registration_date FROM blockchain_users WHERE balance < 0;",
      "SELECT * FROM blockchain_users ORDER BY last_login DESC LIMIT 5;",
      "SELECT user_name, balance FROM blockchain_users WHERE registration_date >= '2022-01-01';",
      "SELECT user_id, user_name, balance FROM blockchain_users WHERE balance BETWEEN 500 AND 1000;",
      "SELECT SUM(balance) FROM blockchain_users;",
      "SELECT AVG(balance) FROM blockchain_users;",
      "SELECT MAX(balance) FROM blockchain_users;",
      "SELECT MIN(balance) FROM blockchain_users;",
      "SELECT COUNT(user_id) FROM blockchain_users;",
      "SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name;",
      "SELECT user_name, MAX(balance) FROM blockchain_users GROUP BY user_name HAVING MAX(balance) > 5000;",
      "SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < 0;",
      "SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < 1000;",
      "SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > 10000;",
      "SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name HAVING COUNT(transaction_id) > 10;",
      "SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < (SELECT AVG(balance) FROM blockchain_users);",
      "SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > (SELECT SUM(balance) FROM blockchain_users) / 2;",
      "SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < (SELECT AVG(balance) FROM blockchain_users) / 2;"
    ]
  }
]