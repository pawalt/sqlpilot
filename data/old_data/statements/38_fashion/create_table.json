[
  {
    "statements": [
      "CREATE TABLE IF NOT EXISTS fashion_products (id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10,2), color VARCHAR(50), size VARCHAR(10))",
      "CREATE TABLE IF NOT EXISTS customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100))",
      "CREATE TABLE IF NOT EXISTS orders (order_id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, order_date DATE)"
    ]
  },
  {
    "statements": [
      "CREATE TABLE clothing (id INT PRIMARY KEY, name STRING, price DECIMAL);",
      "CREATE TABLE brands (id INT PRIMARY KEY, name STRING, established_year INT);",
      "CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING);"
    ]
  },
  {
    "statements": [
      "CREATE TABLE Brand (brand_id INT PRIMARY KEY, brand_name VARCHAR(255) NOT NULL, headquarters_location VARCHAR(255) NOT NULL);",
      "CREATE TABLE Product (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, brand_id INT, FOREIGN KEY (brand_id) REFERENCES Brand(brand_id));",
      "CREATE TABLE Customer (customer_id INT PRIMARY KEY, customer_name VARCHAR(255) NOT NULL, gender ENUM('Male', 'Female'), age INT, purchase_history TEXT);"
    ]
  },
  {
    "statements": [
      "CREATE TABLE Order (order_id INT PRIMARY KEY, order_date DATE NOT NULL, product_id INT, customer_id INT, quantity INT, FOREIGN KEY (product_id) REFERENCES Product(product_id), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));",
      "CREATE TABLE Supplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(50) NOT NULL, contact_number VARCHAR(15));",
      "CREATE TABLE Employee (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, position VARCHAR(50), salary DECIMAL(10, 2), hire_date DATE);"
    ]
  },
  {
    "statements": [
      "CREATE TABLE Brand (brand_id INT PRIMARY KEY, brand_name VARCHAR(255));",
      "CREATE TABLE Category (category_id INT PRIMARY KEY, category_name VARCHAR(255), category_description TEXT);",
      "CREATE TABLE Product (product_id INT PRIMARY KEY, product_name VARCHAR(255), brand_id INT, category_id INT, FOREIGN KEY (brand_id) REFERENCES Brand(brand_id), FOREIGN KEY (category_id) REFERENCES Category(category_id));"
    ]
  }
]