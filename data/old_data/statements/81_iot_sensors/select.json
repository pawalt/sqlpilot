[
  {
    "statements": [
      "SELECT * FROM iot_sensors WHERE sensor_id = 1",
      "SELECT sensor_name, location FROM iot_sensors",
      "SELECT * FROM iot_sensors WHERE location = 'Room A'",
      "SELECT sensor_id, sensor_name FROM iot_sensors WHERE status = 'active'",
      "SELECT COUNT(sensor_id) FROM iot_sensors",
      "SELECT DISTINCT location FROM iot_sensors",
      "SELECT * FROM iot_sensors ORDER BY sensor_id ASC",
      "SELECT AVG(sensor_id) FROM iot_sensors",
      "SELECT MIN(sensor_id) FROM iot_sensors",
      "SELECT MAX(sensor_id) FROM iot_sensors",
      "SELECT * FROM iot_sensors WHERE sensor_id > 10",
      "SELECT sensor_name FROM iot_sensors WHERE location = 'Room B'",
      "SELECT * FROM iot_sensors WHERE status = 'inactive'",
      "SELECT sensor_id, location FROM iot_sensors WHERE sensor_name = 'Temperature Sensor'",
      "SELECT * FROM iot_sensors WHERE sensor_name LIKE '%Motion%'",
      "SELECT * FROM iot_sensors WHERE location IS NULL",
      "SELECT * FROM iot_sensors WHERE status = 'pending'",
      "SELECT COUNT(DISTINCT location) FROM iot_sensors",
      "SELECT sensor_id, sensor_name, location FROM iot_sensors WHERE sensor_id < 5",
      "SELECT * FROM iot_sensors WHERE sensor_name = 'Pressure Sensor'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM sensors",
      "SELECT sensor_id, sensor_name FROM sensors",
      "SELECT sensor_id, sensor_name, location FROM sensors",
      "SELECT sensor_id, sensor_name, location, status FROM sensors",
      "SELECT * FROM sensor_data",
      "SELECT data_id, sensor_id FROM sensor_data",
      "SELECT data_id, sensor_id, timestamp FROM sensor_data",
      "SELECT data_id, sensor_id, timestamp, value FROM sensor_data",
      "SELECT sensors.sensor_id, sensor_name, location, status FROM sensors INNER JOIN sensor_data ON sensors.sensor_id = sensor_data.sensor_id",
      "SELECT sensors.sensor_id, sensor_name, location, status, timestamp, value FROM sensors INNER JOIN sensor_data ON sensors.sensor_id = sensor_data.sensor_id",
      "SELECT sensors.sensor_id, sensor_name, location, status FROM sensors LEFT JOIN sensor_data ON sensors.sensor_id = sensor_data.sensor_id",
      "SELECT sensors.sensor_id, sensor_name, location, status FROM sensors RIGHT JOIN sensor_data ON sensors.sensor_id = sensor_data.sensor_id",
      "SELECT COUNT(*) FROM sensors",
      "SELECT MAX(sensor_id) FROM sensors",
      "SELECT sensor_name FROM sensors WHERE sensor_id = 1",
      "SELECT sensor_id, AVG(value) FROM sensor_data GROUP BY sensor_id",
      "SELECT sensor_id, MIN(value) FROM sensor_data GROUP BY sensor_id",
      "SELECT sensor_id, MAX(value) FROM sensor_data GROUP BY sensor_id",
      "SELECT sensor_id, COUNT(*) FROM sensor_data GROUP BY sensor_id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM sensors",
      "SELECT sensor_id, location FROM sensors",
      "SELECT * FROM sensor_data",
      "SELECT data_id, sensor_id, value, timestamp FROM sensor_data",
      "SELECT * FROM sensor_logs",
      "SELECT log_id, sensor_id, message, log_timestamp FROM sensor_logs",
      "SELECT sensor_id, COUNT(*) AS num_logs FROM sensor_logs GROUP BY sensor_id",
      "SELECT sensor_id, MAX(timestamp) AS latest_timestamp FROM sensor_data GROUP BY sensor_id",
      "SELECT location, AVG(value) AS avg_value FROM sensors JOIN sensor_data ON sensors.sensor_id = sensor_data.sensor_id GROUP BY location",
      "SELECT sensor_id, COUNT(*) AS num_entries FROM sensor_data GROUP BY sensor_id",
      "SELECT location, COUNT(*) AS num_sensors FROM sensors GROUP BY location"
    ]
  },
  {
    "statements": [
      "SELECT * FROM sensors;",
      "SELECT sensor_name, location FROM sensors;",
      "SELECT * FROM sensor_data;",
      "SELECT timestamp, value FROM sensor_data;",
      "SELECT * FROM locations;",
      "SELECT location_name FROM locations;",
      "SELECT * FROM alerts;",
      "SELECT sensor_id, timestamp, alert_message FROM alerts;",
      "SELECT sensor_id, timestamp, alert_message FROM alerts WHERE sensor_id = 1;",
      "SELECT sensor_id, location, alert_message FROM sensors INNER JOIN alerts ON sensors.sensor_id = alerts.sensor_id;",
      "SELECT sensor_name, location, timestamp FROM sensors INNER JOIN sensor_data ON sensors.sensor_id = sensor_data.sensor_id;",
      "SELECT * FROM sensor_data WHERE value > 50;",
      "SELECT sensor_id, sensor_name, location FROM sensors WHERE location = 'Room A';",
      "SELECT sensor_id, sensor_name, location FROM sensors WHERE location LIKE 'Lab%';",
      "SELECT location_name, count(*) AS sensor_count FROM sensors INNER JOIN locations ON sensors.location = locations.location_name GROUP BY location_name;",
      "SELECT location, AVG(value) AS average_value FROM sensor_data GROUP BY location;",
      "SELECT sensor_id, sensor_name, timestamp, alert_message FROM sensors LEFT JOIN alerts ON sensors.sensor_id = alerts.sensor_id;",
      "SELECT sensor_id, sensor_name, timestamp, alert_message FROM sensors RIGHT JOIN alerts ON sensors.sensor_id = alerts.sensor_id;",
      "SELECT sensor_id, sensor_name, timestamp, alert_message FROM sensors FULL JOIN alerts ON sensors.sensor_id = alerts.sensor_id;",
      "SELECT sensor_id, sensor_name, timestamp, alert_message FROM sensors LEFT JOIN alerts ON sensors.sensor_id = alerts.sensor_id WHERE alert_id IS NULL;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM sensor_data LIMIT 10",
      "SELECT sensor_id, value, timestamp FROM sensor_data ORDER BY timestamp DESC LIMIT 5",
      "SELECT sensor_id, location FROM sensor_location WHERE sensor_id = 1",
      "SELECT sensor_id, location FROM sensor_location WHERE location LIKE '%room%'",
      "SELECT * FROM sensor_type ORDER BY type_name",
      "SELECT sensor_id, alert_message FROM sensor_alerts WHERE sensor_id = 1",
      "SELECT * FROM sensor_alerts WHERE alert_id = 5",
      "SELECT sensor_id, is_active FROM sensor_status WHERE is_active = TRUE",
      "SELECT sensor_id, type_name FROM sensor_type INNER JOIN sensor_data ON sensor_type.type_id = sensor_data.sensor_id",
      "SELECT sensor_id, type_name FROM sensor_type LEFT JOIN sensor_data ON sensor_type.type_id = sensor_data.sensor_id",
      "SELECT sensor_id, location, type_name FROM sensor_location INNER JOIN sensor_type ON sensor_location.sensor_id = sensor_type.type_id",
      "SELECT sensor_id, value, timestamp, location FROM sensor_data INNER JOIN sensor_location ON sensor_data.sensor_id = sensor_location.sensor_id",
      "SELECT AVG(value) AS avg_value, MAX(value) AS max_value, MIN(value) AS min_value FROM sensor_data",
      "SELECT sensor_id, COUNT(alert_id) AS num_alerts FROM sensor_alerts GROUP BY sensor_id",
      "SELECT sensor_id, AVG(value) AS avg_value FROM sensor_data GROUP BY sensor_id HAVING AVG(value) > 50",
      "SELECT sensor_id, location FROM sensor_location WHERE sensor_id IN (SELECT sensor_id FROM sensor_status WHERE is_active = FALSE)",
      "SELECT sensor_id, type_name FROM sensor_type WHERE type_id NOT IN (SELECT sensor_id FROM sensor_data)",
      "SELECT * FROM sensor_data UNION SELECT * FROM sensor_location"
    ]
  }
]