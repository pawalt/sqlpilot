[
  {
    "statements": [
      "SELECT * FROM SaaS WHERE id = 1;",
      "SELECT name, description FROM SaaS WHERE id > 10;",
      "SELECT id, name, description, created_at FROM SaaS WHERE id IN (5, 10, 15);",
      "SELECT * FROM SaaS WHERE created_at < '2022-01-01';",
      "SELECT id, name FROM SaaS WHERE updated_at > '2022-01-15';",
      "SELECT id, name, description FROM SaaS WHERE name LIKE '%analytics%';",
      "SELECT id, name, description FROM SaaS WHERE description IS NOT NULL;",
      "SELECT id, name, created_at FROM SaaS WHERE name = 'SoftwareA';",
      "SELECT id, description FROM SaaS WHERE created_at BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM SaaS WHERE id = 20;",
      "SELECT id, name FROM SaaS WHERE updated_at < '2022-02-01';",
      "SELECT id, description FROM SaaS WHERE name = 'SoftwareB';",
      "SELECT id, name, description FROM SaaS WHERE id <= 10;",
      "SELECT * FROM SaaS WHERE created_at > '2022-02-15';",
      "SELECT id, name, created_at FROM SaaS WHERE updated_at BETWEEN '2022-03-01' AND '2022-03-31';",
      "SELECT id, name, description FROM SaaS WHERE id >= 5;",
      "SELECT name, created_at FROM SaaS WHERE id = 15;",
      "SELECT * FROM SaaS WHERE name LIKE 'S%';",
      "SELECT id, updated_at FROM SaaS WHERE description LIKE '%cloud%';",
      "SELECT id, name, description FROM SaaS WHERE updated_at < '2022-04-15';"
    ]
  },
  {
    "statements": [
      "SELECT customer_id, customer_name, email, created_at FROM customers",
      "SELECT * FROM customers WHERE customer_id = 1",
      "SELECT customer_name, email FROM customers WHERE created_at > '2022-01-01'",
      "SELECT * FROM customers WHERE email LIKE '%example.com'",
      "SELECT * FROM customers ORDER BY created_at DESC",
      "SELECT customer_id, customer_name FROM customers WHERE customer_name LIKE 'A%'",
      "SELECT customer_id, MAX(created_at) AS latest_created_at FROM customers",
      "SELECT customer_id, COUNT(*) AS num_subscriptions FROM subscriptions GROUP BY customer_id",
      "SELECT * FROM subscriptions WHERE start_date BETWEEN '2022-01-01' AND '2022-12-31'",
      "SELECT customer_id, start_date, end_date FROM subscriptions",
      "SELECT customer_id, COUNT(*) AS num_subscriptions FROM subscriptions GROUP BY customer_id HAVING COUNT(*) > 1",
      "SELECT * FROM customers c INNER JOIN subscriptions s ON c.customer_id = s.customer_id",
      "SELECT c.customer_id, s.subscription_id, s.start_date FROM customers c INNER JOIN subscriptions s ON c.customer_id = s.customer_id",
      "SELECT customer_id, MAX(end_date) AS latest_end_date FROM subscriptions GROUP BY customer_id",
      "SELECT customer_id, COUNT(*) AS num_subscriptions FROM subscriptions WHERE start_date < '2022-01-01' GROUP BY customer_id",
      "SELECT customer_name, COUNT(*) AS num_subscriptions FROM customers c JOIN subscriptions s ON c.customer_id = s.customer_id GROUP BY customer_name",
      "SELECT DISTINCT customer_id FROM subscriptions",
      "SELECT customer_id, DATEDIFF(end_date, start_date) AS subscription_duration FROM subscriptions",
      "SELECT customer_id, AVG(DATEDIFF(end_date, start_date)) AS avg_subscription_duration FROM subscriptions GROUP BY customer_id",
      "SELECT customer_id, MIN(start_date) AS first_subscription_date FROM subscriptions GROUP BY customer_id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT username, email FROM users WHERE id = 1;",
      "SELECT * FROM subscriptions;",
      "SELECT plan_name, price FROM subscriptions WHERE user_id = 1;",
      "SELECT * FROM invoices;",
      "SELECT amount, invoice_date FROM invoices WHERE sub_id = 1;",
      "SELECT u.username, s.plan_name, i.amount FROM users u JOIN subscriptions s ON u.id = s.user_id JOIN invoices i ON s.sub_id = i.sub_id;",
      "SELECT u.username, s.plan_name, i.amount FROM users u JOIN subscriptions s ON u.id = s.user_id JOIN invoices i ON s.sub_id = i.sub_id WHERE i.paid = TRUE;",
      "SELECT * FROM users ORDER BY created_at DESC;",
      "SELECT * FROM subscriptions ORDER BY price DESC;",
      "SELECT * FROM users WHERE username LIKE 'a%';",
      "SELECT plan_name, price FROM subscriptions WHERE price >= 50;",
      "SELECT u.username, s.plan_name, i.amount FROM users u JOIN subscriptions s ON u.id = s.user_id JOIN invoices i ON s.sub_id = i.sub_id WHERE i.invoice_date >= '2022-01-01';",
      "SELECT COUNT(id) AS total_users FROM users;",
      "SELECT AVG(price) AS average_price FROM subscriptions;",
      "SELECT MAX(amount) AS highest_amount FROM invoices;",
      "SELECT MIN(amount) AS lowest_amount FROM invoices;",
      "SELECT DISTINCT plan_name FROM subscriptions;",
      "SELECT * FROM users LIMIT 5;",
      "SELECT * FROM subscriptions OFFSET 2;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers",
      "SELECT * FROM products",
      "SELECT * FROM orders",
      "SELECT * FROM subscriptions",
      "SELECT id, name FROM customers",
      "SELECT id, name, price FROM products",
      "SELECT id, customer_id, product_id, quantity, total_price FROM orders",
      "SELECT id, customer_id, start_date, end_date, plan, status FROM subscriptions",
      "SELECT * FROM customers WHERE id = 1",
      "SELECT * FROM products WHERE price > 100",
      "SELECT * FROM orders WHERE quantity > 10",
      "SELECT * FROM subscriptions WHERE status = 'active'",
      "SELECT customers.name, orders.quantity FROM customers JOIN orders ON customers.id = orders.customer_id",
      "SELECT customers.name, products.name, orders.quantity FROM customers JOIN orders ON customers.id = orders.customer_id JOIN products ON products.id = orders.product_id",
      "SELECT SUM(total_price) FROM orders",
      "SELECT AVG(quantity) FROM orders",
      "SELECT customers.name, subscriptions.plan FROM customers JOIN subscriptions ON customers.id = subscriptions.customer_id",
      "SELECT customers.name, subscriptions.start_date, subscriptions.end_date FROM customers JOIN subscriptions ON customers.id = subscriptions.customer_id",
      "SELECT customers.name, products.name, orders.quantity, orders.total_price FROM customers JOIN orders ON customers.id = orders.customer_id JOIN products ON products.id = orders.product_id"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, username FROM users WHERE user_id = 1;",
      "SELECT COUNT(user_id) FROM users;",
      "SELECT * FROM organizations;",
      "SELECT org_id, org_name FROM organizations WHERE org_id = 1;",
      "SELECT COUNT(org_id) FROM organizations;",
      "SELECT * FROM products;",
      "SELECT product_id, product_name, price FROM products WHERE price > 100;",
      "SELECT COUNT(product_id) FROM products;",
      "SELECT * FROM subscriptions;",
      "SELECT subscription_id, user_id, org_id, product_id FROM subscriptions WHERE user_id = 1;",
      "SELECT COUNT(subscription_id) FROM subscriptions;",
      "SELECT * FROM payments;",
      "SELECT payment_id, subscription_id, amount FROM payments WHERE amount > 50;",
      "SELECT COUNT(payment_id) FROM payments;",
      "SELECT users.username, payments.amount FROM users JOIN subscriptions ON users.user_id = subscriptions.user_id JOIN payments ON subscriptions.subscription_id = payments.subscription_id;",
      "SELECT users.username, organizations.org_name, products.product_name FROM users JOIN subscriptions ON users.user_id = subscriptions.user_id JOIN organizations ON subscriptions.org_id = organizations.org_id JOIN products ON subscriptions.product_id = products.product_id;",
      "SELECT users.username, organizations.org_name, products.product_name, payments.amount FROM users JOIN subscriptions ON users.user_id = subscriptions.user_id JOIN organizations ON subscriptions.org_id = organizations.org_id JOIN products ON subscriptions.product_id = products.product_id JOIN payments ON subscriptions.subscription_id = payments.subscription_id;",
      "SELECT users.username, organizations.org_name, products.product_name, payments.amount FROM users JOIN subscriptions ON users.user_id = subscriptions.user_id JOIN organizations ON subscriptions.org_id = organizations.org_id JOIN products ON subscriptions.product_id = products.product_id JOIN payments ON subscriptions.subscription_id = payments.subscription_id WHERE users.username = 'John_Doe';",
      "SELECT users.username, organizations.org_name, products.product_name, payments.amount FROM users JOIN subscriptions ON users.user_id = subscriptions.user_id JOIN organizations ON subscriptions.org_id = organizations.org_id JOIN products ON subscriptions.product_id = products.product_id JOIN payments ON subscriptions.subscription_id = payments.subscription_id WHERE payments.amount > 100;"
    ]
  }
]