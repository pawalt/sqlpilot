[
  {
    "statements": [
      "CREATE TABLE Inventory (id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)"
    ]
  },
  {
    "statements": [
      "CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), quantity INT);",
      "CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, order_date DATE, quantity INT, CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));"
    ]
  },
  {
    "statements": [
      "CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)",
      "CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)",
      "CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)"
    ]
  },
  {
    "statements": [
      "CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10,2), quantity INT)",
      "CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone VARCHAR(20)",
      "CREATE TABLE orders (id INT PRIMARY KEY, product_id INT, customer_id INT, quantity INT, total_price DECIMAL(10,2) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id)"
    ]
  },
  {
    "statements": [
      "CREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name STRING, department STRING)",
      "CREATE TABLE sales (sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, quantity INT, FOREIGN KEY (product_id) REFERENCES products(product_id))",
      "CREATE TABLE payments (payment_id INT PRIMARY KEY, order_id INT, payment_date DATE, amount FLOAT, FOREIGN KEY (order_id) REFERENCES orders(order_id))"
    ]
  }
]