[
  {
    "statements": [
      "SELECT * FROM collaboration_tools;",
      "SELECT tool_name FROM collaboration_tools;",
      "SELECT tool_name, tool_description FROM collaboration_tools;",
      "SELECT * FROM collaboration_tools WHERE tool_id = 1;",
      "SELECT tool_name FROM collaboration_tools WHERE tool_category = 'Project Management';",
      "SELECT COUNT(*) FROM collaboration_tools;",
      "SELECT tool_id, tool_name FROM collaboration_tools WHERE tool_category = 'Communication';",
      "SELECT DISTINCT tool_category FROM collaboration_tools;",
      "SELECT tool_name, tool_category FROM collaboration_tools WHERE tool_id = 5;",
      "SELECT * FROM collaboration_tools WHERE tool_name LIKE '%task%';",
      "SELECT tool_name, tool_description FROM collaboration_tools WHERE tool_description LIKE '%collaboration%';",
      "SELECT MAX(tool_id) FROM collaboration_tools;",
      "SELECT AVG(tool_id) FROM collaboration_tools;",
      "SELECT tool_id, tool_name FROM collaboration_tools ORDER BY tool_name ASC;",
      "SELECT tool_name, tool_description FROM collaboration_tools ORDER BY tool_id DESC;",
      "SELECT * FROM collaboration_tools WHERE tool_id IN (1, 3, 5, 7);",
      "SELECT tool_name, UPPER(tool_category) FROM collaboration_tools;",
      "SELECT tool_name, LENGTH(tool_name) AS name_length FROM collaboration_tools;",
      "SELECT SUBSTR(tool_name, 1, 3) FROM collaboration_tools;",
      "SELECT tool_name, REPLACE(tool_name, 'collab', 'collaboration') FROM collaboration_tools;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Projects;",
      "SELECT project_name, created_date FROM Projects;",
      "SELECT DISTINCT project_name FROM Projects;",
      "SELECT * FROM Members;",
      "SELECT member_name, member_email FROM Members;",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID;",
      "SELECT project_name, count(*) as num_members FROM Projects JOIN Members ON Projects.projectID = Members.memberID GROUP BY project_name HAVING num_members > 5;",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID WHERE member_role='Developer';",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID ORDER BY project_name ASC;",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID ORDER BY project_name DESC;",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID LIMIT 10;",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID OFFSET 5;",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID WHERE join_date > '2022-01-01';",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID WHERE project_name LIKE 'A%';",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID WHERE project_description IS NOT NULL;",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID WHERE member_email LIKE '%@example.com';",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID WHERE join_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID WHERE project_name IN ('Project A', 'Project B');",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID WHERE project_name = 'Project A' AND member_role = 'Manager';",
      "SELECT project_name, member_name FROM Projects JOIN Members ON Projects.projectID = Members.memberID WHERE project_name = 'Project A' OR project_name = 'Project B';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT username, email FROM users WHERE user_id = '123';",
      "SELECT users.username, projects.project_name FROM users JOIN projects ON users.user_id = projects.created_by;",
      "SELECT users.username, tasks.task_name FROM users JOIN tasks ON users.user_id = tasks.assigned_to WHERE tasks.due_date < '2023-01-01';",
      "SELECT * FROM projects WHERE created_at >= '2022-01-01' AND created_at < '2023-01-01';",
      "SELECT project_name, COUNT(*) AS task_count FROM projects JOIN tasks ON projects.project_id = tasks.project_id GROUP BY projects.project_name;",
      "SELECT users.username, COUNT(*) AS project_count FROM users JOIN projects ON users.user_id = projects.created_by GROUP BY users.username;",
      "SELECT * FROM tasks WHERE project_id = '456';",
      "SELECT task_name, assigned_to FROM tasks WHERE due_date = '2023-12-31';",
      "SELECT users.username, tasks.task_name FROM users JOIN tasks ON users.user_id = tasks.assigned_to WHERE tasks.due_date BETWEEN '2023-01-01' AND '2023-06-30';",
      "SELECT * FROM users ORDER BY created_at DESC;",
      "SELECT project_name, COUNT(*) AS task_count FROM projects JOIN tasks ON projects.project_id = tasks.project_id WHERE tasks.assigned_to = '789' GROUP BY projects.project_name;",
      "SELECT project_name, SUM(DATEDIFF(due_date, CURDATE())) AS days_left FROM projects JOIN tasks ON projects.project_id = tasks.project_id WHERE projects.created_by = 'abc' GROUP BY projects.project_name;",
      "SELECT user_id, COUNT(*) AS project_count FROM projects WHERE created_by = 'def' GROUP BY user_id;",
      "SELECT task_id, task_name, due_date FROM tasks WHERE due_date IS NOT NULL;",
      "SELECT users.username, projects.project_name, tasks.task_name FROM users JOIN projects ON users.user_id = projects.created_by JOIN tasks ON projects.project_id = tasks.project_id WHERE tasks.due_date <= '2023-12-31';",
      "SELECT COUNT(*) AS total_projects FROM projects WHERE created_at >= '2022-01-01' AND created_at < '2023-01-01';",
      "SELECT task_name, assigned_to FROM tasks WHERE assigned_to IN (SELECT user_id FROM users WHERE username LIKE 'A%');",
      "SELECT DISTINCT project_name FROM projects;",
      "SELECT user_id, username FROM users WHERE user_id IN (SELECT created_by FROM projects WHERE created_at >= '2022-01-01');",
      "SELECT project_id, MIN(due_date) AS earliest_due_date FROM tasks GROUP BY project_id HAVING earliest_due_date < '2023-12-31';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users",
      "SELECT user_id, username FROM users",
      "SELECT u.username, p.project_name FROM users u INNER JOIN projects p ON u.user_id = p.user_id",
      "SELECT t.task_name, t.deadline, u.username FROM tasks t INNER JOIN users u ON t.user_id = u.user_id",
      "SELECT p.project_name, t.description FROM projects p LEFT JOIN tasks t ON p.project_id = t.project_id",
      "SELECT DISTINCT team_name FROM teams",
      "SELECT * FROM tasks WHERE deadline > NOW()",
      "SELECT user_id, COUNT(*) FROM tasks GROUP BY user_id",
      "SELECT MAX(end_date) FROM projects",
      "SELECT team_name, COUNT(*) FROM projects p INNER JOIN teams t ON p.team_id = t.team_id GROUP BY team_name",
      "SELECT * FROM users WHERE username LIKE 'A%'",
      "SELECT project_name, start_date, end_date FROM projects WHERE team_id = 1",
      "SELECT task_name, deadline FROM tasks WHERE user_id = 2",
      "SELECT t.task_name, u.username FROM tasks t INNER JOIN users u ON t.user_id = u.user_id WHERE t.deadline < NOW()",
      "SELECT * FROM users ORDER BY created_at DESC",
      "SELECT count(*) FROM projects WHERE team_id = 3",
      "SELECT team_name, MIN(created_at) FROM teams GROUP BY team_name HAVING MIN(created_at) > '2022-01-01'",
      "SELECT * FROM projects WHERE start_date BETWEEN '2022-06-01' AND '2022-12-31'",
      "SELECT t.task_name, u.username FROM tasks t INNER JOIN users u ON t.user_id = u.user_id ORDER BY t.deadline ASC LIMIT 5",
      "SELECT project_name, COUNT(*) AS task_count FROM projects p INNER JOIN tasks t ON p.project_id = t.project_id GROUP BY project_name HAVING task_count > 3"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, username, email FROM users;",
      "SELECT * FROM teams;",
      "SELECT team_id, team_name FROM teams;",
      "SELECT * FROM projects;",
      "SELECT project_id, project_name, team_id FROM projects;",
      "SELECT * FROM tasks;",
      "SELECT task_id, task_name, project_id, assigned_to, due_date, status FROM tasks;",
      "SELECT * FROM messages;",
      "SELECT message_id, sender_id, receiver_id, message_text, sent_at FROM messages;",
      "SELECT users.username, tasks.task_name FROM users INNER JOIN tasks ON users.user_id = tasks.assigned_to;",
      "SELECT projects.project_name, tasks.task_name, tasks.status FROM projects INNER JOIN tasks ON projects.project_id = tasks.project_id;",
      "SELECT messages.sender_id, messages.receiver_id, users.username AS sender_username, users.email AS sender_email, messages.sent_at FROM messages LEFT JOIN users ON messages.sender_id = users.user_id;",
      "SELECT projects.project_name, COUNT(tasks.task_id) AS task_count FROM projects LEFT JOIN tasks ON projects.project_id = tasks.project_id GROUP BY projects.project_name;",
      "SELECT team_name, COUNT(project_id) AS project_count FROM teams LEFT JOIN projects ON teams.team_id = projects.team_id GROUP BY team_name;",
      "SELECT username, COUNT(task_id) AS task_count FROM users LEFT JOIN tasks ON users.user_id = tasks.assigned_to GROUP BY username;",
      "SELECT project_name, COUNT(task_id) AS task_count FROM projects LEFT JOIN tasks ON projects.project_id = tasks.project_id GROUP BY project_name;",
      "SELECT username, COUNT(message_id) AS sent_messages FROM users LEFT JOIN messages ON users.user_id = messages.sender_id GROUP BY username;",
      "SELECT sender_id, COUNT(message_id) AS sent_messages FROM messages GROUP BY sender_id;",
      "SELECT project_name, MAX(due_date) AS max_due_date FROM projects LEFT JOIN tasks ON projects.project_id = tasks.project_id GROUP BY project_name;",
      "SELECT team_id, AVG(task_count) AS avg_task_count FROM (SELECT team_id, COUNT(project_id) AS task_count FROM projects GROUP BY team_id) subquery GROUP BY team_id;"
    ]
  }
]