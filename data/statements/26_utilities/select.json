[
  {
    "statements": [
      "SELECT * FROM Utilities.categories;",
      "SELECT id, name FROM Utilities.categories;",
      "SELECT * FROM Utilities.products;",
      "SELECT id, name FROM Utilities.products;",
      "SELECT p.id, p.name, c.name AS category_name FROM Utilities.products p JOIN Utilities.categories c ON p.category_id = c.id;",
      "SELECT p.id, p.name, c.name AS category_name FROM Utilities.products p JOIN Utilities.categories c ON p.category_id = c.id WHERE p.id = 1;",
      "SELECT p.id, p.name, c.name AS category_name FROM Utilities.products p JOIN Utilities.categories c ON p.category_id = c.id WHERE c.name = 'Electronics';",
      "SELECT p.id, p.name, c.name AS category_name FROM Utilities.products p JOIN Utilities.categories c ON p.category_id = c.id ORDER BY p.name ASC;",
      "SELECT p.id, p.name, c.name AS category_name FROM Utilities.products p JOIN Utilities.categories c ON p.category_id = c.id ORDER BY p.name DESC;",
      "SELECT p.id, p.name, c.name AS category_name FROM Utilities.products p JOIN Utilities.categories c ON p.category_id = c.id LIMIT 5;",
      "SELECT p.id, p.name, c.name AS category_name FROM Utilities.products p JOIN Utilities.categories c ON p.category_id = c.id LIMIT 10 OFFSET 5;",
      "SELECT COUNT(*) AS total_categories FROM Utilities.categories;",
      "SELECT COUNT(*) AS total_products FROM Utilities.products;",
      "SELECT c.name AS category_name, COUNT(p.id) AS total_products FROM Utilities.categories c LEFT JOIN Utilities.products p ON p.category_id = c.id GROUP BY c.name;",
      "SELECT c.name AS category_name, MAX(p.name) AS max_product FROM Utilities.categories c LEFT JOIN Utilities.products p ON p.category_id = c.id GROUP BY c.name;",
      "SELECT c.name AS category_name, MIN(p.name) AS min_product FROM Utilities.categories c LEFT JOIN Utilities.products p ON p.category_id = c.id GROUP BY c.name;",
      "SELECT c.name AS category_name, AVG(p.id) AS avg_product_id FROM Utilities.categories c LEFT JOIN Utilities.products p ON p.category_id = c.id GROUP BY c.name;",
      "SELECT c.name AS category_name, SUM(p.id) AS total_product_id FROM Utilities.categories c LEFT JOIN Utilities.products p ON p.category_id = c.id GROUP BY c.name;",
      "SELECT c.name AS category_name, SUM(p.id) AS total_product_id FROM Utilities.categories c LEFT JOIN Utilities.products p ON p.category_id = c.id HAVING total_product_id > 100;",
      "SELECT c.name AS category_name, SUM(p.id) AS total_product_id FROM Utilities.categories c LEFT JOIN Utilities.products p ON p.category_id = c.id GROUP BY c.name HAVING total_product_id < 50;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM utilities.electricity_meters;",
      "SELECT id, meter_number FROM utilities.electricity_meters WHERE reading > 100;",
      "SELECT meter_number, reading FROM utilities.electricity_meters WHERE customer_id = 123;",
      "SELECT * FROM utilities.water_meters;",
      "SELECT id, meter_number FROM utilities.water_meters WHERE reading < 50;",
      "SELECT customer_id, reading FROM utilities.water_meters WHERE meter_number = 'WM123';",
      "SELECT * FROM utilities.bill_payments;",
      "SELECT bill_number, amount FROM utilities.bill_payments WHERE customer_id = 456;",
      "SELECT customer_id, amount FROM utilities.bill_payments WHERE id = 789;",
      "SELECT * FROM utilities.electricity_meters EM JOIN utilities.water_meters WM ON EM.customer_id = WM.customer_id;",
      "SELECT * FROM utilities.water_meters WM JOIN utilities.bill_payments BP ON WM.customer_id = BP.customer_id;",
      "SELECT EM.id, WM.id, BP.id FROM utilities.electricity_meters EM JOIN utilities.water_meters WM ON EM.customer_id = WM.customer_id JOIN utilities.bill_payments BP ON WM.customer_id = BP.customer_id;",
      "SELECT EM.meter_number, WM.meter_number, BP.bill_number FROM utilities.electricity_meters EM JOIN utilities.water_meters WM ON EM.customer_id = WM.customer_id JOIN utilities.bill_payments BP ON WM.customer_id = BP.customer_id;",
      "SELECT COUNT(*) FROM utilities.electricity_meters;",
      "SELECT MAX(reading) FROM utilities.water_meters;",
      "SELECT MIN(amount) FROM utilities.bill_payments;",
      "SELECT AVG(reading) FROM utilities.water_meters WHERE meter_number = 'WM456';",
      "SELECT SUM(amount) FROM utilities.bill_payments WHERE customer_id = 789;",
      "SELECT DISTINCT customer_id FROM utilities.electricity_meters;",
      "SELECT DISTINCT meter_number FROM utilities.water_meters;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM utilities.electricity_meters;",
      "SELECT id, meter_number, location FROM utilities.water_meters;",
      "SELECT COUNT(*) FROM utilities.gas_meters;",
      "SELECT id, meter_number, installed_date FROM utilities.water_meters WHERE id = 1;",
      "SELECT meter_number, location FROM utilities.electricity_meters WHERE location = 'Main Street';",
      "SELECT installed_date FROM utilities.gas_meters WHERE installed_date > '2021-01-01';",
      "SELECT * FROM utilities.bill_payments WHERE amount > 100;",
      "SELECT SUM(amount) FROM utilities.bill_payments WHERE payment_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT id, meter_number, location FROM utilities.electricity_meters WHERE id IN (1, 2, 3);",
      "SELECT meter_id, MAX(payment_date) AS last_payment FROM utilities.bill_payments GROUP BY meter_id;",
      "SELECT AVG(amount) AS average_payment FROM utilities.bill_payments;",
      "SELECT meter_number, COUNT(*) AS payment_count FROM utilities.bill_payments GROUP BY meter_number;",
      "SELECT * FROM utilities.water_meters ORDER BY installed_date DESC;",
      "SELECT SUM(amount) AS total_payments FROM utilities.bill_payments;",
      "SELECT meter_number FROM utilities.gas_meters WHERE location LIKE 'P%';",
      "SELECT AVG(amount) AS average_payment FROM utilities.bill_payments WHERE amount > 50;",
      "SELECT id, meter_number, location FROM utilities.gas_meters WHERE installed_date < '2021-06-01';",
      "SELECT payment_date, amount FROM utilities.bill_payments ORDER BY payment_date ASC LIMIT 5;",
      "SELECT MIN(installed_date) AS earliest_installation_date FROM utilities.water_meters;",
      "SELECT AVG(amount) AS average_payment FROM utilities.bill_payments WHERE payment_date > '2021-01-01';"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Tool WHERE id = 1",
      "SELECT name FROM Tool WHERE id = 2",
      "SELECT description FROM Tool WHERE id = 3",
      "SELECT * FROM Tool WHERE quantity > 10",
      "SELECT id, name FROM Tool WHERE quantity < 5",
      "SELECT * FROM Tool WHERE name LIKE 'Hammer%'",
      "SELECT * FROM Tool WHERE name = 'Screwdriver'",
      "SELECT id, description FROM Tool WHERE quantity < 5",
      "SELECT * FROM Tool WHERE id IN (1, 2, 3)",
      "SELECT * FROM Tool WHERE name IS NULL",
      "SELECT * FROM Tool WHERE quantity BETWEEN 5 AND 10",
      "SELECT id, name, description FROM Tool WHERE quantity = 0",
      "SELECT * FROM Tool WHERE name = 'Wrench' OR name = 'Screwdriver'",
      "SELECT * FROM Tool WHERE name = 'Drill' AND quantity > 5",
      "SELECT * FROM Tool WHERE description LIKE '%power%'",
      "SELECT * FROM Tool WHERE quantity = 1 OR quantity = 5",
      "SELECT * FROM Tool WHERE quantity <> 0",
      "SELECT name, quantity FROM Tool WHERE id = 4",
      "SELECT * FROM Tool WHERE quantity >= 10",
      "SELECT * FROM Tool WHERE description IS NOT NULL"
    ]
  }
]