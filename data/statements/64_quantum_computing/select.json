[
  {
    "statements": [
      "SELECT * FROM quantum_computing_research;",
      "SELECT research_id, researcher_name FROM quantum_computing_research;",
      "SELECT researcher_name, research_topic FROM quantum_computing_research;",
      "SELECT * FROM quantum_computing_results;",
      "SELECT result_id, research_id FROM quantum_computing_results;",
      "SELECT result_description, result_date FROM quantum_computing_results;",
      "SELECT qc_research.research_id, qc_research.researcher_name, qc_results.result_description FROM quantum_computing_research qc_research INNER JOIN quantum_computing_results qc_results ON qc_research.research_id = qc_results.research_id;",
      "SELECT qc_research.research_id, qc_research.researcher_name, qc_results.result_description FROM quantum_computing_research qc_research INNER JOIN quantum_computing_results qc_results ON qc_research.research_id = qc_results.research_id WHERE qc_research.researcher_name = 'John Doe';",
      "SELECT qc_research.research_id, qc_research.researcher_name, qc_results.result_description FROM quantum_computing_research qc_research INNER JOIN quantum_computing_results qc_results ON qc_research.research_id = qc_results.research_id WHERE qc_results.result_date > '2021-01-01';",
      "SELECT qc_research.research_id, qc_research.researcher_name, qc_results.result_description FROM quantum_computing_research qc_research INNER JOIN quantum_computing_results qc_results ON qc_research.research_id = qc_results.research_id WHERE qc_research.research_topic LIKE '%quantum%';",
      "SELECT AVG(result_id) as avg_result_id FROM quantum_computing_results;",
      "SELECT research_id, COUNT(result_id) as result_count FROM quantum_computing_results GROUP BY research_id;",
      "SELECT MAX(result_date) as max_result_date FROM quantum_computing_results;",
      "SELECT researcher_name, MIN(result_date) as min_result_date FROM quantum_computing_results GROUP BY researcher_name;",
      "SELECT researcher_name, research_topic, publish_date FROM quantum_computing_research WHERE researcher_name = 'Alice Smith';",
      "SELECT researcher_name, research_topic, publish_date FROM quantum_computing_research WHERE publish_date < '2022-01-01';",
      "SELECT researcher_name, research_topic, publish_date FROM quantum_computing_research WHERE publish_date BETWEEN '2021-01-01' AND '2022-01-01';",
      "SELECT researcher_name, research_topic, publish_date FROM quantum_computing_research ORDER BY publish_date DESC;",
      "SELECT researcher_name, research_topic, publish_date FROM quantum_computing_research ORDER BY research_topic ASC;",
      "SELECT DISTINCT researcher_name FROM quantum_computing_research;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM qubits;",
      "SELECT id, state FROM qubits WHERE id=1;",
      "SELECT * FROM entanglement;",
      "SELECT id, qubit_1, qubit_2 FROM entanglement WHERE id=1;",
      "SELECT * FROM quantum_computers;",
      "SELECT id, model, qubit_count FROM quantum_computers WHERE id=1;",
      "SELECT qubits.id, qubits.state, entanglement.qubit_1, entanglement.qubit_2 FROM qubits INNER JOIN entanglement ON qubits.id = entanglement.qubit_1;",
      "SELECT quantum_computers.model, quantum_computers.manufacturer, qubits.state, entanglement.qubit_1 FROM quantum_computers INNER JOIN qubits ON quantum_computers.id = qubits.id INNER JOIN entanglement ON quantum_computers.id = entanglement.qubit_1;",
      "SELECT * FROM qubits WHERE state='0';",
      "SELECT * FROM qubits WHERE state LIKE '1%';",
      "SELECT * FROM quantum_computers WHERE model='Quantum Model';",
      "SELECT * FROM quantum_computers WHERE manufacturer='Manufacturer X';",
      "SELECT qubits.id, qubits.state, entanglement.qubit_1, entanglement.qubit_2 FROM qubits INNER JOIN entanglement ON qubits.id = entanglement.qubit_1 WHERE qubits.state='1';",
      "SELECT quantum_computers.model, quantum_computers.manufacturer, qubits.state, entanglement.qubit_1 FROM quantum_computers INNER JOIN qubits ON quantum_computers.id = qubits.id INNER JOIN entanglement ON quantum_computers.id = entanglement.qubit_1 WHERE quantum_computers.model='Model A';",
      "SELECT * FROM qubits ORDER BY id DESC;",
      "SELECT * FROM quantum_computers ORDER BY qubit_count ASC;",
      "SELECT AVG(qubit_count) FROM quantum_computers;",
      "SELECT COUNT(*) FROM qubits;",
      "SELECT MAX(qubit_count) FROM quantum_computers;",
      "SELECT MIN(qubit_count) FROM quantum_computers;",
      "SELECT SUM(qubit_count) FROM quantum_computers;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM qubits;",
      "SELECT state FROM qubits;",
      "SELECT * FROM quantum_gates;",
      "SELECT gate_name FROM quantum_gates;",
      "SELECT * FROM quantum_circuits;",
      "SELECT circuit_name, num_qubits FROM quantum_circuits;",
      "SELECT * FROM quantum_algorithms;",
      "SELECT algorithm_name, description FROM quantum_algorithms;",
      "SELECT qubits.id, qubits.state, quantum_gates.gate_name, quantum_circuits.circuit_name, quantum_algorithms.algorithm_name FROM qubits, quantum_gates, quantum_circuits, quantum_algorithms;",
      "SELECT * FROM qubits WHERE state = '0';",
      "SELECT * FROM quantum_gates WHERE gate_name = 'Hadamard';",
      "SELECT * FROM quantum_circuits WHERE num_qubits > 3;",
      "SELECT * FROM quantum_algorithms WHERE algorithm_name LIKE '%Grover%';",
      "SELECT * FROM qubits JOIN quantum_circuits ON qubits.id = quantum_circuits.circuit_id;",
      "SELECT * FROM quantum_gates LEFT JOIN quantum_algorithms ON quantum_gates.gate_id = quantum_algorithms.algorithm_id;",
      "SELECT * FROM quantum_circuits RIGHT JOIN quantum_gates ON quantum_circuits.circuit_id = quantum_gates.gate_id;",
      "SELECT * FROM quantum_algorithms FULL JOIN qubits ON quantum_algorithms.algorithm_id = qubits.id;",
      "SELECT COUNT(*) FROM qubits;",
      "SELECT AVG(num_qubits) FROM quantum_circuits;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM qubits;",
      "SELECT id, value FROM qubits WHERE id = 5;",
      "SELECT * FROM quantum_gates;",
      "SELECT gate_name, gate_matrix FROM quantum_gates WHERE id = 3;",
      "SELECT * FROM quantum_circuits;",
      "SELECT circuit_name, circuit_description FROM quantum_circuits WHERE id = 2;",
      "SELECT * FROM quantum_algorithms;",
      "SELECT algorithm_name, algorithm_description FROM quantum_algorithms WHERE id = 1;",
      "SELECT * FROM quantum_measurements;",
      "SELECT measurement_name, measurement_result FROM quantum_measurements WHERE id = 4;",
      "SELECT * FROM qubits JOIN quantum_gates ON qubits.id = quantum_gates.id;",
      "SELECT * FROM quantum_circuits JOIN quantum_algorithms ON quantum_circuits.id = quantum_algorithms.id;",
      "SELECT * FROM quantum_gates JOIN quantum_measurements ON quantum_gates.id = quantum_measurements.id;",
      "SELECT * FROM quantum_circuits JOIN qubits ON quantum_circuits.id = qubits.id;",
      "SELECT * FROM quantum_algorithms JOIN quantum_gates ON quantum_algorithms.id = quantum_gates.id;",
      "SELECT * FROM qubits JOIN quantum_measurements ON qubits.id = quantum_measurements.id;",
      "SELECT * FROM quantum_gates LEFT JOIN quantum_circuits ON quantum_gates.id = quantum_circuits.id;",
      "SELECT * FROM quantum_algorithms LEFT JOIN quantum_measurements ON quantum_algorithms.id = quantum_measurements.id;",
      "SELECT * FROM qubits RIGHT JOIN quantum_gates ON qubits.id = quantum_gates.id;",
      "SELECT * FROM quantum_circuits RIGHT JOIN quantum_algorithms ON quantum_circuits.id = quantum_algorithms.id;"
    ]
  }
]