[
  {
    "statements": [
      "CREATE TABLE hr_employees (\n    employee_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);",
      "CREATE TABLE hr_departments (\n    department_id SERIAL PRIMARY KEY,\n    department_name VARCHAR(50) NOT NULL\n);",
      "CREATE TABLE hr_jobs (\n    job_id SERIAL PRIMARY KEY,\n    job_title VARCHAR(50) NOT NULL,\n    min_salary INTEGER,\n    max_salary INTEGER\n);"
    ]
  },
  {
    "statements": [
      "CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2)",
      "CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))"
    ]
  },
  {
    "statements": [
      "CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))",
      "CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))",
      "CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))"
    ]
  },
  {
    "statements": [
      "CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);",
      "CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50);",
      "CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));",
      "CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));"
    ]
  }
]