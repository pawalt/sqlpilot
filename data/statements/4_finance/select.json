[
  {
    "statements": [
      "SELECT * FROM accounts;",
      "SELECT account_name, balance FROM accounts;",
      "SELECT * FROM accounts WHERE balance > 1000;",
      "SELECT account_name, account_type FROM accounts WHERE balance < 0;",
      "SELECT * FROM transactions;",
      "SELECT transaction_type, amount FROM transactions;",
      "SELECT * FROM transactions WHERE amount > 500;",
      "SELECT account_name, amount FROM accounts JOIN transactions ON accounts.id = transactions.account_id;",
      "SELECT transaction_id, transaction_date FROM transactions WHERE amount < 0;",
      "SELECT * FROM accounts JOIN transactions ON accounts.id = transactions.account_id;",
      "SELECT account_name, SUM(amount) AS total_transactions FROM accounts JOIN transactions ON accounts.id = transactions.account_id GROUP BY account_name;",
      "SELECT * FROM accounts WHERE account_type = 'Savings';",
      "SELECT account_name, balance FROM accounts WHERE account_type = 'Checking';",
      "SELECT * FROM transactions WHERE transaction_type = 'Deposit';",
      "SELECT account_name, amount FROM accounts JOIN transactions ON accounts.id = transactions.account_id WHERE transaction_type = 'Withdrawal';",
      "SELECT * FROM transactions WHERE transaction_date BETWEEN '2021-01-01' AND '2021-12-31';",
      "SELECT * FROM accounts WHERE account_name LIKE '%John%';",
      "SELECT account_name, SUM(amount) AS total_transactions FROM accounts JOIN transactions ON accounts.id = transactions.account_id GROUP BY account_name HAVING total_transactions > 5000;",
      "SELECT account_name, MAX(balance) AS max_balance FROM accounts GROUP BY account_name;",
      "SELECT transaction_type, COUNT(*) AS transaction_count FROM transactions GROUP BY transaction_type HAVING transaction_count > 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Accounts",
      "SELECT account_id, account_name FROM Accounts",
      "SELECT account_name, balance FROM Accounts",
      "SELECT * FROM Transactions",
      "SELECT transaction_id, amount FROM Transactions",
      "SELECT transaction_id, transaction_type FROM Transactions",
      "SELECT * FROM Users",
      "SELECT user_id, username FROM Users",
      "SELECT username, email FROM Users",
      "SELECT account_id FROM Accounts",
      "SELECT account_name FROM Accounts",
      "SELECT user_id FROM Users",
      "SELECT account_id, balance FROM Accounts",
      "SELECT transaction_id, amount, transaction_type FROM Transactions",
      "SELECT account_id, username FROM Users",
      "SELECT account_id, email FROM Users",
      "SELECT account_id, amount FROM Transactions",
      "SELECT account_name, username FROM Users",
      "SELECT account_name, email FROM Users",
      "SELECT username, email, account_id FROM Users"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users",
      "SELECT id, name, email FROM users WHERE age > 30",
      "SELECT * FROM transactions",
      "SELECT transaction_id, amount FROM transactions WHERE amount > 1000",
      "SELECT * FROM accounts",
      "SELECT account_number, balance FROM accounts WHERE balance < 0",
      "SELECT * FROM invoices",
      "SELECT invoice_id, amount, invoice_date FROM invoices WHERE amount > 500",
      "SELECT users.name, transactions.amount FROM users INNER JOIN transactions ON users.id = transactions.user_id",
      "SELECT users.name, accounts.balance FROM users INNER JOIN accounts ON users.id = accounts.user_id",
      "SELECT users.name, invoices.amount FROM users INNER JOIN invoices ON users.id = invoices.user_id",
      "SELECT accounts.account_number, accounts.balance, users.name FROM accounts INNER JOIN users ON accounts.user_id = users.id",
      "SELECT transactions.transaction_id, transactions.amount, users.name FROM transactions INNER JOIN users ON transactions.user_id = users.id",
      "SELECT accounts.account_number, accounts.balance, users.name FROM accounts INNER JOIN users ON accounts.user_id = users.id WHERE accounts.balance < 0",
      "SELECT users.name, invoices.amount, invoices.invoice_date FROM users INNER JOIN invoices ON users.id = invoices.user_id WHERE invoices.amount > 500",
      "SELECT * FROM users WHERE age > 25 ORDER BY name ASC",
      "SELECT * FROM transactions WHERE transaction_date BETWEEN '2021-01-01' AND '2021-12-31'",
      "SELECT * FROM accounts WHERE account_type = 'Savings'",
      "SELECT * FROM invoices WHERE invoice_date BETWEEN '2021-06-01' AND '2021-06-30'"
    ]
  },
  {
    "statements": [
      "SELECT * FROM account WHERE account_id = 1",
      "SELECT account_name FROM account WHERE account_id = 2",
      "SELECT account_id, account_name FROM account WHERE account_id > 5",
      "SELECT * FROM account WHERE account_name LIKE '%John%'",
      "SELECT COUNT(account_id) FROM account",
      "SELECT MIN(account_id) FROM account",
      "SELECT MAX(account_id) FROM account",
      "SELECT AVG(account_id) FROM account",
      "SELECT * FROM account ORDER BY account_id ASC",
      "SELECT * FROM account ORDER BY account_id DESC",
      "SELECT * FROM account WHERE account_id BETWEEN 1 AND 10",
      "SELECT DISTINCT account_id FROM account",
      "SELECT * FROM account LIMIT 5",
      "SELECT * FROM account OFFSET 5",
      "SELECT * FROM account WHERE account_id IN (1, 3, 5)",
      "SELECT * FROM account WHERE account_id NOT IN (2, 4, 6)",
      "SELECT * FROM account WHERE account_id = 1 OR account_id = 2",
      "SELECT * FROM account WHERE account_id = 1 AND account_name = 'John'",
      "SELECT * FROM account WHERE account_id > 10 OR account_name LIKE '%Doe%'",
      "SELECT * FROM account WHERE account_name IS NULL"
    ]
  }
]