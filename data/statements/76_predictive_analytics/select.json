[
  {
    "statements": [
      "SELECT * FROM predictive_analytics_table WHERE id = 1",
      "SELECT prediction FROM predictive_analytics_table WHERE customer_id = 100",
      "SELECT id, customer_id FROM predictive_analytics_table",
      "SELECT * FROM predictive_analytics_table WHERE id > 10",
      "SELECT DISTINCT customer_id FROM predictive_analytics_table",
      "SELECT * FROM predictive_analytics_table ORDER BY customer_id DESC",
      "SELECT COUNT(*) FROM predictive_analytics_table",
      "SELECT AVG(id) FROM predictive_analytics_table",
      "SELECT MAX(customer_id) FROM predictive_analytics_table",
      "SELECT MIN(id) FROM predictive_analytics_table",
      "SELECT SUM(customer_id) FROM predictive_analytics_table",
      "SELECT * FROM predictive_analytics_table WHERE prediction LIKE '%good%'",
      "SELECT * FROM predictive_analytics_table WHERE customer_id IN (1,2,3)",
      "SELECT * FROM predictive_analytics_table WHERE id BETWEEN 5 AND 10",
      "SELECT * FROM predictive_analytics_table WHERE prediction IS NOT NULL",
      "SELECT * FROM predictive_analytics_table WHERE customer_id = 1 AND prediction = 'high'",
      "SELECT * FROM predictive_analytics_table WHERE customer_id = 2 OR prediction = 'low'",
      "SELECT * FROM predictive_analytics_table WHERE customer_id = 3 AND prediction != 'medium'",
      "SELECT * FROM predictive_analytics_table WHERE id < 5 OR id > 15",
      "SELECT * FROM predictive_analytics_table WHERE customer_id = 4 AND id = 5"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customer;",
      "SELECT customer_id, name FROM Customer;",
      "SELECT * FROM Customer WHERE age > 18;",
      "SELECT customer_id, name FROM Customer WHERE age > 18;",
      "SELECT * FROM Customer ORDER BY age DESC;",
      "SELECT * FROM PurchaseHistory;",
      "SELECT purchase_id, product_name FROM PurchaseHistory;",
      "SELECT * FROM PurchaseHistory WHERE amount > 100;",
      "SELECT customer_id, product_name FROM PurchaseHistory WHERE amount > 100;",
      "SELECT * FROM PurchaseHistory ORDER BY purchase_date;",
      "SELECT c.name, p.product_name FROM Customer c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id;",
      "SELECT c.name, p.product_name FROM Customer c, PurchaseHistory p WHERE c.customer_id = p.customer_id;",
      "SELECT c.name, p.product_name FROM Customer c LEFT JOIN PurchaseHistory p ON c.customer_id = p.customer_id;",
      "SELECT c.name, p.product_name FROM Customer c RIGHT JOIN PurchaseHistory p ON c.customer_id = p.customer_id;",
      "SELECT c.name, p.product_name FROM Customer c FULL JOIN PurchaseHistory p ON c.customer_id = p.customer_id;",
      "SELECT c.name, COUNT(p.product_name) AS total_products FROM Customer c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id GROUP BY c.name;",
      "SELECT c.name, SUM(p.amount) AS total_amount FROM Customer c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id GROUP BY c.name;",
      "SELECT c.name, AVG(p.amount) AS avg_amount FROM Customer c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id GROUP BY c.name;",
      "SELECT gender, AVG(age) AS avg_age FROM Customer GROUP BY gender;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customer_data;",
      "SELECT customer_name, age, city FROM customer_data;",
      "SELECT customer_name, email FROM customer_data WHERE city='New York';",
      "SELECT * FROM purchase_history;",
      "SELECT customer_id, purchase_date, total_amount FROM purchase_history;",
      "SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;",
      "SELECT DISTINCT category FROM product_catalog;",
      "SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';",
      "SELECT * FROM predictive_model WHERE accuracy > 0.8;",
      "SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';",
      "SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;",
      "SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;",
      "SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;",
      "SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;",
      "SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;",
      "SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;",
      "SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;",
      "SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;",
      "SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;",
      "SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, age FROM customers;",
      "SELECT product_name, price FROM products;",
      "SELECT salesperson_name, region FROM salespersons;",
      "SELECT transaction_id, customer_id, transaction_date FROM transactions;",
      "SELECT prediction_id, prediction_date, prediction_score FROM predictions;",
      "SELECT * FROM transactions WHERE amount > 1000;",
      "SELECT customer_name, age FROM customers WHERE age > 30;",
      "SELECT product_name, price FROM products WHERE category = 'Electronics';",
      "SELECT salesperson_name, region FROM salespersons WHERE region = 'North';",
      "SELECT customer_name, email FROM customers WHERE customer_id = 100;",
      "SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT * FROM salespersons WHERE salesperson_id = 2;",
      "SELECT * FROM products WHERE price < 50;",
      "SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;",
      "SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;",
      "SELECT product_name, category FROM products ORDER BY category;",
      "SELECT customer_name, email FROM customers ORDER BY customer_name DESC;",
      "SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;",
      "SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);"
    ]
  }
]