[
  {
    "statements": [
      "SELECT * FROM telecommunications_data;",
      "SELECT phone_number, call_duration FROM telecommunications_data;",
      "SELECT id, call_date FROM telecommunications_data WHERE id = 1;",
      "SELECT COUNT(*) FROM telecommunications_data;",
      "SELECT AVG(call_duration) FROM telecommunications_data;",
      "SELECT phone_number, MAX(call_duration) FROM telecommunications_data GROUP BY phone_number;",
      "SELECT id, call_date FROM telecommunications_data WHERE call_date BETWEEN '2022-01-01' AND '2022-01-31';",
      "SELECT id, call_duration FROM telecommunications_data ORDER BY call_duration DESC;",
      "SELECT * FROM telecommunications_data WHERE phone_number LIKE '%555%';",
      "SELECT id, call_duration FROM telecommunications_data WHERE id IN (1, 2, 3);",
      "SELECT id, phone_number, call_duration FROM telecommunications_data WHERE call_duration > 60;",
      "SELECT id, call_date FROM telecommunications_data WHERE call_date >= '2022-01-01' AND call_date < '2022-02-01';",
      "SELECT AVG(call_duration) AS average_duration FROM telecommunications_data;",
      "SELECT phone_number, COUNT(*) AS call_count FROM telecommunications_data GROUP BY phone_number;",
      "SELECT id, MAX(call_duration) AS longest_call FROM telecommunications_data;",
      "SELECT id, call_date FROM telecommunications_data WHERE EXTRACT(MONTH FROM call_date) = 1;",
      "SELECT id, call_duration FROM telecommunications_data WHERE call_date = CURRENT_TIMESTAMP;",
      "SELECT id, phone_number FROM telecommunications_data WHERE id BETWEEN 1 AND 10;",
      "SELECT id, phone_number, call_date FROM telecommunications_data ORDER BY call_date ASC;",
      "SELECT id, call_duration FROM telecommunications_data WHERE call_duration < 30;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name FROM customers;",
      "SELECT customer_id, customer_name FROM customers;",
      "SELECT * FROM orders;",
      "SELECT product_name FROM orders;",
      "SELECT order_id, product_name FROM orders;",
      "SELECT customers.customer_name, orders.product_name FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customers.customer_name, orders.product_name FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customers.customer_name, orders.product_name FROM customers RIGHT JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customers.customer_name, orders.product_name FROM customers FULL JOIN orders ON customers.customer_id = orders.customer_id;",
      "SELECT customers.customer_name, COUNT(orders.order_id) AS order_count FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_name;",
      "SELECT customers.customer_name, SUM(orders.order_id) AS total_orders FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_name;",
      "SELECT customers.customer_name, AVG(orders.order_id) AS avg_orders FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_name;",
      "SELECT customers.customer_name, MIN(orders.order_id) AS min_order FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_name;",
      "SELECT customers.customer_name, MAX(orders.order_id) AS max_order FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_name;",
      "SELECT customers.customer_name, COUNT(orders.order_id) AS order_count FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.product_name = 'Product A' GROUP BY customers.customer_name;",
      "SELECT customers.customer_name, SUM(orders.order_id) AS total_orders FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.product_name = 'Product A' GROUP BY customers.customer_name;",
      "SELECT customers.customer_name, AVG(orders.order_id) AS avg_orders FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.product_name = 'Product A' GROUP BY customers.customer_name;",
      "SELECT customers.customer_name, MIN(orders.order_id) AS min_order FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.product_name = 'Product A' GROUP BY customers.customer_name;",
      "SELECT customers.customer_name, MAX(orders.order_id) AS max_order FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.product_name = 'Product A' GROUP BY customers.customer_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Customers",
      "SELECT customer_name, email FROM Customers",
      "SELECT customer_name, phone_number, email FROM Customers WHERE customer_id = 1",
      "SELECT * FROM Orders",
      "SELECT order_id, order_date, total_amount FROM Orders WHERE customer_id = 1",
      "SELECT * FROM Products",
      "SELECT product_name, price FROM Products",
      "SELECT product_name, description FROM Products WHERE price > 50",
      "SELECT customer_name, order_date, total_amount FROM Orders INNER JOIN Customers ON Orders.customer_id = Customers.customer_id",
      "SELECT customer_name, order_date, product_name, total_amount FROM Orders INNER JOIN Customers ON Orders.customer_id = Customers.customer_id INNER JOIN Products ON Orders.product_id = Products.product_id",
      "SELECT customer_name, phone_number, order_date, total_amount FROM Orders INNER JOIN Customers ON Orders.customer_id = Customers.customer_id",
      "SELECT customer_name, product_name, price FROM Products INNER JOIN Orders ON Products.product_id = Orders.product_id INNER JOIN Customers ON Orders.customer_id = Customers.customer_id",
      "SELECT * FROM Customers ORDER BY customer_name ASC",
      "SELECT * FROM Orders ORDER BY order_date DESC",
      "SELECT * FROM Products ORDER BY price ASC",
      "SELECT AVG(total_amount) FROM Orders",
      "SELECT DISTINCT customer_name FROM Customers",
      "SELECT customer_name, COUNT(order_id) AS total_orders FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY customer_name",
      "SELECT customer_name, MAX(total_amount) AS highest_order_amount FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY customer_name",
      "SELECT customer_name, MIN(total_amount) AS lowest_order_amount FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY customer_name"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers;",
      "SELECT customer_name, phone_number FROM customers WHERE address = 'New York';",
      "SELECT customer_name, address FROM customers WHERE phone_number LIKE '%123%';",
      "SELECT customer_id, customer_name, phone_number FROM customers ORDER BY customer_name ASC;",
      "SELECT * FROM plans;",
      "SELECT plan_name, plan_price FROM plans WHERE plan_type = 'Premium';",
      "SELECT * FROM subscriptions;",
      "SELECT customer_id, plan_id, start_date FROM subscriptions WHERE end_date IS NULL;",
      "SELECT * FROM calls;",
      "SELECT customer_id, call_duration, call_cost FROM calls WHERE call_date > '2022-01-01';",
      "SELECT customer_name, plan_name, start_date, end_date FROM customers c JOIN subscriptions s ON c.customer_id = s.customer_id JOIN plans p ON s.plan_id = p.plan_id;",
      "SELECT c.customer_name, COUNT(*) AS total_calls, SUM(call_duration) AS total_duration FROM customers c JOIN calls ca ON c.customer_id = ca.customer_id GROUP BY c.customer_id, c.customer_name;",
      "SELECT plan_name, AVG(plan_price) AS avg_price FROM plans GROUP BY plan_name;",
      "SELECT plan_type, COUNT(*) AS total_plans FROM plans GROUP BY plan_type;",
      "SELECT customer_name, SUM(call_cost) AS total_cost FROM customers c JOIN calls ca ON c.customer_id = ca.customer_id GROUP BY c.customer_id, c.customer_name;",
      "SELECT c.customer_name, MAX(call_duration) AS longest_call_duration FROM customers c JOIN calls ca ON c.customer_id = ca.customer_id GROUP BY c.customer_id, c.customer_name;",
      "SELECT customer_name, plan_name, start_date, end_date, DATEDIFF(end_date, start_date) AS subscription_duration FROM customers c JOIN subscriptions s ON c.customer_id = s.customer_id JOIN plans p ON s.plan_id = p.plan_id;",
      "SELECT customer_name, phone_number, address FROM customers WHERE phone_number IN (SELECT phone_number FROM customers GROUP BY phone_number HAVING COUNT(*) > 1);",
      "SELECT customer_name, phone_number, address FROM customers WHERE NOT EXISTS (SELECT * FROM calls ca WHERE c.customer_id = ca.customer_id);",
      "SELECT plan_name, AVG(call_cost) AS avg_call_cost FROM calls ca JOIN subscriptions s ON ca.customer_id = s.customer_id JOIN plans p ON s.plan_id = p.plan_id GROUP BY plan_name;",
      "SELECT customer_name, phone_number, MAX(call_cost) AS max_call_cost FROM customers c JOIN calls ca ON c.customer_id = ca.customer_id GROUP BY c.customer_id, c.customer_name;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM customers LIMIT 5;",
      "SELECT * FROM contracts WHERE start_date > '2022-01-01';",
      "SELECT customer_id, start_date, end_date FROM contracts ORDER BY end_date DESC LIMIT 10;",
      "SELECT invoice_id, amount, due_date FROM invoices WHERE amount > 1000;",
      "SELECT * FROM devices WHERE model LIKE '%iPhone%';",
      "SELECT * FROM payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-03-01';",
      "SELECT * FROM customers JOIN contracts ON customers.id = contracts.customer_id WHERE customers.name = 'John Doe';",
      "SELECT * FROM contracts JOIN devices ON contracts.contract_id = devices.contract_id WHERE devices.model = 'Samsung';",
      "SELECT * FROM invoices JOIN payments ON invoices.invoice_id = payments.invoice_id WHERE payments.amount < 500;",
      "SELECT customer_id, COUNT(*) FROM contracts GROUP BY customer_id HAVING COUNT(*) > 3;",
      "SELECT DISTINCT start_date FROM contracts ORDER BY start_date DESC LIMIT 5;",
      "SELECT name, phone_number FROM customers WHERE email LIKE '%@gmail.com';",
      "SELECT * FROM contracts WHERE customer_id = (SELECT id FROM customers WHERE name = 'Alice');",
      "SELECT AVG(amount) FROM invoices;",
      "SELECT SUM(amount) FROM payments WHERE payment_date < '2022-02-01';",
      "SELECT * FROM customers WHERE id NOT IN (SELECT customer_id FROM contracts);",
      "SELECT MAX(amount) FROM invoices;",
      "SELECT MIN(amount) FROM payments;",
      "SELECT COUNT(*) FROM devices WHERE model = 'HP';"
    ]
  }
]