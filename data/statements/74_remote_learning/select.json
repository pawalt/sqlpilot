[
  {
    "statements": [
      "SELECT * FROM remote_learning;",
      "SELECT course_name, instructor FROM remote_learning;",
      "SELECT course_name, students FROM remote_learning WHERE instructor = 'John Doe';",
      "SELECT * FROM remote_learning WHERE students > 50;",
      "SELECT COUNT(*) FROM remote_learning;",
      "SELECT instructor, COUNT(*) FROM remote_learning GROUP BY instructor;",
      "SELECT course_name, AVG(students) FROM remote_learning GROUP BY course_name;",
      "SELECT * FROM remote_learning ORDER BY students DESC;",
      "SELECT * FROM remote_learning WHERE instructor LIKE '%Smith%';",
      "SELECT * FROM remote_learning WHERE course_name = 'Math';",
      "SELECT * FROM remote_learning WHERE students BETWEEN 20 AND 50;",
      "SELECT course_name, students FROM remote_learning ORDER BY students DESC LIMIT 5;",
      "SELECT AVG(students) AS avg_students FROM remote_learning;",
      "SELECT MAX(students) AS max_students FROM remote_learning;",
      "SELECT course_name, SUM(students) AS total_students FROM remote_learning GROUP BY course_name;",
      "SELECT AVG(students) FROM remote_learning WHERE instructor = 'Jane Smith';",
      "SELECT * FROM remote_learning WHERE course_name LIKE '%Science%' AND instructor = 'John Doe';",
      "SELECT MIN(students) FROM remote_learning WHERE instructor = 'John Doe';",
      "SELECT * FROM remote_learning WHERE course_name IN ('Math', 'Science', 'English');",
      "SELECT * FROM remote_learning WHERE students < (SELECT AVG(students) FROM remote_learning);",
      "SELECT course_name, students, instructor FROM remote_learning WHERE students > 10 ORDER BY students ASC LIMIT 10;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_name, course FROM students;",
      "SELECT * FROM courses;",
      "SELECT course_name, instructor FROM courses;",
      "SELECT student_name, course_name FROM students JOIN courses ON students.course = courses.course_name;",
      "SELECT * FROM students WHERE student_id = 1;",
      "SELECT student_name FROM students WHERE course = 'Math';",
      "SELECT * FROM courses WHERE instructor = 'John Doe';",
      "SELECT student_name, course_name FROM students JOIN courses ON students.course = courses.course_name WHERE instructor = 'John Doe';",
      "SELECT * FROM students ORDER BY student_name ASC;",
      "SELECT * FROM courses ORDER BY course_name DESC;",
      "SELECT COUNT(*) FROM students;",
      "SELECT DISTINCT course FROM students;",
      "SELECT * FROM students LIMIT 5;",
      "SELECT student_name, course FROM students WHERE student_id > 5;",
      "SELECT * FROM courses WHERE course_id BETWEEN 1 AND 5;",
      "SELECT AVG(student_id) FROM students;",
      "SELECT MAX(course_id) FROM courses;",
      "SELECT MIN(student_id) FROM students;",
      "SELECT SUM(course_id) FROM courses;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students",
      "SELECT student_id, student_name FROM students",
      "SELECT student_name, email FROM students",
      "SELECT * FROM courses",
      "SELECT course_name, instructor FROM courses",
      "SELECT course_id, description FROM courses",
      "SELECT * FROM enrollments",
      "SELECT student_id, course_id FROM enrollments",
      "SELECT enrollment_id, enrollment_date FROM enrollments",
      "SELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id",
      "SELECT course_name, instructor, student_name FROM courses JOIN enrollments ON courses.course_id = enrollments.course_id JOIN students ON enrollments.student_id = students.student_id",
      "SELECT * FROM courses WHERE instructor = 'John Doe'",
      "SELECT * FROM students WHERE age > 20",
      "SELECT student_id, student_name FROM students WHERE email LIKE '%gmail.com%'",
      "SELECT * FROM courses WHERE course_name LIKE '%Math%'",
      "SELECT student_name, course_name FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id WHERE enrollment_date > '2022-01-01'",
      "SELECT student_name, age FROM students WHERE student_id IN (SELECT student_id FROM enrollments WHERE course_id = 1)",
      "SELECT course_name, description FROM courses WHERE course_id IN (SELECT course_id FROM enrollments WHERE student_id = 1)"
    ]
  },
  {
    "statements": [
      "SELECT * FROM courses;",
      "SELECT course_name, instructor_name FROM courses;",
      "SELECT course_id, course_name, credits FROM courses WHERE credits > 3;",
      "SELECT * FROM students;",
      "SELECT student_name, email FROM students WHERE student_id = 1;",
      "SELECT * FROM assignments;",
      "SELECT assignment_name, due_date FROM assignments WHERE due_date > '2023-01-01';",
      "SELECT * FROM submissions;",
      "SELECT student_id, assignment_id, grade FROM submissions WHERE grade >= 90;",
      "SELECT student_name, course_name, assignment_name, grade FROM students JOIN courses ON students.course_id = courses.course_id JOIN assignments ON students.course_id = assignments.course_id JOIN submissions ON students.student_id = submissions.student_id;",
      "SELECT student_id, SUM(grade) AS total_grades FROM submissions GROUP BY student_id;",
      "SELECT course_id, AVG(grade) AS average_grade FROM submissions GROUP BY course_id ORDER BY average_grade DESC;",
      "SELECT student_name, course_name, assignment_name, grade, submission_date FROM students JOIN submissions ON students.student_id = submissions.student_id JOIN assignments ON submissions.assignment_id = assignments.assignment_id JOIN courses ON students.course_id = courses.course_id WHERE grade < 70;",
      "SELECT * FROM courses WHERE course_name LIKE '%Math%';",
      "SELECT student_name, email FROM students WHERE email LIKE '%@example.com%';",
      "SELECT course_name, instructor_name, COUNT(course_id) AS total_students FROM courses JOIN students ON courses.course_id = students.course_id GROUP BY course_name, instructor_name;",
      "SELECT student_name, AVG(grade) AS average_grade FROM students JOIN submissions ON students.student_id = submissions.student_id GROUP BY student_name HAVING average_grade >= 80;",
      "SELECT course_name, COUNT(DISTINCT instructor_name) AS total_instructors FROM courses GROUP BY course_name;",
      "SELECT course_name, MAX(credits) AS highest_credits FROM courses;",
      "SELECT MIN(credits) AS lowest_credits, MAX(credits) AS highest_credits FROM courses;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM Courses;",
      "SELECT course_id, course_name, instructor FROM Courses;",
      "SELECT * FROM Students;",
      "SELECT student_id, student_name, email FROM Students;",
      "SELECT * FROM Enrollments;",
      "SELECT * FROM Assignments;",
      "SELECT assignment_id, course_id, assignment_name FROM Assignments;",
      "SELECT * FROM Submissions;",
      "SELECT assignment_id, student_id, submission_date FROM Submissions;",
      "SELECT course_id, assignment_name, due_date FROM Assignments;",
      "SELECT enrollment_id, student_id, course_id FROM Enrollments;",
      "SELECT student_id, course_id, enrollment_date FROM Enrollments;",
      "SELECT assignment_id, student_id, grade FROM Submissions;",
      "SELECT enrollment_id, student_id, course_id, enrollment_date FROM Enrollments;",
      "SELECT assignment_id, student_id, grade, submission_date FROM Submissions;",
      "SELECT course_id, course_name, instructor, duration FROM Courses;",
      "SELECT student_id, student_name, email, age FROM Students;",
      "SELECT enrollment_id, student_id, course_id, enrollment_date FROM Enrollments;",
      "SELECT assignment_id, course_id, assignment_name, due_date FROM Assignments;",
      "SELECT submission_id, assignment_id, student_id, submission_date, grade FROM Submissions;"
    ]
  }
]