[
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_id, student_name FROM students;",
      "SELECT student_id, student_name, grade_level FROM students;",
      "SELECT student_id, student_name, subjects FROM students;",
      "SELECT * FROM students WHERE grade_level = 10;",
      "SELECT student_id, student_name FROM students WHERE grade_level = 10;",
      "SELECT * FROM students WHERE student_name = 'John';",
      "SELECT student_id, student_name, grade_level FROM students WHERE student_name = 'John';",
      "SELECT * FROM students WHERE 'Math' IN subjects;",
      "SELECT student_id, student_name FROM students WHERE 'Math' IN subjects;",
      "SELECT * FROM students WHERE grade_level > 10;",
      "SELECT student_id, student_name FROM students WHERE grade_level > 10;",
      "SELECT * FROM students WHERE subjects CONTAINS 'Science';",
      "SELECT student_id, student_name FROM students WHERE subjects CONTAINS 'Science';",
      "SELECT * FROM students ORDER BY grade_level ASC;",
      "SELECT student_id, student_name FROM students ORDER BY grade_level DESC;",
      "SELECT * FROM students WHERE grade_level BETWEEN 9 AND 12;",
      "SELECT student_id, student_name FROM students WHERE grade_level BETWEEN 9 AND 12;",
      "SELECT * FROM students WHERE subjects SIZE > 1;",
      "SELECT student_id, student_name FROM students WHERE subjects SIZE > 1;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_name, grade_level FROM students;",
      "SELECT student_id, student_name, grade_level FROM students WHERE grade_level > 10;",
      "SELECT * FROM courses;",
      "SELECT course_name, course_description FROM courses;",
      "SELECT course_id, course_name FROM courses WHERE course_id < 100;",
      "SELECT student_name, course_name FROM students JOIN courses ON students.student_id = courses.course_id;",
      "SELECT student_name, course_name FROM students JOIN courses ON students.student_id = courses.course_id WHERE students.grade_level = 10;",
      "SELECT student_name, course_name FROM students LEFT JOIN courses ON students.student_id = courses.course_id;",
      "SELECT student_name, course_name FROM students RIGHT JOIN courses ON students.student_id = courses.course_id;",
      "SELECT student_name, course_name FROM students INNER JOIN courses ON students.student_id = courses.course_id;",
      "SELECT student_name, course_name FROM students FULL JOIN courses ON students.student_id = courses.course_id;",
      "SELECT COUNT(*) FROM students;",
      "SELECT AVG(grade_level) AS average_grade FROM students;",
      "SELECT MAX(grade_level) AS highest_grade FROM students;",
      "SELECT MIN(grade_level) AS lowest_grade FROM students;",
      "SELECT COUNT(course_id) FROM courses;",
      "SELECT DISTINCT grade_level FROM students;",
      "SELECT AVG(grade_level) AS average_grade, MAX(grade_level) AS highest_grade, MIN(grade_level) AS lowest_grade FROM students;",
      "SELECT student_name, course_name FROM students UNION SELECT course_name, student_name FROM courses;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students",
      "SELECT student_name, age FROM students WHERE grade_level='10'",
      "SELECT course_name, instructor FROM courses",
      "SELECT student_id, course_id FROM enrollments",
      "SELECT student_name, course_name, enrollment_date FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id",
      "SELECT DISTINCT grade_level FROM students",
      "SELECT course_name, COUNT(*) AS enrollments_count FROM enrollments JOIN courses ON enrollments.course_id = courses.course_id GROUP BY course_name",
      "SELECT student_name, course_name, enrollment_date FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id WHERE enrollment_date='2022-10-15'",
      "SELECT student_id, student_name, age FROM students WHERE age > 18",
      "SELECT course_name, instructor FROM courses WHERE instructor='John Doe'",
      "SELECT AVG(age) AS average_age FROM students",
      "SELECT MAX(age) AS max_age FROM students",
      "SELECT student_id, student_name, grade_level FROM students WHERE grade_level='12'",
      "SELECT student_name, course_name, enrollment_date FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id WHERE student_id=5",
      "SELECT student_name, age FROM students WHERE student_name LIKE '%Smith%'",
      "SELECT course_name, instructor, schedule_time FROM courses WHERE schedule_time BETWEEN '08:00:00' AND '12:00:00'",
      "SELECT COUNT(*) AS total_students FROM students",
      "SELECT course_name, COUNT(*) AS enrollments_count FROM enrollments JOIN courses ON enrollments.course_id = courses.course_id GROUP BY course_name HAVING enrollments_count > 5",
      "SELECT student_name, age FROM students ORDER BY age DESC",
      "SELECT course_name, MAX(schedule_time) AS latest_schedule_time FROM courses",
      "SELECT student_name, course_name, enrollment_date FROM students JOIN enrollments ON students.student_id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id ORDER BY enrollment_date ASC LIMIT 10"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students;",
      "SELECT student_name, student_age FROM students;",
      "SELECT course_name, course_description FROM courses;",
      "SELECT student_name, course_name FROM students, courses;",
      "SELECT assignment_name, assignment_deadline FROM assignments;",
      "SELECT student_name, course_name, enrollment_date FROM students, courses, enrollments WHERE students.student_id = enrollments.student_id AND courses.course_id = enrollments.course_id;",
      "SELECT student_name, assignment_name, assignment_max_score FROM students, assignments WHERE students.student_id = assignments.course_id;",
      "SELECT student_name, student_age, course_name, course_description FROM students, courses, enrollments WHERE students.student_id = enrollments.student_id AND courses.course_id = enrollments.course_id;",
      "SELECT student_name, assignment_name, assignment_max_score, assignment_deadline FROM students, assignments WHERE students.student_id = assignments.course_id;",
      "SELECT * FROM students WHERE student_age > 20;",
      "SELECT course_name, course_description FROM courses WHERE course_enrollment_limit > 50;",
      "SELECT student_name, student_age, course_name, course_description FROM students, courses, enrollments WHERE students.student_id = enrollments.student_id AND courses.course_id = enrollments.course_id AND course_enrollment_limit > 50;",
      "SELECT DISTINCT student_name FROM students;",
      "SELECT COUNT(*) FROM students;",
      "SELECT AVG(student_age) FROM students;",
      "SELECT MAX(student_age) FROM students;",
      "SELECT MIN(student_age) FROM students;",
      "SELECT SUM(assignment_max_score) FROM assignments;",
      "SELECT student_name, COUNT(*) AS num_courses FROM students, enrollments WHERE students.student_id = enrollments.student_id GROUP BY student_name;",
      "SELECT course_name, COUNT(*) AS num_students FROM courses, enrollments WHERE courses.course_id = enrollments.course_id GROUP BY course_name;",
      "SELECT student_name, AVG(student_age) AS avg_age FROM students GROUP BY student_name HAVING AVG(student_age) > 25;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM students",
      "SELECT student_id, student_name FROM students",
      "SELECT student_id, student_name, age FROM students WHERE age > 18",
      "SELECT * FROM teachers",
      "SELECT teacher_id, teacher_name FROM teachers",
      "SELECT teacher_id, teacher_name, subject FROM teachers",
      "SELECT * FROM courses",
      "SELECT course_id, course_name FROM courses",
      "SELECT course_id, course_name, credit_hours FROM courses WHERE credit_hours > 3",
      "SELECT * FROM schools",
      "SELECT school_id, school_name FROM schools",
      "SELECT school_id, school_name, location FROM schools WHERE location = 'New York'",
      "SELECT * FROM attendance",
      "SELECT attendance_id, student_id, course_id FROM attendance",
      "SELECT attendance_id, student_id, course_id, date FROM attendance WHERE date = '2022-08-15'",
      "SELECT students.student_name, courses.course_name FROM students JOIN courses ON students.student_id = courses.teacher_id",
      "SELECT teachers.teacher_name, courses.course_name FROM teachers JOIN courses ON teachers.teacher_id = courses.teacher_id",
      "SELECT students.student_name, courses.course_name, attendance.date FROM students JOIN attendance ON students.student_id = attendance.student_id JOIN courses ON attendance.course_id = courses.course_id"
    ]
  }
]