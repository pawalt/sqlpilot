[
  {
    "statements": [
      "SELECT * FROM FitnessData;",
      "SELECT id, user_id, workout_type FROM FitnessData;",
      "SELECT user_id, workout_type, workout_duration FROM FitnessData;",
      "SELECT id, calories_burned FROM FitnessData;",
      "SELECT * FROM FitnessData WHERE user_id = 1;",
      "SELECT id, workout_type FROM FitnessData WHERE user_id = 1;",
      "SELECT * FROM FitnessData WHERE workout_duration > 30;",
      "SELECT user_id, workout_duration FROM FitnessData WHERE calories_burned > 200;",
      "SELECT * FROM FitnessData WHERE workout_type = 'Cardio';",
      "SELECT id, user_id, workout_type FROM FitnessData WHERE calories_burned < 100;",
      "SELECT * FROM FitnessData WHERE user_id = 2 AND workout_duration > 45;",
      "SELECT id, calories_burned FROM FitnessData WHERE workout_type = 'Weightlifting';",
      "SELECT * FROM FitnessData WHERE user_id = 3 OR calories_burned > 300;",
      "SELECT user_id, calories_burned FROM FitnessData WHERE workout_type = 'Yoga' AND workout_duration < 60;",
      "SELECT * FROM FitnessData WHERE workout_type LIKE 'Swimming%';",
      "SELECT id, workout_duration FROM FitnessData WHERE calories_burned BETWEEN 150 AND 250;",
      "SELECT * FROM FitnessData WHERE user_id IN (1, 3);",
      "SELECT user_id, calories_burned FROM FitnessData ORDER BY workout_duration DESC;",
      "SELECT * FROM FitnessData ORDER BY calories_burned ASC, workout_duration DESC;",
      "SELECT COUNT(*) FROM FitnessData;",
      "SELECT AVG(workout_duration), MAX(calories_burned), MIN(workout_duration) FROM FitnessData;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM FitnessUser",
      "SELECT user_id, username, age FROM FitnessUser",
      "SELECT * FROM FitnessActivity",
      "SELECT user_id, activity_name, activity_date FROM FitnessActivity",
      "SELECT user_id, duration_minutes, calories_burned FROM FitnessActivity",
      "SELECT username, age, gender FROM FitnessUser",
      "SELECT activity_name, activity_date, duration_minutes FROM FitnessActivity",
      "SELECT user_id, age, height FROM FitnessUser",
      "SELECT * FROM FitnessUser WHERE age > 30",
      "SELECT * FROM FitnessActivity WHERE calories_burned > 500",
      "SELECT username, height, weight FROM FitnessUser",
      "SELECT activity_name, duration_minutes, calories_burned FROM FitnessActivity",
      "SELECT user_id, age, gender FROM FitnessUser WHERE gender = 'Male'",
      "SELECT * FROM FitnessUser WHERE height > 170",
      "SELECT * FROM FitnessActivity WHERE duration_minutes < 60",
      "SELECT username, gender, height FROM FitnessUser",
      "SELECT user_id, activity_name, calories_burned FROM FitnessActivity WHERE duration_minutes > 30",
      "SELECT * FROM FitnessActivity WHERE activity_date = '2022-01-01'",
      "SELECT user_id, age, gender FROM FitnessUser WHERE age < 40"
    ]
  },
  {
    "statements": [
      "SELECT * FROM workout_plan;",
      "SELECT plan_name, plan_duration FROM workout_plan;",
      "SELECT plan_id, plan_name, plan_description FROM workout_plan WHERE plan_duration > 30;",
      "SELECT * FROM exercise;",
      "SELECT exercise_name, muscle_group FROM exercise;",
      "SELECT exercise_id, exercise_name, muscle_group FROM exercise WHERE difficulty_level = 'Beginner';",
      "SELECT * FROM user_statistics;",
      "SELECT username, age, height FROM user_statistics;",
      "SELECT user_id, height, weight FROM user_statistics WHERE age < 30;",
      "SELECT * FROM workout_plan JOIN exercise ON workout_plan.plan_id = exercise.exercise_id;",
      "SELECT * FROM workout_plan LEFT JOIN user_statistics ON workout_plan.plan_id = user_statistics.user_id;",
      "SELECT * FROM exercise RIGHT JOIN user_statistics ON exercise.exercise_id = user_statistics.user_id;",
      "SELECT * FROM workout_plan INNER JOIN exercise ON workout_plan.plan_id = exercise.exercise_id;",
      "SELECT * FROM workout_plan CROSS JOIN user_statistics;",
      "SELECT * FROM workout_plan WHERE plan_name LIKE 'Weight%';",
      "SELECT * FROM user_statistics WHERE age BETWEEN 20 AND 30;",
      "SELECT * FROM exercise WHERE muscle_group = 'Legs';",
      "SELECT * FROM workout_plan ORDER BY plan_duration DESC;",
      "SELECT * FROM user_statistics ORDER BY height ASC;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT id, username, email, age FROM users;",
      "SELECT id, workout_type, duration FROM workouts;",
      "SELECT * FROM workouts WHERE workout_type = 'Cardio';",
      "SELECT * FROM exercises;",
      "SELECT exercise_name, muscle_group FROM exercises;",
      "SELECT * FROM fitness_logs;",
      "SELECT id, user_id, workout_id, exercise_id, date FROM fitness_logs;",
      "SELECT id, user_id, workout_id, exercise_id, date, sets, reps FROM fitness_logs;",
      "SELECT users.id, users.username, fitness_logs.date, fitness_logs.sets, fitness_logs.reps FROM users JOIN fitness_logs ON users.id = fitness_logs.user_id;",
      "SELECT users.username, workouts.workout_type, exercises.exercise_name FROM users JOIN fitness_logs ON users.id = fitness_logs.user_id JOIN workouts ON fitness_logs.workout_id = workouts.id JOIN exercises ON fitness_logs.exercise_id = exercises.id;",
      "SELECT users.*, fitness_logs.date, workouts.workout_type, exercises.exercise_name FROM users JOIN fitness_logs ON users.id = fitness_logs.user_id JOIN workouts ON fitness_logs.workout_id = workouts.id JOIN exercises ON fitness_logs.exercise_id = exercises.id;",
      "SELECT users.username, COUNT(fitness_logs.id) AS total_logs FROM users JOIN fitness_logs ON users.id = fitness_logs.user_id GROUP BY users.username;",
      "SELECT users.username, SUM(fitness_logs.sets) AS total_sets, SUM(fitness_logs.reps) AS total_reps FROM users JOIN fitness_logs ON users.id = fitness_logs.user_id GROUP BY users.username;",
      "SELECT users.username, AVG(fitness_logs.sets) AS avg_sets, AVG(fitness_logs.reps) AS avg_reps FROM users JOIN fitness_logs ON users.id = fitness_logs.user_id GROUP BY users.username;",
      "SELECT users.username, MAX(fitness_logs.sets) AS max_sets, MIN(fitness_logs.reps) AS min_reps FROM users JOIN fitness_logs ON users.id = fitness_logs.user_id GROUP BY users.username;",
      "SELECT * FROM users WHERE age > 30;",
      "SELECT users.username, COUNT(fitness_logs.id) AS total_logs FROM users JOIN fitness_logs ON users.id = fitness_logs.user_id WHERE users.age < 40 GROUP BY users.username;",
      "SELECT users.username, workouts.workout_type, exercises.exercise_name FROM users JOIN fitness_logs ON users.id = fitness_logs.user_id JOIN workouts ON fitness_logs.workout_id = workouts.id JOIN exercises ON fitness_logs.exercise_id = exercises.id WHERE users.age > 30;",
      "SELECT users.username, workouts.workout_type, exercises.exercise_name FROM users JOIN fitness_logs ON users.id = fitness_logs.user_id JOIN workouts ON fitness_logs.workout_id = workouts.id JOIN exercises ON fitness_logs.exercise_id = exercises.id WHERE fitness_logs.sets > 5;"
    ]
  },
  {
    "statements": [
      "SELECT * FROM users;",
      "SELECT user_id, username, email FROM users;",
      "SELECT username, age FROM users WHERE age > 30;",
      "SELECT * FROM activities;",
      "SELECT activity_name, description FROM activities WHERE difficulty_level > 5;",
      "SELECT * FROM workouts;",
      "SELECT user_id, start_time FROM workouts ORDER BY start_time DESC;",
      "SELECT activity_id, calories_burned FROM workouts WHERE calories_burned > 200;",
      "SELECT * FROM goals;",
      "SELECT user_id, goal_name, deadline FROM goals WHERE target < 1000;",
      "SELECT * FROM progress;",
      "SELECT goal_id, progress, date FROM progress WHERE progress > 50;",
      "SELECT u.username, g.goal_name, p.progress FROM users u JOIN goals g ON u.user_id = g.user_id JOIN progress p ON g.goal_id = p.goal_id;",
      "SELECT u.username, g.goal_name, p.progress FROM users u, goals g, progress p WHERE u.user_id = g.user_id AND g.goal_id = p.goal_id;",
      "SELECT a.activity_name, w.start_time, w.end_time FROM activities a JOIN workouts w ON a.activity_id = w.activity_id;",
      "SELECT u.username, g.goal_name, g.deadline, p.progress, p.date FROM users u JOIN goals g ON u.user_id = g.user_id JOIN progress p ON g.goal_id = p.goal_id;",
      "SELECT u.username, g.goal_name, g.deadline, p.progress, p.date FROM users u, goals g, progress p WHERE u.user_id = g.user_id AND g.goal_id = p.goal_id;",
      "SELECT COUNT(*) FROM users;",
      "SELECT COUNT(*) FROM activities;",
      "SELECT AVG(difficulty_level) FROM activities;",
      "SELECT SUM(calories_burned) FROM workouts;"
    ]
  }
]